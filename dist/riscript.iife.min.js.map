{"version":3,"sources":["../node_modules/he/he.js","../src/index.js","../src/riscript.js","../node_modules/mingo/dist/esm/util.js","../node_modules/mingo/dist/esm/core.js","../node_modules/mingo/dist/esm/operators/expression/boolean/index.js","../node_modules/mingo/dist/esm/operators/expression/boolean/and.js","../node_modules/mingo/dist/esm/operators/expression/boolean/not.js","../node_modules/mingo/dist/esm/operators/expression/boolean/or.js","../node_modules/mingo/dist/esm/operators/expression/comparison/index.js","../node_modules/mingo/dist/esm/operators/expression/comparison/cmp.js","../node_modules/mingo/dist/esm/lazy.js","../node_modules/mingo/dist/esm/aggregator.js","../node_modules/mingo/dist/esm/cursor.js","../node_modules/mingo/dist/esm/query.js","../node_modules/mingo/dist/esm/operators/_predicates.js","../node_modules/mingo/dist/esm/operators/expression/comparison/eq.js","../node_modules/mingo/dist/esm/operators/expression/comparison/gt.js","../node_modules/mingo/dist/esm/operators/expression/comparison/gte.js","../node_modules/mingo/dist/esm/operators/expression/comparison/lt.js","../node_modules/mingo/dist/esm/operators/expression/comparison/lte.js","../node_modules/mingo/dist/esm/operators/expression/comparison/ne.js","../node_modules/mingo/dist/esm/operators/expression/date/_internal.js","../node_modules/mingo/dist/esm/operators/window/_internal.js","../node_modules/mingo/dist/esm/operators/pipeline/sort.js","../node_modules/mingo/dist/esm/operators/pipeline/limit.js","../node_modules/mingo/dist/esm/operators/expression/array/nin.js","../node_modules/mingo/dist/esm/operators/expression/array/slice.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/_internal.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/bitAnd.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/bitOr.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/bitXor.js","../node_modules/mingo/dist/esm/operators/expression/date/dateFromString.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/_internal.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/acos.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/acosh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/asin.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/asinh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/atan.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/atanh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/cos.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/cosh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/degreesToRadians.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/radiansToDegrees.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/sin.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/sinh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/tan.js","../node_modules/mingo/dist/esm/operators/pipeline/project.js","../node_modules/mingo/dist/esm/operators/pipeline/skip.js","../node_modules/mingo/dist/esm/operators/projection/index.js","../node_modules/mingo/dist/esm/operators/projection/elemMatch.js","../node_modules/mingo/dist/esm/operators/projection/slice.js","../node_modules/mingo/dist/esm/operators/query/index.js","../node_modules/mingo/dist/esm/operators/query/array/all.js","../node_modules/mingo/dist/esm/operators/query/array/elemMatch.js","../node_modules/mingo/dist/esm/operators/query/array/size.js","../node_modules/mingo/dist/esm/operators/query/bitwise/_internal.js","../node_modules/mingo/dist/esm/operators/query/bitwise/bitsAllClear.js","../node_modules/mingo/dist/esm/operators/query/bitwise/bitsAllSet.js","../node_modules/mingo/dist/esm/operators/query/bitwise/bitsAnyClear.js","../node_modules/mingo/dist/esm/operators/query/bitwise/bitsAnySet.js","../node_modules/mingo/dist/esm/operators/query/comparison/eq.js","../node_modules/mingo/dist/esm/operators/query/comparison/gt.js","../node_modules/mingo/dist/esm/operators/query/comparison/gte.js","../node_modules/mingo/dist/esm/operators/query/comparison/in.js","../node_modules/mingo/dist/esm/operators/query/comparison/lt.js","../node_modules/mingo/dist/esm/operators/query/comparison/lte.js","../node_modules/mingo/dist/esm/operators/query/comparison/ne.js","../node_modules/mingo/dist/esm/operators/query/comparison/nin.js","../node_modules/mingo/dist/esm/operators/query/element/exists.js","../node_modules/mingo/dist/esm/operators/query/element/type.js","../node_modules/mingo/dist/esm/operators/query/evaluation/expr.js","../node_modules/mingo/dist/esm/operators/query/evaluation/jsonSchema.js","../node_modules/mingo/dist/esm/operators/query/evaluation/mod.js","../node_modules/mingo/dist/esm/operators/query/evaluation/regex.js","../node_modules/mingo/dist/esm/operators/query/evaluation/where.js","../node_modules/mingo/dist/esm/operators/query/logical/and.js","../node_modules/mingo/dist/esm/operators/query/logical/or.js","../node_modules/mingo/dist/esm/operators/query/logical/nor.js","../node_modules/mingo/dist/esm/operators/query/logical/not.js","../node_modules/mingo/dist/esm/init/basic.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isSymbol.js","../node_modules/lodash-es/_arrayMap.js","../node_modules/lodash-es/isArray.js","../node_modules/lodash-es/_baseToString.js","../node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/lodash-es/_baseTrim.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/toNumber.js","../node_modules/lodash-es/toFinite.js","../node_modules/lodash-es/toInteger.js","../node_modules/lodash-es/identity.js","../node_modules/lodash-es/isFunction.js","../node_modules/lodash-es/_coreJsData.js","../node_modules/lodash-es/_isMasked.js","../node_modules/lodash-es/_toSource.js","../node_modules/lodash-es/_baseIsNative.js","../node_modules/lodash-es/_getValue.js","../node_modules/lodash-es/_getNative.js","../node_modules/lodash-es/_WeakMap.js","../node_modules/lodash-es/_baseCreate.js","../node_modules/lodash-es/_apply.js","../node_modules/lodash-es/noop.js","../node_modules/lodash-es/_copyArray.js","../node_modules/lodash-es/_shortOut.js","../node_modules/lodash-es/constant.js","../node_modules/lodash-es/_defineProperty.js","../node_modules/lodash-es/_baseSetToString.js","../node_modules/lodash-es/_setToString.js","../node_modules/lodash-es/_arrayEach.js","../node_modules/lodash-es/_baseFindIndex.js","../node_modules/lodash-es/_baseIsNaN.js","../node_modules/lodash-es/_strictIndexOf.js","../node_modules/lodash-es/_baseIndexOf.js","../node_modules/lodash-es/_arrayIncludes.js","../node_modules/lodash-es/_isIndex.js","../node_modules/lodash-es/_baseAssignValue.js","../node_modules/lodash-es/eq.js","../node_modules/lodash-es/_assignValue.js","../node_modules/lodash-es/_copyObject.js","../node_modules/lodash-es/_overRest.js","../node_modules/lodash-es/_baseRest.js","../node_modules/lodash-es/isLength.js","../node_modules/lodash-es/isArrayLike.js","../node_modules/lodash-es/_isIterateeCall.js","../node_modules/lodash-es/_createAssigner.js","../node_modules/lodash-es/_isPrototype.js","../node_modules/lodash-es/_baseTimes.js","../node_modules/lodash-es/_baseIsArguments.js","../node_modules/lodash-es/isArguments.js","../node_modules/lodash-es/stubFalse.js","../node_modules/lodash-es/isBuffer.js","../node_modules/lodash-es/_baseIsTypedArray.js","../node_modules/lodash-es/_baseUnary.js","../node_modules/lodash-es/_nodeUtil.js","../node_modules/lodash-es/isTypedArray.js","../node_modules/lodash-es/_arrayLikeKeys.js","../node_modules/lodash-es/_overArg.js","../node_modules/lodash-es/_nativeKeys.js","../node_modules/lodash-es/_baseKeys.js","../node_modules/lodash-es/keys.js","../node_modules/lodash-es/assign.js","../node_modules/lodash-es/_nativeKeysIn.js","../node_modules/lodash-es/_baseKeysIn.js","../node_modules/lodash-es/keysIn.js","../node_modules/lodash-es/_isKey.js","../node_modules/lodash-es/_nativeCreate.js","../node_modules/lodash-es/_hashClear.js","../node_modules/lodash-es/_hashDelete.js","../node_modules/lodash-es/_hashGet.js","../node_modules/lodash-es/_hashHas.js","../node_modules/lodash-es/_hashSet.js","../node_modules/lodash-es/_Hash.js","../node_modules/lodash-es/_listCacheClear.js","../node_modules/lodash-es/_assocIndexOf.js","../node_modules/lodash-es/_listCacheDelete.js","../node_modules/lodash-es/_listCacheGet.js","../node_modules/lodash-es/_listCacheHas.js","../node_modules/lodash-es/_listCacheSet.js","../node_modules/lodash-es/_ListCache.js","../node_modules/lodash-es/_Map.js","../node_modules/lodash-es/_mapCacheClear.js","../node_modules/lodash-es/_isKeyable.js","../node_modules/lodash-es/_getMapData.js","../node_modules/lodash-es/_mapCacheDelete.js","../node_modules/lodash-es/_mapCacheGet.js","../node_modules/lodash-es/_mapCacheHas.js","../node_modules/lodash-es/_mapCacheSet.js","../node_modules/lodash-es/_MapCache.js","../node_modules/lodash-es/memoize.js","../node_modules/lodash-es/_memoizeCapped.js","../node_modules/lodash-es/_stringToPath.js","../node_modules/lodash-es/toString.js","../node_modules/lodash-es/_castPath.js","../node_modules/lodash-es/_toKey.js","../node_modules/lodash-es/_baseGet.js","../node_modules/lodash-es/get.js","../node_modules/lodash-es/_arrayPush.js","../node_modules/lodash-es/_isFlattenable.js","../node_modules/lodash-es/_baseFlatten.js","../node_modules/lodash-es/flatten.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/_baseSlice.js","../node_modules/lodash-es/_arrayReduce.js","../node_modules/lodash-es/_stackClear.js","../node_modules/lodash-es/_stackDelete.js","../node_modules/lodash-es/_stackGet.js","../node_modules/lodash-es/_stackHas.js","../node_modules/lodash-es/_stackSet.js","../node_modules/lodash-es/_Stack.js","../node_modules/lodash-es/_baseAssign.js","../node_modules/lodash-es/_baseAssignIn.js","../node_modules/lodash-es/_cloneBuffer.js","../node_modules/lodash-es/_arrayFilter.js","../node_modules/lodash-es/stubArray.js","../node_modules/lodash-es/_getSymbols.js","../node_modules/lodash-es/_copySymbols.js","../node_modules/lodash-es/_getSymbolsIn.js","../node_modules/lodash-es/_copySymbolsIn.js","../node_modules/lodash-es/_baseGetAllKeys.js","../node_modules/lodash-es/_getAllKeys.js","../node_modules/lodash-es/_getAllKeysIn.js","../node_modules/lodash-es/_DataView.js","../node_modules/lodash-es/_Promise.js","../node_modules/lodash-es/_Set.js","../node_modules/lodash-es/_getTag.js","../node_modules/lodash-es/_initCloneArray.js","../node_modules/lodash-es/_Uint8Array.js","../node_modules/lodash-es/_cloneArrayBuffer.js","../node_modules/lodash-es/_cloneDataView.js","../node_modules/lodash-es/_cloneRegExp.js","../node_modules/lodash-es/_cloneSymbol.js","../node_modules/lodash-es/_cloneTypedArray.js","../node_modules/lodash-es/_initCloneByTag.js","../node_modules/lodash-es/_initCloneObject.js","../node_modules/lodash-es/_baseIsMap.js","../node_modules/lodash-es/isMap.js","../node_modules/lodash-es/_baseIsSet.js","../node_modules/lodash-es/isSet.js","../node_modules/lodash-es/_baseClone.js","../node_modules/lodash-es/clone.js","../node_modules/lodash-es/compact.js","../node_modules/lodash-es/_setCacheAdd.js","../node_modules/lodash-es/_setCacheHas.js","../node_modules/lodash-es/_SetCache.js","../node_modules/lodash-es/_arraySome.js","../node_modules/lodash-es/_cacheHas.js","../node_modules/lodash-es/_equalArrays.js","../node_modules/lodash-es/_mapToArray.js","../node_modules/lodash-es/_setToArray.js","../node_modules/lodash-es/_equalByTag.js","../node_modules/lodash-es/_equalObjects.js","../node_modules/lodash-es/_baseIsEqualDeep.js","../node_modules/lodash-es/_baseIsEqual.js","../node_modules/lodash-es/_baseIsMatch.js","../node_modules/lodash-es/_isStrictComparable.js","../node_modules/lodash-es/_getMatchData.js","../node_modules/lodash-es/_matchesStrictComparable.js","../node_modules/lodash-es/_baseMatches.js","../node_modules/lodash-es/_baseHasIn.js","../node_modules/lodash-es/_hasPath.js","../node_modules/lodash-es/hasIn.js","../node_modules/lodash-es/_baseMatchesProperty.js","../node_modules/lodash-es/_baseProperty.js","../node_modules/lodash-es/_basePropertyDeep.js","../node_modules/lodash-es/property.js","../node_modules/lodash-es/_baseIteratee.js","../node_modules/lodash-es/_arrayAggregator.js","../node_modules/lodash-es/_createBaseFor.js","../node_modules/lodash-es/_baseFor.js","../node_modules/lodash-es/_baseForOwn.js","../node_modules/lodash-es/_createBaseEach.js","../node_modules/lodash-es/_baseEach.js","../node_modules/lodash-es/_baseAggregator.js","../node_modules/lodash-es/_createAggregator.js","../node_modules/lodash-es/defaults.js","../node_modules/lodash-es/isArrayLikeObject.js","../node_modules/lodash-es/_arrayIncludesWith.js","../node_modules/lodash-es/_baseDifference.js","../node_modules/lodash-es/difference.js","../node_modules/lodash-es/last.js","../node_modules/lodash-es/drop.js","../node_modules/lodash-es/dropRight.js","../node_modules/lodash-es/_castFunction.js","../node_modules/lodash-es/forEach.js","../node_modules/lodash-es/_arrayEvery.js","../node_modules/lodash-es/_baseEvery.js","../node_modules/lodash-es/every.js","../node_modules/lodash-es/_baseFilter.js","../node_modules/lodash-es/filter.js","../node_modules/lodash-es/_createFind.js","../node_modules/lodash-es/findIndex.js","../node_modules/lodash-es/find.js","../node_modules/lodash-es/head.js","../node_modules/lodash-es/_baseMap.js","../node_modules/lodash-es/map.js","../node_modules/lodash-es/flatMap.js","../node_modules/lodash-es/groupBy.js","../node_modules/lodash-es/_baseHas.js","../node_modules/lodash-es/has.js","../node_modules/lodash-es/isString.js","../node_modules/lodash-es/_baseValues.js","../node_modules/lodash-es/values.js","../node_modules/lodash-es/includes.js","../node_modules/lodash-es/indexOf.js","../node_modules/lodash-es/isEmpty.js","../node_modules/lodash-es/_baseIsRegExp.js","../node_modules/lodash-es/isRegExp.js","../node_modules/lodash-es/isUndefined.js","../node_modules/lodash-es/negate.js","../node_modules/lodash-es/_baseSet.js","../node_modules/lodash-es/_basePickBy.js","../node_modules/lodash-es/pickBy.js","../node_modules/lodash-es/_baseReduce.js","../node_modules/lodash-es/reduce.js","../node_modules/lodash-es/reject.js","../node_modules/lodash-es/_baseSome.js","../node_modules/lodash-es/some.js","../node_modules/lodash-es/_createSet.js","../node_modules/lodash-es/_baseUniq.js","../node_modules/lodash-es/uniq.js","../node_modules/@chevrotain/utils/src/print.ts","../node_modules/@chevrotain/utils/src/timer.ts","../node_modules/@chevrotain/utils/src/to-fast-properties.ts","../node_modules/@chevrotain/gast/src/model.ts","../node_modules/@chevrotain/gast/src/visitor.ts","../node_modules/@chevrotain/gast/src/helpers.ts","../node_modules/chevrotain/src/parse/grammar/rest.ts","../node_modules/chevrotain/src/parse/grammar/first.ts","../node_modules/chevrotain/src/parse/constants.ts","../node_modules/chevrotain/src/parse/grammar/follow.ts","../node_modules/@chevrotain/regexp-to-ast/src/utils.ts","../node_modules/@chevrotain/regexp-to-ast/src/character-classes.ts","../node_modules/@chevrotain/regexp-to-ast/src/regexp-parser.ts","../node_modules/@chevrotain/regexp-to-ast/src/base-regexp-visitor.ts","../node_modules/chevrotain/src/scan/reg_exp_parser.ts","../node_modules/chevrotain/src/scan/reg_exp.ts","../node_modules/chevrotain/src/scan/lexer.ts","../node_modules/chevrotain/src/scan/tokens.ts","../node_modules/chevrotain/src/scan/lexer_errors_public.ts","../node_modules/chevrotain/src/scan/lexer_public.ts","../node_modules/chevrotain/src/scan/tokens_public.ts","../node_modules/chevrotain/src/parse/errors_public.ts","../node_modules/chevrotain/src/parse/grammar/resolver.ts","../node_modules/chevrotain/src/parse/grammar/interpreter.ts","../node_modules/chevrotain/src/parse/grammar/lookahead.ts","../node_modules/chevrotain/src/parse/grammar/checks.ts","../node_modules/chevrotain/src/parse/grammar/gast/gast_resolver_public.ts","../node_modules/chevrotain/src/parse/exceptions_public.ts","../node_modules/chevrotain/src/parse/parser/traits/recoverable.ts","../node_modules/chevrotain/src/parse/grammar/keys.ts","../node_modules/chevrotain/src/parse/grammar/llk_lookahead.ts","../node_modules/chevrotain/src/parse/parser/traits/looksahead.ts","../node_modules/chevrotain/src/parse/cst/cst.ts","../node_modules/chevrotain/src/lang/lang_extensions.ts","../node_modules/chevrotain/src/parse/cst/cst_visitor.ts","../node_modules/chevrotain/src/parse/parser/traits/tree_builder.ts","../node_modules/chevrotain/src/parse/parser/traits/lexer_adapter.ts","../node_modules/chevrotain/src/parse/parser/traits/recognizer_api.ts","../node_modules/chevrotain/src/parse/parser/traits/recognizer_engine.ts","../node_modules/chevrotain/src/parse/parser/traits/error_handler.ts","../node_modules/chevrotain/src/parse/parser/traits/context_assist.ts","../node_modules/chevrotain/src/parse/parser/traits/gast_recorder.ts","../node_modules/chevrotain/src/parse/parser/traits/perf_tracer.ts","../node_modules/chevrotain/src/parse/parser/utils/apply_mixins.ts","../node_modules/chevrotain/src/parse/parser/parser.ts","../src/tokens.js","../src/parser.js","../src/visitor.js","../src/grammar.js"],"sourcesContent":["/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we’re still here, `if ($7)` is implied; it’s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n","import { RiScript } from './riscript.js';\nimport { RiGrammar } from './grammar.js';\nimport { RiScriptVisitor } from './visitor.js';\n\nRiScript.Grammar = RiGrammar;\nRiScript.Visitor = RiScriptVisitor;\n\nexport default RiScript\n","import he from 'he';\nimport { Query } from 'mingo';\nimport { Lexer } from 'chevrotain';\n\nimport { getTokens } from './tokens.js';\nimport { RiScriptParser } from './parser.js';\nimport { RiScriptVisitor } from './visitor.js';\n\n/*\n  Specification:\n    script: expr+\n    expr: (atom)+\n    wexpr: (atom)+ weight\n    symbol: SYM transform*\n    assign: SYM EQ expr transform*\n    gate: @mingo@\n    silent: { gate? expr }\n    atom: (choice | symbol | text | silent) weight?\n    choice: [ gate? ( expr | wexpr ) (OR  (expr | wexpr ) )* else? ] transform*\n    else: ELSE expr\n    raw: Raw\n*/\n\nconst { decode } = he;\nconst VowelRE = /[aeiou]/;\nconst RegexEscape = '_RE_';\nconst HtmlEntities = /&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-fA-F]{1,6});/gi;\n\nclass RiQuery extends Query {\n  constructor(scripting, condition, options) {\n    if (typeof condition === 'string') {\n      let raw = condition; // eslint-disable-line\n      condition = scripting.parseJSOL(condition);\n      // console.log('RAW: ', raw, 'parsed', condition);\n    }\n    super(condition, options);\n  }\n\n  test(obj) {\n    for (let i = 0, len = this.compiled.length; i < len; i++) {\n      if (!this.compiled[i](obj)) return false;\n    }\n    return true;\n  }\n\n  operands() {\n    const stack = [this.condition];\n    const keys = new Set();\n    while (stack?.length > 0) {\n      const currentObj = stack.pop();\n      Object.keys(currentObj).forEach((key) => {\n        const value = currentObj[key];\n        // console.log(`key: ${ key }, value: ${ value } `);\n        if (!key.startsWith('$')) keys.add(key);\n        if (typeof value === 'object' && value !== null) {\n          const eles = Array.isArray(value) ? value : [value];\n          eles.forEach((ele) => stack.push(ele));\n        }\n      });\n    }\n    return Array.from(keys);\n  }\n}\n\nclass RiScript {\n  static Query = RiQuery;\n\n  static VERSION = '1.0.25';\n  static RiTaWarnings = { plurals: false, phones: false };\n\n  static evaluate(script, context, opts = {}) {\n    return new RiScript(opts).evaluate(script, context, opts);\n  }\n\n  constructor(opts = {}) { // private ?\n    this.visitor = 0; // created in evaluate() or passed in here\n    this.v2Compatible = opts.compatibility === 2;\n    const { Constants, tokens } = getTokens(this.v2Compatible);\n    const { Escaped, Symbols } = Constants;\n\n    this.Escaped = Escaped;\n    this.Symbols = Symbols;\n\n    const open = Escaped.OPEN_CHOICE;\n    const close = Escaped.CLOSE_CHOICE;\n    const anysym = Escaped.STATIC + Escaped.DYNAMIC;\n\n    this.JSOLIdentRE = new RegExp(`([${anysym}]?[A-Za-z_0-9][A-Za-z_0-9]*)\\\\s*:`, 'g');\n    this.RawAssignRE = new RegExp(`^[${anysym}][A-Za-z_0-9][A-Za-z_0-9]*\\\\s*=`);\n    this.ChoiceWrapRE = new RegExp('^' + open + '[^' + open + close + ']*' + close + '$');\n\n    this.EntityRE = tokens.modes.normal.filter(t => t.name === 'Entity')[0].PATTERN;\n    this.SpecialRE = new RegExp(`[${Escaped.SPECIAL.replace('&', '')}]`);\n    this.ContinueRE = new RegExp(Escaped.CONTINUATION + '\\\\r?\\\\n', 'g');\n    this.WhitespaceRE = /[\\u00a0\\u2000-\\u200b\\u2028-\\u2029\\u3000]+/g;\n    this.StaticSymbol = new RegExp(Escaped.STATIC + '[A-Za-z_0-9][A-Za-z_0-9]*');\n    this.ValidSymbolRE = new RegExp('(' + Escaped.DYNAMIC + '|' + Escaped.STATIC + '[A-Za-z_0-9])[A-Za-z_0-9]*');\n    this.AnySymbolRE = new RegExp(`[${anysym}]`); // added\n\n\n    this.silent = false;\n    this.lexer = new Lexer(tokens);\n    this.parser = new RiScriptParser(tokens);\n    this.RiTa = opts.RiTa || {\n      VERSION: 0,\n      randi: (k) => Math.floor(Math.random() * k),\n    }\n  }\n\n  lex(opts) {\n    if (!opts.input) throw Error('no input');\n    const lexResult = this.lexer.tokenize(opts.input);\n    if (lexResult.errors.length) {\n      console.error('Input: ' + opts.input + '\\n', lexResult.errors[0].message);\n      throw Error('[LEXING] ' + lexResult.errors[0].message);\n    }\n    if (opts.trace) this.printTokens(lexResult.tokens);\n    opts.tokens = lexResult.tokens;\n    // return lexResult;\n  }\n\n  parse(opts) {\n    opts.cst = this.parser.parse(opts);\n  }\n\n  visit(opts) {\n    return this.visitor.start(opts);\n  }\n\n  lexParseVisit(opts = {}) {\n    this.lex(opts);\n    this.parse(opts);\n    return this.visit(opts);\n  }\n\n  evaluate(script, context, opts = {}) {\n    if (typeof script !== 'string') {\n      throw Error('RiScript.evaluate() expects a string, got ' + typeof script);\n    }\n    opts.input = script;\n    opts.visitor = new RiScriptVisitor(this, context);\n    return this._evaluate(opts);\n  }\n\n  _evaluate(opts) {\n    const { input } = opts;\n\n    // opts.onepass = true; // TMP\n\n    let last, endingBreak = /\\r?\\n$/.test(input); // keep\n\n    let expr = this.preParse(input, opts);\n    if (!expr) return '';\n\n    if (opts.trace) console.log(`\\nInput:  '${RiScript._escapeText(input)}'`);\n    if (opts.trace && input !== expr) {\n      console.log(`Parsed: '${RiScript._escapeText(expr)}'`);\n    }\n\n    if (!opts.visitor) throw Error('no visitor');\n    this.visitor = opts.visitor;\n    delete opts.visitor; // remind me why\n\n    for (let i = 1; expr !== last && i <= 10; i++) {\n      last = expr;\n\n      if (opts.trace) console.log('-'.repeat(20)\n        + ' Pass#' + i + ' ' + '-'.repeat(20));\n\n      opts.input = expr;\n      expr = this.lexParseVisit(opts); // do it\n\n      if (opts.trace) {\n        console.log(`Result(${i}) -> \"` + `${RiScript._escapeText(expr)}\"`\n          + ` ctx=${this.visitor.lookupsToString()}`);\n      }\n\n      // end if no more riscript\n      if (opts.onepass || !this.isParseable(expr)) break;\n    }\n\n    // check for unresolved symbols ([$#]) after removing HTML entities\n    if (!this.silent && !this.RiTa.SILENT) {\n      if (this.ValidSymbolRE.test(expr.replace(HtmlEntities, ''))) {\n        console.warn('[WARN] Unresolved symbol(s) in \"'\n          + expr.replace(/\\n/g, '\\\\n') + '\" ');\n      }\n    }\n\n    return this.postParse(expr, opts) + (endingBreak ? '\\n' : '');\n  }\n\n  _query(rawQuery, opts) {\n    return new RiQuery(this, rawQuery, opts);\n  }\n\n  printTokens(tokens) {\n    let s = tokens.reduce((str, t) => {\n      let { name } = t.tokenType;\n      let tag = name;\n      if (tag === 'TEXT') tag = RiScript._escapeText(t.image, 1);\n      if (tag === 'SYM') tag = 'sym(' + t.image + ')';\n      if (tag === 'TX') tag = 'tx(' + t.image + ')';\n      return str + tag + ', ';\n    }, '')\n      .slice(0, -2);\n    console.log('\\nTokens: [ ' + s + ' ]  Context:',\n      this.visitor.lookupsToString());\n  }\n\n  postParse(input, opts) {\n    if (typeof input !== 'string') return '';\n\n    // replace html entities\n    let decoded = decode(input);\n\n    // clean up whitespace, linebreaks\n    let result = decoded.replace(this.WhitespaceRE, ' ').replace(/\\r?\\n$/, '');\n\n    // handle unresolved gates\n    let gates = [...result.matchAll(this.Symbols.PENDING_GATE_RE)];\n    gates.forEach((g) => {\n      if (!g || !g[0] || !g[1]) throw Error('bad gate: ' + g);\n      let deferredGate = this.visitor.pendingGates[g[1]];\n      let { deferredContext, operands } = deferredGate;\n      if (!operands.length) throw Error('no operands');\n      let reject = this.visitor.choice(deferredContext, { forceReject: true });\n\n      result = result.replace(g[0], reject);\n      if (opts.trace) console.log('  ' + g[0] + '-> ' + reject);\n    });\n\n    if (opts.trace) console.log(`\\nFinal: '${result}'`);\n\n    if (!opts.preserveLookups) {\n      // reset lookups unless preserveLookups=true (for testing only)\n      this.visitor.statics = undefined;\n      this.visitor.dynamics = undefined;\n    }\n\n    return result;\n  }\n\n  preParse(script, opts) {\n    if (typeof script !== 'string') return '';\n\n    const $ = this.Symbols;\n\n    let input = script;\n    if (!this.v2Compatible) {\n      // handle parenthesized weights ??\n      input = input.replace(/\\((\\s*\\d+\\s*)\\)/g, '^$1^');\n    }\n\n    input = input.replace(/\\/\\*[^]*?(\\r?\\n)?\\//g, ''); // multi-line comments\n    input = input.replace(/\\/\\/[^\\n]+(\\r?\\n|$)/g, ''); // single-line comments\n    input = input.replace(this.ContinueRE, ''); // line continuations\n    input = slashEscapesToEntities(input); // double-backslashed escapes\n\n    let result = '';\n    let lines = input.split(/\\r?\\n/);\n    for (let i = 0; i < lines.length; i++) {\n      // special-case: handle assignments alone on a line\n      if (/*!opts.noAddedSilence && */ this.RawAssignRE.test(lines[i])) {\n        // a very convoluted way of preserving line-breaks inside groups\n        let eqIdx = lines[i].indexOf('=');\n        if (eqIdx < 0) throw Error('invalid state: no assigment: ' + lines[i]);\n        let lhs = lines[i].substring(0, eqIdx),\n          rhs = lines[i].substring(eqIdx + 1);\n        let opens = charCount(rhs, $.OPEN_CHOICE);\n        let closes = charCount(rhs, $.CLOSE_CHOICE);\n        while (opens > closes) {\n          let line = lines[++i];\n          rhs += '\\n' + line;\n          opens += charCount(line, $.OPEN_CHOICE);\n          closes += charCount(line, $.CLOSE_CHOICE);\n        }\n        result += $.OPEN_SILENT + (lhs + '=' + rhs) + $.CLOSE_SILENT;\n      } else {\n        result += lines[i];\n        if (i < lines.length - 1) result += '\\n';\n      }\n    }\n\n    return result;\n  }\n\n  /*\n   * Parses a mingo query into JSON format\n   */\n  parseJSOL(text) {\n    const unescapeRegexProperty = (text) => {\n      // TODO: why do we need this?\n      let res = text;\n      if (\n        typeof text === 'string' &&\n        text.startsWith(RegexEscape) &&\n        text.endsWith(RegexEscape)\n      ) {\n        let parts = text.split(RegexEscape);\n        if (parts.length !== 4) throw Error('invalid regex in unescape');\n        res = new RegExp(parts[1], parts[2]);\n      }\n      return res;\n    };\n    let escaped = RiScript._escapeJSONRegex(text)\n      .replace(this.JSOLIdentRE, '\"$1\":')\n      .replace(/'/g, '\"');\n\n    // console.log(\"escaped: '\"+escaped+\"'\");\n\n    let result = JSON.parse(escaped),\n      urp = unescapeRegexProperty;\n    Object.keys(result).forEach((k) => (result[k] = urp(result[k])));\n    return result;\n  }\n\n  isParseable(s) {\n    // conservatively assume non-string/numbers are always parseable\n    let result = true;\n    let isStrOrNum = /(string|number)/.test(typeof s);\n    // if a string or num, test for special chars\n    if (isStrOrNum) result = this.SpecialRE.test(s.toString());\n    return result;\n  }\n\n  // ========================= statics ===============================\n\n\n  // Default transform that adds an article\n  static articlize(s) {\n    if (!s || !s.length) return '';\n\n    let first = s.split(/\\s+/)[0];\n\n    if (!RiScript.RiTa?.phones) {\n      if (!RiScript.RiTaWarnings.phones) {\n        console.warn('[WARN] Install RiTa for proper phonemes');\n        RiScript.RiTaWarnings.phones = true;\n      }\n      // first.startsWith('a') ? 'an ' : 'a ') + s;\n      return (/^[aeiou].*/i.test(first) ? 'an ' : 'a ') + s;\n    }\n\n    let phones = RiScript.RiTa.phones(first, { silent: true });\n\n    // could still be original word if no phones found\n    return (\n      (phones && phones.length && VowelRE.test(phones[0]) ? 'an ' : 'a ') + s\n    );\n  }\n\n  // Default transform that capitalizes the first character\n  static capitalize(s) {\n    return s ? s[0].toUpperCase() + s.substring(1) : '';\n  }\n\n  // Default transform that capitalizes the string\n  static uppercase(s) {\n    return s ? s.toUpperCase() : '';\n  }\n\n  // Default transform that wraps the string in (smart) quotes.\n  static quotify(s) {\n    return '&#8220;' + (s || '') + '&#8221;';\n  }\n\n  // Default transform that pluralizes a string (requires RiTa)\n  static pluralize(s) {\n    if (!RiScript.RiTa?.pluralize) {\n      if (!RiScript.RiTaWarnings.plurals) {\n        RiScript.RiTaWarnings.plurals = true;\n        console.warn('[WARN] Install RiTa for proper pluralization');\n      }\n      return s.endsWith('s') ? s : s + 's';\n    }\n    return RiScript.RiTa.pluralize(s);\n  }\n\n  // Default no-op transform\n  static identity(s) {\n    return s;\n  }\n\n  // static helpers\n\n  static _transformNames(txs) {\n    return txs && txs.length\n      ? txs.map((tx) => tx.image.replace(/(^\\.|\\(\\)$)/g, ''), [])\n      : [];\n  }\n\n  static _escapeText(s, quotify) {\n    if (typeof s !== 'string') return s;\n    let t = s.replace(/\\r?\\n/g, '\\\\n');\n    return quotify || !t.length ? \"'\" + t + \"'\" : t;\n  }\n\n  static _escapeJSONRegex(text) {\n    return text.replace(\n      /\\/([^/]+?)\\/([igmsuy]*)/g,\n      `\"${RegexEscape}$1${RegexEscape}$2${RegexEscape}\"`\n    );\n  }\n\n  static _stringHash(s) {\n    let chr,\n      hash = 0;\n    for (let i = 0; i < s.length; i++) {\n      chr = s.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    let strHash = hash.toString();\n    return hash < 0 ? strHash.replace('-', '0') : strHash;\n  }\n}\n\n////////////////////// STATIC PROPS ///////////////////////\n\nRiScript.transforms = {\n  quotify: RiScript.quotify,\n  pluralize: RiScript.pluralize,\n  capitalize: RiScript.capitalize,\n  articlize: RiScript.articlize,\n  uppercase: RiScript.uppercase,\n\n  // sequences\n  norepeat: RiScript.identity,\n\n  // aliases\n  art: RiScript.articlize,\n  nr: RiScript.identity,\n  cap: RiScript.capitalize,\n  ucf: RiScript.capitalize, // deprecated?\n  uc: RiScript.uppercase,\n  qq: RiScript.quotify,\n  s: RiScript.pluralize,\n};\n\n///////////////////////// FUNCTIONS /////////////////////////\n\nfunction slashEscapesToEntities(s) {\n  s = replaceAll(s, '\\\\(', '&lpar;');\n  s = replaceAll(s, '\\\\)', '&rpar;');\n  s = replaceAll(s, '\\\\[', '&lsqb;');\n  s = replaceAll(s, '\\\\]', '&rsqb;');\n  s = replaceAll(s, '\\\\{', '&lcqb;');\n  s = replaceAll(s, '\\\\}', '&rcqb;');\n  s = replaceAll(s, '\\\\@', '&commat;');\n  s = replaceAll(s, '\\\\#', '&num;');\n  s = replaceAll(s, '\\\\|', ' &vert');\n  s = replaceAll(s, '\\\\=', ' &equals');\n  return s;\n}\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nfunction replaceAll(str, match, replacement) {\n  return str.replace(new RegExp(escapeRegExp(match), 'g'), () => replacement);\n}\nfunction charCount(str, c) {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === c) count++;\n  }\n  return count;\n}\n\nexport { RiScript };","/**\n * Utility constants and functions\n */\nexport const MAX_INT = 2147483647;\nexport const MIN_INT = -2147483648;\nexport const MAX_LONG = Number.MAX_SAFE_INTEGER;\nexport const MIN_LONG = Number.MIN_SAFE_INTEGER;\n// special value to identify missing items. treated differently from undefined\nconst MISSING = Symbol(\"missing\");\nconst CYCLE_FOUND_ERROR = Object.freeze(new Error(\"mingo: cycle detected while processing object/array\"));\nconst ARRAY_PROTO = Object.getPrototypeOf([]);\nconst OBJECT_PROTO = Object.getPrototypeOf({});\nconst OBJECT_TAG = \"[object Object]\";\nconst OBJECT_TYPE_RE = /^\\[object ([a-zA-Z0-9]+)\\]$/;\nclass Null {\n}\nclass Undefined {\n}\nconst getConstructor = (v) => {\n    if (v === null)\n        return Null;\n    if (v === undefined)\n        return Undefined;\n    return v.constructor;\n};\n/**\n * Uses the simple hash method as described in Effective Java.\n * @see https://stackoverflow.com/a/113600/1370481\n * @param value The value to hash\n * @returns {number}\n */\nconst DEFAULT_HASH_FUNCTION = (value) => {\n    const s = stringify(value);\n    let hash = 0;\n    let i = s.length;\n    while (i)\n        hash = ((hash << 5) - hash) ^ s.charCodeAt(--i);\n    return hash >>> 0;\n};\n// no array, object, or function types\nconst JS_SIMPLE_TYPES = new Set([\n    \"null\",\n    \"undefined\",\n    \"boolean\",\n    \"number\",\n    \"string\",\n    \"date\",\n    \"regexp\"\n]);\nconst IMMUTABLE_TYPES_SET = new Set([Undefined, Null, Boolean, String, Number]);\n/** Convert simple value to string representation. */\nconst toString = (v) => v.toString(); // eslint-disable-line @typescript-eslint/no-base-to-string\n/** Convert a typed array to string representation. */\nconst typedArrayToString = (v) => `${getConstructor(v).name}[${v.toString()}]`; // eslint-disable-line @typescript-eslint/no-base-to-string\n/** Map of constructors to string converter functions */\nconst STRING_CONVERTERS = new Map([\n    [Number, toString],\n    [Boolean, toString],\n    [RegExp, toString],\n    [Function, toString],\n    [Symbol, toString],\n    [BigInt, (n) => \"0x\" + n.toString(16)],\n    [Date, (d) => d.toISOString()],\n    [String, JSON.stringify],\n    [Null, (_) => \"null\"],\n    [Undefined, (_) => \"undefined\"],\n    [Int8Array, typedArrayToString],\n    [Uint8Array, typedArrayToString],\n    [Uint8ClampedArray, typedArrayToString],\n    [Int16Array, typedArrayToString],\n    [Uint16Array, typedArrayToString],\n    [Int32Array, typedArrayToString],\n    [Uint32Array, typedArrayToString],\n    [Float32Array, typedArrayToString],\n    [Float64Array, typedArrayToString],\n    [BigInt64Array, typedArrayToString],\n    [BigUint64Array, typedArrayToString]\n]);\n/** MongoDB sort comparison order. https://www.mongodb.com/docs/manual/reference/bson-type-comparison-order */\nconst SORT_ORDER_BY_TYPE = {\n    null: 0,\n    undefined: 0,\n    number: 1,\n    string: 2,\n    object: 3,\n    array: 4,\n    boolean: 5,\n    date: 6,\n    regexp: 7,\n    function: 8\n};\n/**\n * Compare function which adheres to MongoDB comparison order.\n *\n * @param a The first value\n * @param b The second value\n * @returns {Number}\n */\nexport const compare = (a, b) => {\n    if (a === MISSING)\n        a = undefined;\n    if (b === MISSING)\n        b = undefined;\n    const [u, v] = [a, b].map(n => SORT_ORDER_BY_TYPE[getType(n).toLowerCase()]);\n    if (u !== v)\n        return u - v;\n    // number | string | date\n    if (u === 1 || u === 2 || u === 6) {\n        if (a < b)\n            return -1;\n        if (a > b)\n            return 1;\n        return 0;\n    }\n    // check for equivalence equality\n    if (isEqual(a, b))\n        return 0;\n    if (a < b)\n        return -1;\n    if (a > b)\n        return 1;\n    // if we get here we are comparing a type that does not make sense.\n    return 0;\n};\nexport function assert(condition, message) {\n    if (!condition)\n        throw new Error(message);\n}\nconst isTypedArray = (v) => {\n    const proto = Object.getPrototypeOf(getConstructor(v));\n    return proto && proto.name === \"TypedArray\";\n};\n/**\n * Deep clone an object. Value types and immutable objects are returned as is.\n */\nexport const cloneDeep = (obj) => {\n    if (IMMUTABLE_TYPES_SET.has(getConstructor(obj)))\n        return obj;\n    const cycle = new Set();\n    const clone = (val) => {\n        if (cycle.has(val))\n            throw CYCLE_FOUND_ERROR;\n        const ctor = getConstructor(val);\n        if (IMMUTABLE_TYPES_SET.has(ctor))\n            return val;\n        try {\n            // arrays\n            if (isArray(val)) {\n                cycle.add(val);\n                return val.map(clone);\n            }\n            // object literals\n            if (isObject(val)) {\n                cycle.add(val);\n                const res = {};\n                for (const k in val)\n                    res[k] = clone(val[k]);\n                return res;\n            }\n        }\n        finally {\n            cycle.delete(val);\n        }\n        // dates, regex, typed arrays\n        if (ctor === Date || ctor === RegExp || isTypedArray(val)) {\n            return new ctor(val);\n        }\n        return val;\n    };\n    return clone(obj);\n};\n/**\n * Returns the name of type as specified in the tag returned by a call to Object.prototype.toString\n * @param v A value\n */\nexport const getType = (v) => OBJECT_TYPE_RE.exec(Object.prototype.toString.call(v))[1];\nexport const isBoolean = (v) => typeof v === \"boolean\";\nexport const isString = (v) => typeof v === \"string\";\nexport const isSymbol = (v) => typeof v === \"symbol\";\nexport const isNumber = (v) => !isNaN(v) && typeof v === \"number\";\nexport const isBigInt = (v) => !isNaN(v) && typeof v === \"bigint\";\nexport const isNotNaN = (v) => !(isNaN(v) && typeof v === \"number\");\nexport const isArray = Array.isArray;\nexport const isObject = (v) => {\n    if (!v)\n        return false;\n    const proto = Object.getPrototypeOf(v);\n    return ((proto === OBJECT_PROTO || proto === null) &&\n        OBJECT_TAG === Object.prototype.toString.call(v));\n};\n//  objects, arrays, functions, date, custom object\nexport const isObjectLike = (v) => v === Object(v);\nexport const isDate = (v) => v instanceof Date;\nexport const isRegExp = (v) => v instanceof RegExp;\nexport const isFunction = (v) => typeof v === \"function\";\nexport const isNil = (v) => v === null || v === undefined;\nexport const inArray = (arr, item) => arr.includes(item);\nexport const notInArray = (arr, item) => !inArray(arr, item);\nexport const truthy = (arg, strict = true) => !!arg || (strict && arg === \"\");\nexport const isEmpty = (x) => isNil(x) ||\n    (isString(x) && !x) ||\n    (x instanceof Array && x.length === 0) ||\n    (isObject(x) && Object.keys(x).length === 0);\nexport const isMissing = (v) => v === MISSING;\n/** ensure a value is an array or wrapped within one. */\nexport const ensureArray = (x) => x instanceof Array ? x : [x];\nexport const has = (obj, prop) => !!obj && Object.prototype.hasOwnProperty.call(obj, prop);\nconst mergeable = (left, right) => (isObject(left) && isObject(right)) || (isArray(left) && isArray(right));\n/**\n * Deep merge objects or arrays.\n * When the inputs have unmergeable types, the  right hand value is returned.\n * If inputs are arrays and options.flatten is set, elements in the same position are merged together. Remaining elements are appended to the target object.\n * If options.flatten is false, the right hand value is just appended to the left-hand value.\n * @param target {Object|Array} the target to merge into\n * @param obj {Object|Array} the source object\n */\nexport function merge(target, obj, options) {\n    // default options\n    options = options || { flatten: false };\n    // take care of missing inputs\n    if (isMissing(target) || isNil(target))\n        return obj;\n    if (isMissing(obj) || isNil(obj))\n        return target;\n    // fail only on initial input.\n    if (!mergeable(target, obj)) {\n        if (options.skipValidation)\n            return obj || target;\n        throw Error(\"mismatched types. must both be array or object\");\n    }\n    // skip validation after initial input.\n    options.skipValidation = true;\n    if (isArray(target)) {\n        const result = target;\n        const input = obj;\n        if (options.flatten) {\n            let i = 0;\n            let j = 0;\n            while (i < result.length && j < input.length) {\n                result[i] = merge(result[i++], input[j++], options);\n            }\n            while (j < input.length) {\n                result.push(obj[j++]);\n            }\n        }\n        else {\n            into(result, input);\n        }\n    }\n    else {\n        for (const k in obj) {\n            target[k] = merge(target[k], obj[k], options);\n        }\n    }\n    return target;\n}\nfunction buildHashIndex(arr, hashFunction = DEFAULT_HASH_FUNCTION) {\n    const map = new Map();\n    arr.forEach((o, i) => {\n        const h = hashCode(o, hashFunction);\n        if (map.has(h)) {\n            if (!map.get(h).some(j => isEqual(arr[j], o))) {\n                map.get(h).push(i);\n            }\n        }\n        else {\n            map.set(h, [i]);\n        }\n    });\n    return map;\n}\n/**\n * Returns the intersection of multiple arrays.\n *\n * @param  {Array} input An array of arrays from which to find intersection.\n * @param  {Function} hashFunction Custom function to hash values, default the hashCode method\n * @return {Array} Array of intersecting values.\n */\nexport function intersection(input, hashFunction = DEFAULT_HASH_FUNCTION) {\n    // if any array is empty, there is no intersection\n    if (input.some(arr => arr.length == 0))\n        return [];\n    if (input.length === 1)\n        return Array.from(input);\n    // sort input arrays by to get smallest array\n    // const sorted = sortBy(input, (a: RawArray) => a.length) as RawArray[];\n    const sortedIndex = sortBy(input.map((a, i) => [i, a.length]), (a) => a[1]);\n    // get the smallest\n    const smallest = input[sortedIndex[0][0]];\n    // get hash index of smallest array\n    const map = buildHashIndex(smallest, hashFunction);\n    // hashIndex for remaining arrays.\n    const rmap = new Map();\n    // final intersection results and index of first occurrence.\n    const results = new Array();\n    map.forEach((v, k) => {\n        const lhs = v.map(j => smallest[j]);\n        const res = lhs.map(_ => 0);\n        // used to track first occurence of value in order of the original input array.\n        const stable = lhs.map(_ => [sortedIndex[0][0], 0]);\n        let found = false;\n        for (let i = 1; i < input.length; i++) {\n            const [currIndex, _] = sortedIndex[i];\n            const arr = input[currIndex];\n            if (!rmap.has(i))\n                rmap.set(i, buildHashIndex(arr));\n            // we found a match. let's confirm.\n            if (rmap.get(i).has(k)) {\n                const rhs = rmap\n                    .get(i)\n                    .get(k)\n                    .map(j => arr[j]);\n                // confirm the intersection with an equivalence check.\n                found = lhs\n                    .map((s, n) => rhs.some((t, m) => {\n                    // we expect only one to match here since these are just collisions.\n                    const p = res[n];\n                    if (isEqual(s, t)) {\n                        res[n]++;\n                        // track position of value ordering for stability.\n                        if (currIndex < stable[n][0]) {\n                            stable[n] = [currIndex, rmap.get(i).get(k)[m]];\n                        }\n                    }\n                    return p < res[n];\n                }))\n                    .some(Boolean);\n            }\n            // found nothing, so exclude value. this was just a hash collision.\n            if (!found)\n                return;\n        }\n        // extract value into result if we found an intersection.\n        // we find an intersection if the frequency counter matches the count of the remaining arrays.\n        if (found) {\n            into(results, res\n                .map((n, i) => {\n                return n === input.length - 1 ? [lhs[i], stable[i]] : MISSING;\n            })\n                .filter(n => n !== MISSING));\n        }\n    });\n    return results\n        .sort((a, b) => {\n        const [_i, [u, m]] = a;\n        const [_j, [v, n]] = b;\n        const r = compare(u, v);\n        if (r !== 0)\n            return r;\n        return compare(m, n);\n    })\n        .map(v => v[0]);\n}\n/**\n * Flatten the array\n *\n * @param {Array} xs The array to flatten\n * @param {Number} depth The number of nested lists to iterate\n */\nexport function flatten(xs, depth = 0) {\n    const arr = new Array();\n    function flatten2(ys, n) {\n        for (let i = 0, len = ys.length; i < len; i++) {\n            if (isArray(ys[i]) && (n > 0 || n < 0)) {\n                flatten2(ys[i], Math.max(-1, n - 1));\n            }\n            else {\n                arr.push(ys[i]);\n            }\n        }\n    }\n    flatten2(xs, depth);\n    return arr;\n}\n/** Returns all members of the value in an object literal. */\nconst getMembersOf = (value) => {\n    let [proto, names] = [\n        Object.getPrototypeOf(value),\n        Object.getOwnPropertyNames(value)\n    ];\n    // save effective prototype\n    let activeProto = proto;\n    // traverse the prototype hierarchy until we get property names or hit the bottom prototype.\n    while (!names.length && proto !== OBJECT_PROTO && proto !== ARRAY_PROTO) {\n        activeProto = proto;\n        names = Object.getOwnPropertyNames(proto);\n        proto = Object.getPrototypeOf(proto);\n    }\n    const o = {};\n    names.forEach(k => (o[k] = value[k]));\n    return [o, activeProto];\n};\n/**\n * Determine whether two values are the same or strictly equivalent.\n * Checking whether values are the same only applies to built in objects.\n * For user-defined objects this checks for only referential equality so\n * two different instances with the same values are not equal.\n *\n * @param  {*}  a The first value\n * @param  {*}  b The second value\n * @return {Boolean}   Result of comparison\n */\nexport function isEqual(a, b) {\n    const args = [[a, b]];\n    while (args.length > 0) {\n        [a, b] = args.pop();\n        // strictly equal must be equal. matches referentially equal values.\n        if (a === b)\n            continue;\n        // unequal types and functions (unless referentially equivalent) cannot be equal.\n        const ctor = getConstructor(a);\n        if (ctor !== getConstructor(b) || isFunction(a))\n            return false;\n        // string convertable types\n        if (STRING_CONVERTERS.has(ctor)) {\n            const str = STRING_CONVERTERS.get(ctor);\n            // eslint-disable-next-line @typescript-eslint/no-base-to-string\n            if (str(a) !== str(b))\n                return false;\n            // values are equal, so move next\n            continue;\n        }\n        // handle array and object types\n        if (ctor === Array || ctor === Object) {\n            const ka = Object.keys(a);\n            const kb = Object.keys(b);\n            if (ka.length !== kb.length)\n                return false;\n            if (new Set(ka.concat(kb)).size != ka.length)\n                return false;\n            for (const k of ka)\n                args.push([a[k], b[k]]);\n            // move next\n            continue;\n        }\n        // user-defined type detected.\n        // we don't try to compare user-defined types (even though we could...shhhh).\n        return false;\n    }\n    // nothing left to compare\n    return !args.length;\n}\n/**\n * Return a new unique version of the collection\n * @param  {Array} input The input collection\n * @return {Array}\n */\nexport function unique(input, hashFunction = DEFAULT_HASH_FUNCTION) {\n    const result = input.map(_ => MISSING);\n    buildHashIndex(input, hashFunction).forEach((v, _) => {\n        v.forEach(i => (result[i] = input[i]));\n    });\n    return result.filter(v => v !== MISSING);\n}\n/**\n * Encode value to string using a simple non-colliding stable scheme.\n * Handles user-defined types by processing keys on first non-empty prototype.\n * If a user-defined type provides a \"toJSON\" function, it is used.\n *\n * @param value The value to convert to a string representation.\n * @returns {String}\n */\nexport function stringify(value) {\n    const cycle = new Set();\n    // stringify with cycle check\n    const str = (v) => {\n        const ctor = getConstructor(v);\n        // string convertable types\n        if (STRING_CONVERTERS.has(ctor)) {\n            return STRING_CONVERTERS.get(ctor)(v);\n        }\n        const tag = ctor === Object ? \"\" : ctor.name;\n        // handle JSONable objects.\n        if (isFunction(v[\"toJSON\"])) {\n            return `${tag}(${JSON.stringify(v)})`;\n        }\n        // handle cycles\n        if (cycle.has(v))\n            throw CYCLE_FOUND_ERROR;\n        cycle.add(v);\n        try {\n            // handle array\n            if (ctor === Array) {\n                return \"[\" + v.map(str).join(\",\") + \"]\";\n            }\n            // handle user-defined object\n            if (ctor !== Object) {\n                // handle user-defined types or object literals.\n                const [members, _] = getMembersOf(v);\n                // custom type derived from array.\n                if (isArray(v)) {\n                    // include other members as part of array elements.\n                    return `${tag}${str([...v, members])}`;\n                }\n                // get members as literal\n                v = members;\n            }\n            const objKeys = Object.keys(v);\n            objKeys.sort();\n            return (`${tag}{` +\n                objKeys.map(k => `${k}:${str(v[k])}`).join(\",\") +\n                \"}\");\n        }\n        finally {\n            cycle.delete(v);\n        }\n    };\n    // convert to string\n    return str(value);\n}\n/**\n * Generate hash code\n * This selected function is the result of benchmarking various hash functions.\n * This version performs well and can hash 10^6 documents in ~3s with on average 100 collisions.\n *\n * @param value\n * @returns {number|null}\n */\nexport function hashCode(value, hashFunction) {\n    hashFunction = hashFunction || DEFAULT_HASH_FUNCTION;\n    if (isNil(value))\n        return null;\n    return hashFunction(value).toString();\n}\n/**\n * Returns a (stably) sorted copy of list, ranked in ascending order by the results of running each value through iteratee\n *\n * This implementation treats null/undefined sort keys as less than every other type\n *\n * @param {Array}   collection\n * @param {Function} keyFn The sort key function used to resolve sort keys\n * @param {Function} comparator The comparator function to use for comparing keys. Defaults to standard comparison via `compare(...)`\n * @return {Array} Returns a new sorted array by the given key and comparator function\n */\nexport function sortBy(collection, keyFn, comparator = compare) {\n    if (isEmpty(collection))\n        return collection;\n    const sorted = new Array();\n    const result = new Array();\n    for (let i = 0; i < collection.length; i++) {\n        const obj = collection[i];\n        const key = keyFn(obj, i);\n        if (isNil(key)) {\n            result.push(obj);\n        }\n        else {\n            sorted.push([key, obj]);\n        }\n    }\n    // use native array sorting but enforce stableness\n    sorted.sort((a, b) => comparator(a[0], b[0]));\n    return into(result, sorted.map((o) => o[1]));\n}\n/**\n * Groups the collection into sets by the returned key\n *\n * @param collection\n * @param keyFn {Function} to compute the group key of an item in the collection\n * @returns {GroupByOutput}\n */\nexport function groupBy(collection, keyFn, hashFunction = DEFAULT_HASH_FUNCTION) {\n    if (collection.length < 1)\n        return new Map();\n    // map of hash to collided values\n    const lookup = new Map();\n    // map of raw key values to objects.\n    const result = new Map();\n    for (let i = 0; i < collection.length; i++) {\n        const obj = collection[i];\n        const key = keyFn(obj, i);\n        const hash = hashCode(key, hashFunction);\n        if (hash === null) {\n            if (result.has(null)) {\n                result.get(null).push(obj);\n            }\n            else {\n                result.set(null, [obj]);\n            }\n        }\n        else {\n            // find if we can match a hash for which the value is equivalent.\n            // this is used to deal with collisions.\n            const existingKey = lookup.has(hash)\n                ? lookup.get(hash).find(k => isEqual(k, key))\n                : null;\n            // collision detected or first time seeing key\n            if (isNil(existingKey)) {\n                // collision detected or first entry so we create a new group.\n                result.set(key, [obj]);\n                // upload the lookup with the collided key\n                if (lookup.has(hash)) {\n                    lookup.get(hash).push(key);\n                }\n                else {\n                    lookup.set(hash, [key]);\n                }\n            }\n            else {\n                // key exists\n                result.get(existingKey).push(obj);\n            }\n        }\n    }\n    return result;\n}\n// max elements to push.\n// See argument limit https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\nconst MAX_ARRAY_PUSH = 50000;\n/**\n * Merge elements into the dest\n *\n * @param {*} target The target object\n * @param {*} rest The array of elements to merge into dest\n */\nexport function into(target, ...rest) {\n    if (target instanceof Array) {\n        return rest.reduce(((acc, arr) => {\n            // push arrary in batches to handle large inputs\n            let i = Math.ceil(arr.length / MAX_ARRAY_PUSH);\n            let begin = 0;\n            while (i-- > 0) {\n                Array.prototype.push.apply(acc, arr.slice(begin, begin + MAX_ARRAY_PUSH));\n                begin += MAX_ARRAY_PUSH;\n            }\n            return acc;\n        }), target);\n    }\n    else {\n        // merge objects. same behaviour as Object.assign\n        return rest.filter(isObjectLike).reduce((acc, item) => {\n            Object.assign(acc, item);\n            return acc;\n        }, target);\n    }\n}\n/**\n * This is a generic memoization function\n *\n * This implementation uses a cache independent of the function being memoized\n * to allow old values to be garbage collected when the memoized function goes out of scope.\n *\n * @param {*} fn The function object to memoize\n */\nexport function memoize(fn, hashFunction = DEFAULT_HASH_FUNCTION) {\n    return ((memo) => {\n        return (...args) => {\n            const key = hashCode(args, hashFunction) || \"\";\n            if (!has(memo, key)) {\n                memo[key] = fn.apply(this, args);\n            }\n            return memo[key];\n        };\n    })({\n    /* storage */\n    });\n}\n// mingo internal\n/**\n * Retrieve the value of a given key on an object\n * @param obj\n * @param key\n * @returns {*}\n * @private\n */\nfunction getValue(obj, key) {\n    return isObjectLike(obj) ? obj[key] : undefined;\n}\n/**\n * Unwrap a single element array to specified depth\n * @param {Array} arr\n * @param {Number} depth\n */\nfunction unwrap(arr, depth) {\n    if (depth < 1)\n        return arr;\n    while (depth-- && arr.length === 1)\n        arr = arr[0];\n    return arr;\n}\n/**\n * Resolve the value of the field (dot separated) on the given object\n * @param obj {Object} the object context\n * @param selector {String} dot separated path to field\n * @returns {*}\n */\nexport function resolve(obj, selector, options) {\n    let depth = 0;\n    function resolve2(o, path) {\n        let value = o;\n        for (let i = 0; i < path.length; i++) {\n            const field = path[i];\n            const isText = /^\\d+$/.exec(field) === null;\n            // using instanceof to aid typescript compiler\n            if (isText && value instanceof Array) {\n                // On the first iteration, we check if we received a stop flag.\n                // If so, we stop to prevent iterating over a nested array value\n                // on consecutive object keys in the selector.\n                if (i === 0 && depth > 0)\n                    break;\n                depth += 1;\n                // only look at the rest of the path\n                const subpath = path.slice(i);\n                value = value.reduce((acc, item) => {\n                    const v = resolve2(item, subpath);\n                    if (v !== undefined)\n                        acc.push(v);\n                    return acc;\n                }, []);\n                break;\n            }\n            else {\n                value = getValue(value, field);\n            }\n            if (value === undefined)\n                break;\n        }\n        return value;\n    }\n    const result = JS_SIMPLE_TYPES.has(getType(obj).toLowerCase())\n        ? obj\n        : resolve2(obj, selector.split(\".\"));\n    return result instanceof Array && (options === null || options === void 0 ? void 0 : options.unwrapArray)\n        ? unwrap(result, depth)\n        : result;\n}\n/**\n * Returns the full object to the resolved value given by the selector.\n * This function excludes empty values as they aren't practically useful.\n *\n * @param obj {Object} the object context\n * @param selector {String} dot separated path to field\n */\nexport function resolveGraph(obj, selector, options) {\n    const names = selector.split(\".\");\n    const key = names[0];\n    // get the next part of the selector\n    const next = names.slice(1).join(\".\");\n    const isIndex = /^\\d+$/.exec(key) !== null;\n    const hasNext = names.length > 1;\n    let result;\n    let value;\n    if (obj instanceof Array) {\n        if (isIndex) {\n            result = getValue(obj, Number(key));\n            if (hasNext) {\n                result = resolveGraph(result, next, options);\n            }\n            result = [result];\n        }\n        else {\n            result = [];\n            for (const item of obj) {\n                value = resolveGraph(item, selector, options);\n                if (options === null || options === void 0 ? void 0 : options.preserveMissing) {\n                    if (value === undefined) {\n                        value = MISSING;\n                    }\n                    result.push(value);\n                }\n                else if (value !== undefined) {\n                    result.push(value);\n                }\n            }\n        }\n    }\n    else {\n        value = getValue(obj, key);\n        if (hasNext) {\n            value = resolveGraph(value, next, options);\n        }\n        if (value === undefined)\n            return undefined;\n        result = (options === null || options === void 0 ? void 0 : options.preserveKeys) ? Object.assign({}, obj) : {};\n        result[key] = value;\n    }\n    return result;\n}\n/**\n * Filter out all MISSING values from the object in-place\n *\n * @param obj The object to filter\n */\nexport function filterMissing(obj) {\n    if (obj instanceof Array) {\n        for (let i = obj.length - 1; i >= 0; i--) {\n            if (obj[i] === MISSING) {\n                obj.splice(i, 1);\n            }\n            else {\n                filterMissing(obj[i]);\n            }\n        }\n    }\n    else if (isObject(obj)) {\n        for (const k in obj) {\n            if (has(obj, k)) {\n                filterMissing(obj[k]);\n            }\n        }\n    }\n}\nconst NUMBER_RE = /^\\d+$/;\n/**\n * Walk the object graph and execute the given transform function\n *\n * @param  {Object|Array} obj   The object to traverse.\n * @param  {String} selector    The selector to navigate.\n * @param  {Callback} fn Callback to execute for value at the end the traversal.\n * @param  {WalkOptions} options The opetions to use for the function.\n * @return {*}\n */\nexport function walk(obj, selector, fn, options) {\n    const names = selector.split(\".\");\n    const key = names[0];\n    const next = names.slice(1).join(\".\");\n    if (names.length === 1) {\n        if (isObject(obj) || (isArray(obj) && NUMBER_RE.test(key))) {\n            fn(obj, key);\n        }\n    }\n    else {\n        // force the rest of the graph while traversing\n        if ((options === null || options === void 0 ? void 0 : options.buildGraph) && isNil(obj[key])) {\n            obj[key] = {};\n        }\n        // get the next item\n        const item = obj[key];\n        // nothing more to do\n        if (!item)\n            return;\n        // we peek to see if next key is an array index.\n        const isNextArrayIndex = !!(names.length > 1 && NUMBER_RE.test(names[1]));\n        // if we have an array value but the next key is not an index and the 'descendArray' option is set,\n        // we walk each item in the array separately. This allows for handling traversing keys for objects\n        // nested within an array.\n        //\n        // Eg: Given { array: [ {k:1}, {k:2}, {k:3} ] }\n        //  - individual objecs can be traversed with \"array.k\"\n        //  - a specific object can be traversed with \"array.1\"\n        if (item instanceof Array && (options === null || options === void 0 ? void 0 : options.descendArray) && !isNextArrayIndex) {\n            item.forEach(((e) => walk(e, next, fn, options)));\n        }\n        else {\n            walk(item, next, fn, options);\n        }\n    }\n}\n/**\n * Set the value of the given object field\n *\n * @param obj {Object|Array} the object context\n * @param selector {String} path to field\n * @param value {*} the value to set. if it is function, it is invoked with the old value and must return the new value.\n */\nexport function setValue(obj, selector, value) {\n    walk(obj, selector, ((item, key) => {\n        item[key] = isFunction(value) ? value(item[key]) : value;\n    }), { buildGraph: true });\n}\n/**\n * Removes an element from the container.\n * If the selector resolves to an array and the leaf is a non-numeric key,\n * the remove operation will be performed on objects of the array.\n *\n * @param obj {ArrayOrObject} object or array\n * @param selector {String} dot separated path to element to remove\n */\nexport function removeValue(obj, selector, options) {\n    walk(obj, selector, ((item, key) => {\n        if (item instanceof Array) {\n            if (/^\\d+$/.test(key)) {\n                item.splice(parseInt(key), 1);\n            }\n            else if (options && options.descendArray) {\n                for (const elem of item) {\n                    if (isObject(elem)) {\n                        delete elem[key];\n                    }\n                }\n            }\n        }\n        else if (isObject(item)) {\n            delete item[key];\n        }\n    }), options);\n}\nconst OPERATOR_NAME_PATTERN = /^\\$[a-zA-Z0-9_]+$/;\n/**\n * Check whether the given name passes for an operator. We assume AnyVal field name starting with '$' is an operator.\n * This is cheap and safe to do since keys beginning with '$' should be reserved for internal use.\n * @param {String} name\n */\nexport function isOperator(name) {\n    return OPERATOR_NAME_PATTERN.test(name);\n}\n/**\n * Simplify expression for easy evaluation with query operators map\n * @param expr\n * @returns {*}\n */\nexport function normalize(expr) {\n    // normalized primitives\n    if (JS_SIMPLE_TYPES.has(getType(expr).toLowerCase())) {\n        return isRegExp(expr) ? { $regex: expr } : { $eq: expr };\n    }\n    // normalize object expression. using ObjectLike handles custom types\n    if (isObjectLike(expr)) {\n        const exprObj = expr;\n        // no valid query operator found, so we do simple comparison\n        if (!Object.keys(exprObj).some(isOperator)) {\n            return { $eq: expr };\n        }\n        // ensure valid regex\n        if (has(expr, \"$regex\")) {\n            const newExpr = Object.assign({}, expr);\n            newExpr[\"$regex\"] = new RegExp(expr[\"$regex\"], expr[\"$options\"]);\n            delete newExpr[\"$options\"];\n            return newExpr;\n        }\n    }\n    return expr;\n}\n","import { assert, has, isArray, isFunction, isNil, isObject, isObjectLike, isOperator, isString, resolve } from \"./util\";\n/**\n * This controls how input and output documents are processed to meet different application needs.\n * Each mode has different trade offs for; immutability, reference sharing, and performance.\n */\nexport var ProcessingMode;\n(function (ProcessingMode) {\n    /**\n     * Clone inputs prior to processing, and the outputs if some objects graphs may be shared.\n     * Use this option to keep input collection immutable and to get distinct output objects.\n     *\n     * Note: This option is expensive and reduces performance.\n     */\n    ProcessingMode[\"CLONE_ALL\"] = \"CLONE_ALL\";\n    /**\n     * Clones inputs prior to processing.\n     * This option will return output objects with shared graphs in their path if specific operators are used.\n     * Use this option to keep the input collection immutable.\n     *\n     */\n    ProcessingMode[\"CLONE_INPUT\"] = \"CLONE_INPUT\";\n    /**\n     * Clones the output to return distinct objects with no shared paths.\n     * This option modifies the input collection and during processing.\n     */\n    ProcessingMode[\"CLONE_OUTPUT\"] = \"CLONE_OUTPUT\";\n    /**\n     * Turn off cloning and modifies the input collection as needed.\n     * This option will also return output objects with shared paths in their graph when specific operators are used.\n     * This option provides the greatest speedup for the biggest tradeoff.\n     * When using the aggregation pipeline, you can use the \"$out\" operator to collect immutable intermediate results.\n     *\n     * @default\n     */\n    ProcessingMode[\"CLONE_OFF\"] = \"CLONE_OFF\";\n})(ProcessingMode || (ProcessingMode = {}));\n/** Custom type to facilitate type checking for global options */\nexport class ComputeOptions {\n    constructor(_opts, \n    /** Reference to the root object when processing subgraphs of the object. */\n    _root, _local, \n    /** The current time in milliseconds. Remains the same throughout all stages of the aggregation pipeline. */\n    timestamp = Date.now()) {\n        this._opts = _opts;\n        this._root = _root;\n        this._local = _local;\n        this.timestamp = timestamp;\n        this.update(_root, _local);\n    }\n    /**\n     * Initialize new ComputeOptions.\n     *\n     * @param options\n     * @param root\n     * @param local\n     * @returns {ComputeOptions}\n     */\n    static init(options, root, local) {\n        return options instanceof ComputeOptions\n            ? new ComputeOptions(options._opts, isNil(options.root) ? root : options.root, Object.assign({}, options.local, local))\n            : new ComputeOptions(options, root, local);\n    }\n    /** Updates the internal mutable state. */\n    update(root, local) {\n        var _a;\n        // NOTE: this is done for efficiency to avoid creating too many intermediate options objects.\n        this._root = root;\n        this._local = local\n            ? Object.assign({}, local, {\n                variables: Object.assign({}, (_a = this._local) === null || _a === void 0 ? void 0 : _a.variables, local === null || local === void 0 ? void 0 : local.variables)\n            })\n            : local;\n        return this;\n    }\n    getOptions() {\n        return Object.freeze(Object.assign(Object.assign({}, this._opts), { context: Context.from(this._opts.context) }));\n    }\n    get root() {\n        return this._root;\n    }\n    get local() {\n        return this._local;\n    }\n    get idKey() {\n        return this._opts.idKey;\n    }\n    get collation() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.collation;\n    }\n    get processingMode() {\n        var _a;\n        return ((_a = this._opts) === null || _a === void 0 ? void 0 : _a.processingMode) || ProcessingMode.CLONE_OFF;\n    }\n    get useStrictMode() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.useStrictMode;\n    }\n    get scriptEnabled() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.scriptEnabled;\n    }\n    get useGlobalContext() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.useGlobalContext;\n    }\n    get hashFunction() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.hashFunction;\n    }\n    get collectionResolver() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.collectionResolver;\n    }\n    get jsonSchemaValidator() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.jsonSchemaValidator;\n    }\n    get variables() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.variables;\n    }\n    get context() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.context;\n    }\n}\n/**\n * Creates an Option from another where required keys are initialized.\n * @param options Options\n */\nexport function initOptions(options) {\n    return options instanceof ComputeOptions\n        ? options.getOptions()\n        : Object.freeze(Object.assign(Object.assign({ idKey: \"_id\", scriptEnabled: true, useStrictMode: true, useGlobalContext: true, processingMode: ProcessingMode.CLONE_OFF }, options), { context: (options === null || options === void 0 ? void 0 : options.context)\n                ? Context.from(options === null || options === void 0 ? void 0 : options.context)\n                : Context.init({}) }));\n}\n/**\n * The different groups of operators\n */\nexport var OperatorType;\n(function (OperatorType) {\n    OperatorType[\"ACCUMULATOR\"] = \"accumulator\";\n    OperatorType[\"EXPRESSION\"] = \"expression\";\n    OperatorType[\"PIPELINE\"] = \"pipeline\";\n    OperatorType[\"PROJECTION\"] = \"projection\";\n    OperatorType[\"QUERY\"] = \"query\";\n    OperatorType[\"WINDOW\"] = \"window\";\n})(OperatorType || (OperatorType = {}));\nexport class Context {\n    constructor(ops) {\n        this.operators = {\n            [OperatorType.ACCUMULATOR]: {},\n            [OperatorType.EXPRESSION]: {},\n            [OperatorType.PIPELINE]: {},\n            [OperatorType.PROJECTION]: {},\n            [OperatorType.QUERY]: {},\n            [OperatorType.WINDOW]: {}\n        };\n        for (const [type, operators] of Object.entries(ops)) {\n            this.addOperators(type, operators);\n        }\n    }\n    static init(ops = {}) {\n        return new Context(ops);\n    }\n    static from(ctx) {\n        return new Context(ctx.operators);\n    }\n    addOperators(type, ops) {\n        for (const [name, fn] of Object.entries(ops)) {\n            if (!this.getOperator(type, name)) {\n                this.operators[type][name] = fn;\n            }\n        }\n        return this;\n    }\n    // register\n    addAccumulatorOps(ops) {\n        return this.addOperators(OperatorType.ACCUMULATOR, ops);\n    }\n    addExpressionOps(ops) {\n        return this.addOperators(OperatorType.EXPRESSION, ops);\n    }\n    addQueryOps(ops) {\n        return this.addOperators(OperatorType.QUERY, ops);\n    }\n    addPipelineOps(ops) {\n        return this.addOperators(OperatorType.PIPELINE, ops);\n    }\n    addProjectionOps(ops) {\n        return this.addOperators(OperatorType.PROJECTION, ops);\n    }\n    addWindowOps(ops) {\n        return this.addOperators(OperatorType.WINDOW, ops);\n    }\n    // getters\n    getOperator(type, name) {\n        return type in this.operators ? this.operators[type][name] || null : null;\n    }\n}\n// global context\nconst GLOBAL_CONTEXT = Context.init();\n/**\n * Register fully specified operators for the given operator class.\n *\n * @param type The operator type\n * @param operators Map of the operators\n */\nexport function useOperators(type, operators) {\n    for (const [name, fn] of Object.entries(operators)) {\n        assert(isFunction(fn) && isOperator(name), `'${name}' is not a valid operator`);\n        const currentFn = getOperator(type, name, null);\n        assert(!currentFn || fn === currentFn, `${name} already exists for '${type}' operators. Cannot change operator function once registered.`);\n    }\n    // toss the operator salad :)\n    switch (type) {\n        case OperatorType.ACCUMULATOR:\n            GLOBAL_CONTEXT.addAccumulatorOps(operators);\n            break;\n        case OperatorType.EXPRESSION:\n            GLOBAL_CONTEXT.addExpressionOps(operators);\n            break;\n        case OperatorType.PIPELINE:\n            GLOBAL_CONTEXT.addPipelineOps(operators);\n            break;\n        case OperatorType.PROJECTION:\n            GLOBAL_CONTEXT.addProjectionOps(operators);\n            break;\n        case OperatorType.QUERY:\n            GLOBAL_CONTEXT.addQueryOps(operators);\n            break;\n        case OperatorType.WINDOW:\n            GLOBAL_CONTEXT.addWindowOps(operators);\n            break;\n    }\n}\n/**\n * Overrides the current global context with this new one.\n *\n * @param context The new context to override the global one with.\n */\n// export const setGlobalContext = (context: Context): void => {\n//   GLOBAL_CONTEXT = context;\n// };\n/**\n * Returns the operator function or undefined if it is not found\n * @param type Type of operator\n * @param operator Name of the operator\n */\nexport function getOperator(type, operator, options) {\n    const { context: ctx, useGlobalContext: fallback } = options || {};\n    const fn = ctx ? ctx.getOperator(type, operator) : null;\n    return !fn && fallback ? GLOBAL_CONTEXT.getOperator(type, operator) : fn;\n}\n/* eslint-disable unused-imports/no-unused-vars-ts */\n/**\n * Implementation of system variables\n * @type {Object}\n */\nconst systemVariables = {\n    $$ROOT(_obj, _expr, options) {\n        return options.root;\n    },\n    $$CURRENT(obj, _expr, _options) {\n        return obj;\n    },\n    $$REMOVE(_obj, _expr, _options) {\n        return undefined;\n    },\n    $$NOW(_obj, _expr, options) {\n        return new Date(options.timestamp);\n    }\n};\n/**\n * Implementation of $redact variables\n *\n * Each function accepts 3 arguments (obj, expr, options)\n *\n * @type {Object}\n */\nconst redactVariables = {\n    $$KEEP(obj, _expr, _options) {\n        return obj;\n    },\n    $$PRUNE(_obj, _expr, _options) {\n        return undefined;\n    },\n    $$DESCEND(obj, expr, options) {\n        // traverse nested documents iff there is a $cond\n        if (!has(expr, \"$cond\"))\n            return obj;\n        let result;\n        for (const [key, current] of Object.entries(obj)) {\n            if (isObjectLike(current)) {\n                if (current instanceof Array) {\n                    const array = [];\n                    for (let elem of current) {\n                        if (isObject(elem)) {\n                            elem = redact(elem, expr, options.update(elem));\n                        }\n                        if (!isNil(elem)) {\n                            array.push(elem);\n                        }\n                    }\n                    result = array;\n                }\n                else {\n                    result = redact(current, expr, options.update(current));\n                }\n                if (isNil(result)) {\n                    delete obj[key]; // pruned result\n                }\n                else {\n                    obj[key] = result;\n                }\n            }\n        }\n        return obj;\n    }\n};\n/* eslint-enable unused-imports/no-unused-vars-ts */\n/**\n * Computes the value of the expression on the object for the given operator\n *\n * @param obj the current object from the collection\n * @param expr the expression for the given field\n * @param operator the operator to resolve the field with\n * @param options {Object} extra options\n * @returns {*}\n */\nexport function computeValue(obj, expr, operator, options) {\n    var _a;\n    // ensure valid options exist on first invocation\n    const copts = ComputeOptions.init(options, obj);\n    operator = operator || \"\";\n    if (isOperator(operator)) {\n        // if the field of the object is a valid operator\n        const callExpression = getOperator(OperatorType.EXPRESSION, operator, options);\n        if (callExpression)\n            return callExpression(obj, expr, copts);\n        // we also handle $group accumulator operators\n        const callAccumulator = getOperator(OperatorType.ACCUMULATOR, operator, options);\n        if (callAccumulator) {\n            // if object is not an array, first try to compute using the expression\n            if (!(obj instanceof Array)) {\n                obj = computeValue(obj, expr, null, copts);\n                expr = null;\n            }\n            // validate that we have an array\n            assert(obj instanceof Array, `'${operator}' target must be an array.`);\n            // for accumulators, we use the global options since the root is specific to each element within array.\n            return callAccumulator(obj, expr, \n            // reset the root object for accumulators.\n            copts.update(null, copts.local));\n        }\n        // operator was not found\n        throw new Error(`operator '${operator}' is not registered`);\n    }\n    // if expr is a string and begins with \"$$\", then we have a variable.\n    //  this can be one of; redact variable, system variable, user-defined variable.\n    //  we check and process them in that order.\n    //\n    // if expr begins only a single \"$\", then it is a path to a field on the object.\n    if (isString(expr) && expr.length > 0 && expr[0] === \"$\") {\n        // we return redact variables as literals\n        if (has(redactVariables, expr)) {\n            return expr;\n        }\n        // default to root for resolving path.\n        let context = copts.root;\n        // handle selectors with explicit prefix\n        const arr = expr.split(\".\");\n        if (has(systemVariables, arr[0])) {\n            // set 'root' only the first time it is required to be used for all subsequent calls\n            // if it already available on the options, it will be used\n            context = systemVariables[arr[0]](obj, null, copts);\n            expr = expr.slice(arr[0].length + 1); //  +1 for '.'\n        }\n        else if (arr[0].slice(0, 2) === \"$$\") {\n            // handle user-defined variables\n            context = Object.assign({}, copts.variables, // global vars\n            // current item is added before local variables because the binding may be changed.\n            { this: obj }, (_a = copts.local) === null || _a === void 0 ? void 0 : _a.variables // local vars\n            );\n            const prefix = arr[0].slice(2);\n            assert(has(context, prefix), `Use of undefined variable: ${prefix}`);\n            expr = expr.slice(2);\n        }\n        else {\n            // 'expr' is a path to a field on the object.\n            expr = expr.slice(1);\n        }\n        if (expr === \"\")\n            return context;\n        return resolve(context, expr);\n    }\n    // check and return value if already in a resolved state\n    if (isArray(expr)) {\n        return expr.map((item) => computeValue(obj, item, null, copts));\n    }\n    else if (isObject(expr)) {\n        const result = {};\n        for (const [key, val] of Object.entries(expr)) {\n            result[key] = computeValue(obj, val, key, copts);\n            // must run ONLY one aggregate operator per expression\n            // if so, return result of the computed value\n            if ([OperatorType.EXPRESSION, OperatorType.ACCUMULATOR].some(t => !!getOperator(t, key, options))) {\n                // there should be only one operator\n                assert(Object.keys(expr).length === 1, \"Invalid aggregation expression '\" + JSON.stringify(expr) + \"'\");\n                return result[key];\n            }\n        }\n        return result;\n    }\n    return expr;\n}\n/**\n * Redact an object\n * @param  {Object} obj The object to redact\n * @param  {*} expr The redact expression\n * @param  {*} options  Options for value\n * @return {*} returns the result of the redacted object\n */\nexport function redact(obj, expr, options) {\n    const result = computeValue(obj, expr, null, options);\n    return has(redactVariables, result)\n        ? redactVariables[result](obj, expr, options)\n        : result;\n}\n","export * from \"./and\";\nexport * from \"./not\";\nexport * from \"./or\";\n","// Boolean Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#boolean-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { truthy } from \"../../../util\";\n/**\n * Returns true only when all its expressions evaluate to true. Accepts any number of argument expressions.\n *\n * @param obj\n * @param expr\n * @returns {boolean}\n */\nexport const $and = (obj, expr, options) => {\n    const value = computeValue(obj, expr, null, options);\n    return (truthy(value, options.useStrictMode) &&\n        value.every(v => truthy(v, options.useStrictMode)));\n};\n","// Boolean Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#boolean-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { ensureArray } from \"../../../util\";\n/**\n * Returns the boolean value that is the opposite of its argument expression. Accepts a single argument expression.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {boolean}\n */\nexport const $not = (obj, expr, options) => {\n    const booleanExpr = ensureArray(expr);\n    // array values are truthy so an emty array is false\n    if (booleanExpr.length == 0)\n        return false;\n    // use provided value non-array value\n    if (booleanExpr.length == 1)\n        return !computeValue(obj, booleanExpr[0], null, options);\n    // expects a single argument\n    throw \"Expression $not takes exactly 1 argument\";\n};\n","// Boolean Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#boolean-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { truthy } from \"../../../util\";\n/**\n * Returns true when any of its expressions evaluates to true. Accepts any number of argument expressions.\n *\n * @param obj\n * @param expr\n * @returns {boolean}\n */\nexport const $or = (obj, expr, options) => {\n    const value = computeValue(obj, expr, null, options);\n    const strict = options.useStrictMode;\n    return truthy(value, strict) && value.some(v => truthy(v, strict));\n};\n","export * from \"./cmp\";\nexport * from \"./eq\";\nexport * from \"./gt\";\nexport * from \"./gte\";\nexport * from \"./lt\";\nexport * from \"./lte\";\nexport * from \"./ne\";\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { computeValue } from \"../../../core\";\n/**\n * Compares two values and returns the result of the comparison as an integer.\n *\n * @param obj\n * @param expr\n * @returns {number}\n */\nexport const $cmp = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    if (args[0] > args[1])\n        return 1;\n    if (args[0] < args[1])\n        return -1;\n    return 0;\n};\n","/**\n * Returns an iterator\n * @param {*} source An iterable source (Array, Function, Generator, or Iterator)\n */\nexport function Lazy(source) {\n    return source instanceof Iterator ? source : new Iterator(source);\n}\nexport function compose(...iterators) {\n    let index = 0;\n    return Lazy(() => {\n        while (index < iterators.length) {\n            const o = iterators[index].next();\n            if (!o.done)\n                return o;\n            index++;\n        }\n        return { done: true };\n    });\n}\n/**\n * Checks whether the given object is compatible with a generator i.e Object{next:Function}\n * @param {*} o An object\n */\nfunction isGenerator(o) {\n    return (!!o && typeof o === \"object\" && (o === null || o === void 0 ? void 0 : o.next) instanceof Function);\n}\nfunction dropItem(array, i) {\n    const rest = array.slice(i + 1);\n    array.splice(i);\n    Array.prototype.push.apply(array, rest);\n}\n// stop iteration error\nconst DONE = new Error();\n// Lazy function actions\nvar Action;\n(function (Action) {\n    Action[Action[\"MAP\"] = 0] = \"MAP\";\n    Action[Action[\"FILTER\"] = 1] = \"FILTER\";\n    Action[Action[\"TAKE\"] = 2] = \"TAKE\";\n    Action[Action[\"DROP\"] = 3] = \"DROP\";\n})(Action || (Action = {}));\nfunction createCallback(nextFn, iteratees, buffer) {\n    let done = false;\n    let index = -1;\n    let bufferIndex = 0; // index for the buffer\n    return function (storeResult) {\n        // special hack to collect all values into buffer\n        try {\n            outer: while (!done) {\n                let o = nextFn();\n                index++;\n                let i = -1;\n                const size = iteratees.length;\n                let innerDone = false;\n                while (++i < size) {\n                    const r = iteratees[i];\n                    switch (r.action) {\n                        case Action.MAP:\n                            o = r.func(o, index);\n                            break;\n                        case Action.FILTER:\n                            if (!r.func(o, index))\n                                continue outer;\n                            break;\n                        case Action.TAKE:\n                            --r.count;\n                            if (!r.count)\n                                innerDone = true;\n                            break;\n                        case Action.DROP:\n                            --r.count;\n                            if (!r.count)\n                                dropItem(iteratees, i);\n                            continue outer;\n                        default:\n                            break outer;\n                    }\n                }\n                done = innerDone;\n                if (storeResult) {\n                    buffer[bufferIndex++] = o;\n                }\n                else {\n                    return { value: o, done: false };\n                }\n            }\n        }\n        catch (e) {\n            if (e !== DONE)\n                throw e;\n        }\n        done = true;\n        return { done };\n    };\n}\n/**\n * A lazy collection iterator yields a single value at a time upon request.\n */\nexport class Iterator {\n    /**\n     * @param {*} source An iterable object or function.\n     *    Array - return one element per cycle\n     *    Object{next:Function} - call next() for the next value (this also handles generator functions)\n     *    Function - call to return the next value\n     * @param {Function} fn An optional transformation function\n     */\n    constructor(source) {\n        this.iteratees = [];\n        this.yieldedValues = [];\n        this.isDone = false;\n        let nextVal;\n        if (source instanceof Function) {\n            // make iterable\n            source = { next: source };\n        }\n        if (isGenerator(source)) {\n            const src = source;\n            nextVal = () => {\n                const o = src.next();\n                if (o.done)\n                    throw DONE;\n                return o.value;\n            };\n        }\n        else if (source instanceof Array) {\n            const data = source;\n            const size = data.length;\n            let index = 0;\n            nextVal = () => {\n                if (index < size)\n                    return data[index++];\n                throw DONE;\n            };\n        }\n        else if (!(source instanceof Function)) {\n            throw new Error(`Lazy must be initialized with an array, generator, or function.`);\n        }\n        // create next function\n        this.getNext = createCallback(nextVal, this.iteratees, this.yieldedValues);\n    }\n    /**\n     * Add an iteratee to this lazy sequence\n     */\n    push(action, value) {\n        if (typeof value === \"function\") {\n            this.iteratees.push({ action, func: value });\n        }\n        else if (typeof value === \"number\") {\n            this.iteratees.push({ action, count: value });\n        }\n        return this;\n    }\n    next() {\n        return this.getNext();\n    }\n    // Iteratees methods\n    /**\n     * Transform each item in the sequence to a new value\n     * @param {Function} f\n     */\n    map(f) {\n        return this.push(Action.MAP, f);\n    }\n    /**\n     * Select only items matching the given predicate\n     * @param {Function} pred\n     */\n    filter(predicate) {\n        return this.push(Action.FILTER, predicate);\n    }\n    /**\n     * Take given numbe for values from sequence\n     * @param {Number} n A number greater than 0\n     */\n    take(n) {\n        return n > 0 ? this.push(Action.TAKE, n) : this;\n    }\n    /**\n     * Drop a number of values from the sequence\n     * @param {Number} n Number of items to drop greater than 0\n     */\n    drop(n) {\n        return n > 0 ? this.push(Action.DROP, n) : this;\n    }\n    // Transformations\n    /**\n     * Returns a new lazy object with results of the transformation\n     * The entire sequence is realized.\n     *\n     * @param {Function} fn Tranform function of type (Array) => (Any)\n     */\n    transform(fn) {\n        const self = this;\n        let iter;\n        return Lazy(() => {\n            if (!iter) {\n                iter = Lazy(fn(self.value()));\n            }\n            return iter.next();\n        });\n    }\n    // Terminal methods\n    /**\n     * Returns the fully realized values of the iterators.\n     * The return value will be an array unless `lazy.first()` was used.\n     * The realized values are cached for subsequent calls.\n     */\n    value() {\n        if (!this.isDone) {\n            this.isDone = this.getNext(true).done;\n        }\n        return this.yieldedValues;\n    }\n    /**\n     * Execute the funcion for each value. Will stop when an execution returns false.\n     * @param {Function} f\n     * @returns {Boolean} false iff `f` return false for AnyVal execution, otherwise true\n     */\n    each(f) {\n        for (;;) {\n            const o = this.next();\n            if (o.done)\n                break;\n            if (f(o.value) === false)\n                return false;\n        }\n        return true;\n    }\n    /**\n     * Returns the reduction of sequence according the reducing function\n     *\n     * @param {*} f a reducing function\n     * @param {*} initialValue\n     */\n    reduce(f, initialValue) {\n        let o = this.next();\n        if (initialValue === undefined && !o.done) {\n            initialValue = o.value;\n            o = this.next();\n        }\n        while (!o.done) {\n            initialValue = f(initialValue, o.value);\n            o = this.next();\n        }\n        return initialValue;\n    }\n    /**\n     * Returns the number of matched items in the sequence\n     */\n    size() {\n        return this.reduce(((acc, _) => ++acc), 0);\n    }\n    [Symbol.iterator]() {\n        /* eslint-disable @typescript-eslint/no-unsafe-return */\n        return this;\n    }\n}\n","import { getOperator, initOptions, OperatorType, ProcessingMode } from \"./core\";\nimport { Lazy } from \"./lazy\";\nimport { assert, cloneDeep, intersection, isEmpty } from \"./util\";\n/**\n * Provides functionality for the mongoDB aggregation pipeline\n *\n * @param pipeline an Array of pipeline operators\n * @param options An optional Options to pass the aggregator\n * @constructor\n */\nexport class Aggregator {\n    constructor(pipeline, options) {\n        this.pipeline = pipeline;\n        this.options = initOptions(options);\n    }\n    /**\n     * Returns an `Lazy` iterator for processing results of pipeline\n     *\n     * @param {*} collection An array or iterator object\n     * @returns {Iterator} an iterator object\n     */\n    stream(collection) {\n        let iterator = Lazy(collection);\n        const mode = this.options.processingMode;\n        if (mode == ProcessingMode.CLONE_ALL ||\n            mode == ProcessingMode.CLONE_INPUT) {\n            iterator.map(cloneDeep);\n        }\n        const pipelineOperators = new Array();\n        if (!isEmpty(this.pipeline)) {\n            // run aggregation pipeline\n            for (const operator of this.pipeline) {\n                const operatorKeys = Object.keys(operator);\n                const opName = operatorKeys[0];\n                const call = getOperator(OperatorType.PIPELINE, opName, this.options);\n                assert(operatorKeys.length === 1 && !!call, `invalid pipeline operator ${opName}`);\n                pipelineOperators.push(opName);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                iterator = call(iterator, operator[opName], this.options);\n            }\n        }\n        // operators that may share object graphs of inputs.\n        // we only need to clone the output for these since the objects will already be distinct for other operators.\n        if (mode == ProcessingMode.CLONE_OUTPUT ||\n            (mode == ProcessingMode.CLONE_ALL &&\n                !!intersection([[\"$group\", \"$unwind\"], pipelineOperators]).length)) {\n            iterator.map(cloneDeep);\n        }\n        return iterator;\n    }\n    /**\n     * Return the results of the aggregation as an array.\n     *\n     * @param {*} collection\n     * @param {*} query\n     */\n    run(collection) {\n        return this.stream(collection).value();\n    }\n}\n","import { Aggregator } from \"./aggregator\";\nimport { compose, Lazy } from \"./lazy\";\nimport { isObject } from \"./util\";\n/**\n * Cursor to iterate and perform filtering on matched objects.\n * This object must not be used directly. A cursor may be obtaine from calling `find()` on an instance of `Query`.\n *\n * @param collection The input source of the collection\n * @param predicate A predicate function to test documents\n * @param projection A projection criteria\n * @param options Options\n * @constructor\n */\nexport class Cursor {\n    constructor(source, predicate, projection, options) {\n        this.source = source;\n        this.predicate = predicate;\n        this.projection = projection;\n        this.options = options;\n        this.operators = [];\n        this.result = null;\n        this.buffer = [];\n    }\n    /** Returns the iterator from running the query */\n    fetch() {\n        if (this.result)\n            return this.result;\n        // add projection operator\n        if (isObject(this.projection)) {\n            this.operators.push({ $project: this.projection });\n        }\n        // filter collection\n        this.result = Lazy(this.source).filter(this.predicate);\n        if (this.operators.length > 0) {\n            this.result = new Aggregator(this.operators, this.options).stream(this.result);\n        }\n        return this.result;\n    }\n    /** Returns an iterator with the buffered data included */\n    fetchAll() {\n        const buffered = Lazy([...this.buffer]);\n        this.buffer = [];\n        return compose(buffered, this.fetch());\n    }\n    /**\n     * Return remaining objects in the cursor as an array. This method exhausts the cursor\n     * @returns {Array}\n     */\n    all() {\n        return this.fetchAll().value();\n    }\n    /**\n     * Returns the number of objects return in the cursor. This method exhausts the cursor\n     * @returns {Number}\n     */\n    count() {\n        return this.all().length;\n    }\n    /**\n     * Returns a cursor that begins returning results only after passing or skipping a number of documents.\n     * @param {Number} n the number of results to skip.\n     * @return {Cursor} Returns the cursor, so you can chain this call.\n     */\n    skip(n) {\n        this.operators.push({ $skip: n });\n        return this;\n    }\n    /**\n     * Constrains the size of a cursor's result set.\n     * @param {Number} n the number of results to limit to.\n     * @return {Cursor} Returns the cursor, so you can chain this call.\n     */\n    limit(n) {\n        this.operators.push({ $limit: n });\n        return this;\n    }\n    /**\n     * Returns results ordered according to a sort specification.\n     * @param {Object} modifier an object of key and values specifying the sort order. 1 for ascending and -1 for descending\n     * @return {Cursor} Returns the cursor, so you can chain this call.\n     */\n    sort(modifier) {\n        this.operators.push({ $sort: modifier });\n        return this;\n    }\n    /**\n     * Specifies the collation for the cursor returned by the `mingo.Query.find`\n     * @param {*} spec\n     */\n    collation(spec) {\n        this.options = Object.assign(Object.assign({}, this.options), { collation: spec });\n        return this;\n    }\n    /**\n     * Returns the next document in a cursor.\n     * @returns {Object | Boolean}\n     */\n    next() {\n        // yield value obtains in hasNext()\n        if (this.buffer.length > 0) {\n            return this.buffer.pop();\n        }\n        const o = this.fetch().next();\n        if (o.done)\n            return;\n        return o.value;\n    }\n    /**\n     * Returns true if the cursor has documents and can be iterated.\n     * @returns {boolean}\n     */\n    hasNext() {\n        // there is a value in the buffer\n        if (this.buffer.length > 0)\n            return true;\n        const o = this.fetch().next();\n        if (o.done)\n            return false;\n        this.buffer.push(o.value);\n        return true;\n    }\n    /**\n     * Applies a function to each document in a cursor and collects the return values in an array.\n     * @param fn\n     * @returns {Array}\n     */\n    map(fn) {\n        return this.all().map(fn);\n    }\n    /**\n     * Applies a JavaScript function for every document in a cursor.\n     * @param fn\n     */\n    forEach(fn) {\n        this.all().forEach(fn);\n    }\n    [Symbol.iterator]() {\n        return this.fetchAll();\n    }\n}\n","import { getOperator, initOptions, OperatorType } from \"./core\";\nimport { Cursor } from \"./cursor\";\nimport { assert, inArray, isObject, isOperator, normalize } from \"./util\";\n/**\n * An object used to filter input documents\n *\n * @param {Object} condition The condition for constructing predicates\n * @param {Options} options Options for use by operators\n * @constructor\n */\nexport class Query {\n    constructor(condition, options) {\n        this.condition = condition;\n        this.options = initOptions(options);\n        this.compiled = [];\n        this.compile();\n    }\n    compile() {\n        assert(isObject(this.condition), `query criteria must be an object: ${JSON.stringify(this.condition)}`);\n        const whereOperator = {};\n        for (const [field, expr] of Object.entries(this.condition)) {\n            if (\"$where\" === field) {\n                Object.assign(whereOperator, { field: field, expr: expr });\n            }\n            else if (inArray([\"$and\", \"$or\", \"$nor\", \"$expr\", \"$jsonSchema\"], field)) {\n                this.processOperator(field, field, expr);\n            }\n            else {\n                // normalize expression\n                assert(!isOperator(field), `unknown top level operator: ${field}`);\n                for (const [operator, val] of Object.entries(normalize(expr))) {\n                    this.processOperator(field, operator, val);\n                }\n            }\n            if (whereOperator.field) {\n                this.processOperator(whereOperator.field, whereOperator.field, whereOperator.expr);\n            }\n        }\n    }\n    processOperator(field, operator, value) {\n        const call = getOperator(OperatorType.QUERY, operator, this.options);\n        if (!call) {\n            throw new Error(`unknown operator ${operator}`);\n        }\n        const fn = call(field, value, this.options);\n        this.compiled.push(fn);\n    }\n    /**\n     * Checks if the object passes the query criteria. Returns true if so, false otherwise.\n     *\n     * @param obj The object to test\n     * @returns {boolean} True or false\n     */\n    test(obj) {\n        for (let i = 0, len = this.compiled.length; i < len; i++) {\n            if (!this.compiled[i](obj)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns a cursor to select matching documents from the input source.\n     *\n     * @param source A source providing a sequence of documents\n     * @param projection An optional projection criteria\n     * @returns {Cursor} A Cursor for iterating over the results\n     */\n    find(collection, projection) {\n        return new Cursor(collection, ((x) => this.test(x)), projection || {}, this.options);\n    }\n    /**\n     * Remove matched documents from the collection returning the remainder\n     *\n     * @param collection An array of documents\n     * @returns {Array} A new array with matching elements removed\n     */\n    remove(collection) {\n        return collection.reduce((acc, obj) => {\n            if (!this.test(obj))\n                acc.push(obj);\n            return acc;\n        }, []);\n    }\n}\n","/**\n * Predicates used for Query and Expression operators.\n */\nimport { computeValue } from \"../core\";\nimport { Query } from \"../query\";\nimport { compare as mingoCmp, ensureArray, flatten, getType, inArray, intersection, isArray, isBoolean, isDate, isEmpty, isEqual, isNil, isNumber, isObject, isOperator, isRegExp, isString, MAX_INT, MAX_LONG, MIN_INT, MIN_LONG, resolve, truthy } from \"../util\";\n/**\n * Returns a query operator created from the predicate\n *\n * @param predicate Predicate function\n */\nexport function createQueryOperator(predicate) {\n    const f = (selector, value, options) => {\n        const opts = { unwrapArray: true };\n        const depth = Math.max(1, selector.split(\".\").length - 1);\n        return (obj) => {\n            // value of field must be fully resolved.\n            const lhs = resolve(obj, selector, opts);\n            return predicate(lhs, value, Object.assign(Object.assign({}, options), { depth }));\n        };\n    };\n    f.op = \"query\";\n    return f; // as QueryOperator;\n}\n/**\n * Returns an expression operator created from the predicate\n *\n * @param predicate Predicate function\n */\nexport function createExpressionOperator(predicate) {\n    return (obj, expr, options) => {\n        const args = computeValue(obj, expr, null, options);\n        return predicate(...args);\n    };\n}\n/**\n * Checks that two values are equal.\n *\n * @param a         The lhs operand as resolved from the object by the given selector\n * @param b         The rhs operand provided by the user\n * @returns {*}\n */\nexport function $eq(a, b, options) {\n    // start with simple equality check\n    if (isEqual(a, b))\n        return true;\n    // https://docs.mongodb.com/manual/tutorial/query-for-null-fields/\n    if (isNil(a) && isNil(b))\n        return true;\n    // check\n    if (a instanceof Array) {\n        const eq = isEqual.bind(null, b);\n        return a.some(eq) || flatten(a, options === null || options === void 0 ? void 0 : options.depth).some(eq);\n    }\n    return false;\n}\n/**\n * Matches all values that are not equal to the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $ne(a, b, options) {\n    return !$eq(a, b, options);\n}\n/**\n * Matches any of the values that exist in an array specified in the query.\n *\n * @param a\n * @param b\n * @returns {*}\n */\nexport function $in(a, b, options) {\n    // queries for null should be able to find undefined fields\n    if (isNil(a))\n        return b.some(v => v === null);\n    return intersection([ensureArray(a), b], options === null || options === void 0 ? void 0 : options.hashFunction).length > 0;\n}\n/**\n * Matches values that do not exist in an array specified to the query.\n *\n * @param a\n * @param b\n * @returns {*|boolean}\n */\nexport function $nin(a, b, options) {\n    return !$in(a, b, options);\n}\n/**\n * Matches values that are less than the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $lt(a, b, options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) < 0);\n}\n/**\n * Matches values that are less than or equal to the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $lte(a, b, options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) <= 0);\n}\n/**\n * Matches values that are greater than the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $gt(a, b, options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) > 0);\n}\n/**\n * Matches values that are greater than or equal to the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $gte(a, b, options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) >= 0);\n}\n/**\n * Performs a modulo operation on the value of a field and selects documents with a specified result.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $mod(a, b, options) {\n    return ensureArray(a).some(((x) => b.length === 2 && x % b[0] === b[1]));\n}\n/**\n * Selects documents where values match a specified regular expression.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $regex(a, b, options) {\n    const lhs = ensureArray(a);\n    const match = (x) => isString(x) && truthy(b.exec(x), options === null || options === void 0 ? void 0 : options.useStrictMode);\n    return lhs.some(match) || flatten(lhs, 1).some(match);\n}\n/**\n * Matches documents that have the specified field.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $exists(a, b, options) {\n    return (((b === false || b === 0) && a === undefined) ||\n        ((b === true || b === 1) && a !== undefined));\n}\n/**\n * Matches arrays that contain all elements specified in the query.\n *\n * @param values\n * @param queries\n * @returns boolean\n */\nexport function $all(values, queries, options) {\n    if (!isArray(values) ||\n        !isArray(queries) ||\n        !values.length ||\n        !queries.length) {\n        return false;\n    }\n    let matched = true;\n    for (const query of queries) {\n        // no need to check all the queries.\n        if (!matched)\n            break;\n        if (isObject(query) && inArray(Object.keys(query), \"$elemMatch\")) {\n            matched = $elemMatch(values, query[\"$elemMatch\"], options);\n        }\n        else if (query instanceof RegExp) {\n            matched = values.some(s => typeof s === \"string\" && query.test(s));\n        }\n        else {\n            matched = values.some(v => isEqual(query, v));\n        }\n    }\n    return matched;\n}\n/**\n * Selects documents if the array field is a specified size.\n *\n * @param a\n * @param b\n * @returns {*|boolean}\n */\nexport function $size(a, b, options) {\n    return Array.isArray(a) && a.length === b;\n}\nfunction isNonBooleanOperator(name) {\n    return isOperator(name) && [\"$and\", \"$or\", \"$nor\"].indexOf(name) === -1;\n}\n/**\n * Selects documents if element in the array field matches all the specified $elemMatch condition.\n *\n * @param a {Array} element to match against\n * @param b {Object} subquery\n */\nexport function $elemMatch(a, b, options) {\n    // should return false for non-matching input\n    if (isArray(a) && !isEmpty(a)) {\n        let format = (x) => x;\n        let criteria = b;\n        // If we find a boolean operator in the subquery, we fake a field to point to it. This is an\n        // attempt to ensure that it is a valid criteria. We cannot make this substitution for operators\n        // like $and/$or/$nor; as otherwise, this faking will break our query.\n        if (Object.keys(b).every(isNonBooleanOperator)) {\n            criteria = { temp: b };\n            format = x => ({ temp: x });\n        }\n        const query = new Query(criteria, options);\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (query.test(format(a[i]))) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// helper functions\nconst isNull = (a) => a === null;\nconst isInt = (a) => isNumber(a) &&\n    a >= MIN_INT &&\n    a <= MAX_INT &&\n    a.toString().indexOf(\".\") === -1;\nconst isLong = (a) => isNumber(a) &&\n    a >= MIN_LONG &&\n    a <= MAX_LONG &&\n    a.toString().indexOf(\".\") === -1;\n/** Mapping of type to predicate */\nconst compareFuncs = {\n    array: isArray,\n    bool: isBoolean,\n    boolean: isBoolean,\n    date: isDate,\n    decimal: isNumber,\n    double: isNumber,\n    int: isInt,\n    long: isLong,\n    number: isNumber,\n    null: isNull,\n    object: isObject,\n    regex: isRegExp,\n    regexp: isRegExp,\n    string: isString,\n    // added for completeness\n    undefined: isNil,\n    function: (_) => {\n        throw new Error(\"unsupported type key `function`.\");\n    },\n    // Mongo identifiers\n    1: isNumber,\n    2: isString,\n    3: isObject,\n    4: isArray,\n    6: isNil,\n    8: isBoolean,\n    9: isDate,\n    10: isNull,\n    11: isRegExp,\n    16: isInt,\n    18: isLong,\n    19: isNumber //decimal\n};\n/**\n * Selects documents if a field is of the specified type.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nfunction compareType(a, b, _) {\n    const f = compareFuncs[b];\n    return f ? f(a) : false;\n}\n/**\n * Selects documents if a field is of the specified type.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $type(a, b, options) {\n    return Array.isArray(b)\n        ? b.findIndex(t => compareType(a, t, options)) >= 0\n        : compareType(a, b, options);\n}\nfunction compare(a, b, f) {\n    return ensureArray(a).some(x => getType(x) === getType(b) && f(x, b));\n}\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $eq as __eq, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are equal to a specified value.\n */\nexport const $eq = createExpressionOperator(__eq);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $gt as __gt, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are greater than a specified value.\n */\nexport const $gt = createExpressionOperator(__gt);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $gte as __gte, createExpressionOperator } from \"../../_predicates\";\n/**\n * \tMatches values that are greater than or equal to a specified value.\n */\nexport const $gte = createExpressionOperator(__gte);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $lt as __lt, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than the value specified in the query.\n */\nexport const $lt = createExpressionOperator(__lt);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $lte as __lte, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than or equal to the value specified in the query.\n */\nexport const $lte = createExpressionOperator(__lte);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $ne as __ne, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches all values that are not equal to the value specified in the query.\n */\nexport const $ne = createExpressionOperator(__ne);\n","import { computeValue } from \"../../../core\";\nimport { isDate, isNil, isNumber } from \"../../../util\";\nconst COMMON_YEAR_DAYS_OFFSET = [\n    0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334\n];\nconst LEAP_YEAR_DAYS_OFFSET = [\n    0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335\n];\n// https://en.wikipedia.org/wiki/ISO_week_date\nconst p = (y) => (y + Math.floor(y / 4) - Math.floor(y / 100) + Math.floor(y / 400)) % 7;\nconst weeks = (y) => 52 + Number(p(y) == 4 || p(y - 1) == 3);\nexport const isLeapYear = (year) => (year & 3) == 0 && (year % 100 != 0 || year % 400 == 0);\nexport const getDayOfYear = (d) => (isLeapYear(d.getUTCFullYear())\n    ? LEAP_YEAR_DAYS_OFFSET\n    : COMMON_YEAR_DAYS_OFFSET)[d.getUTCMonth()] + d.getUTCDate();\nexport function isoWeek(d) {\n    // algorithm based on https://en.wikipedia.org/wiki/ISO_week_date\n    const w = Math.floor((10 + getDayOfYear(d) - (d.getUTCDay() || 7)) / 7);\n    if (w < 1)\n        return weeks(d.getUTCFullYear() - 1);\n    if (w > weeks(d.getUTCFullYear()))\n        return 1;\n    return w;\n}\nexport function isoWeekYear(d) {\n    return (d.getUTCFullYear() -\n        Number(d.getUTCMonth() == 0 && d.getUTCDate() == 1 && d.getUTCDay() < 1));\n}\nexport const MINUTES_PER_HOUR = 60;\nexport const MILLIS_PER_DAY = 1000 * 60 * 60 * 24;\nexport const DURATION_IN_MILLIS = {\n    week: MILLIS_PER_DAY * 7,\n    day: MILLIS_PER_DAY,\n    hour: 1000 * 60 * 60,\n    minute: 1000 * 60,\n    second: 1000,\n    millisecond: 1\n};\n// default format if unspecified\nexport const DATE_FORMAT = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n// Inclusive interval of date parts\nexport const DATE_PART_INTERVAL = [\n    [\"year\", 0, 9999],\n    [\"month\", 1, 12],\n    [\"day\", 1, 31],\n    [\"hour\", 0, 23],\n    [\"minute\", 0, 59],\n    [\"second\", 0, 59],\n    [\"millisecond\", 0, 999]\n];\n// used for formatting dates in $dateToString operator\nexport const DATE_SYM_TABLE = {\n    \"%Y\": { name: \"year\", padding: 4, re: /([0-9]{4})/ },\n    \"%G\": { name: \"year\", padding: 4, re: /([0-9]{4})/ },\n    \"%m\": { name: \"month\", padding: 2, re: /(0[1-9]|1[012])/ },\n    \"%d\": { name: \"day\", padding: 2, re: /(0[1-9]|[12][0-9]|3[01])/ },\n    \"%H\": { name: \"hour\", padding: 2, re: /([01][0-9]|2[0-3])/ },\n    \"%M\": { name: \"minute\", padding: 2, re: /([0-5][0-9])/ },\n    \"%S\": { name: \"second\", padding: 2, re: /([0-5][0-9]|60)/ },\n    \"%L\": { name: \"millisecond\", padding: 3, re: /([0-9]{3})/ },\n    \"%u\": { name: \"weekday\", padding: 1, re: /([1-7])/ },\n    \"%U\": { name: \"week\", padding: 2, re: /([1-4][0-9]?|5[0-3]?)/ },\n    \"%V\": { name: \"isoWeek\", padding: 2, re: /([1-4][0-9]?|5[0-3]?)/ },\n    \"%z\": {\n        name: \"timezone\",\n        padding: 2,\n        re: /(([+-][01][0-9]|2[0-3]):?([0-5][0-9])?)/\n    },\n    \"%Z\": { name: \"minuteOffset\", padding: 3, re: /([+-][0-9]{3})/ }\n    // \"%%\": \"%\",\n};\n/**\n * Parse and return the timezone string as a number\n * @param tzstr Timezone string matching '+/-hh[:][mm]'\n */\nexport function parseTimezone(tzstr) {\n    if (isNil(tzstr))\n        return 0;\n    const m = DATE_SYM_TABLE[\"%z\"].re.exec(tzstr);\n    if (!m)\n        throw Error(`invalid or location-based timezone '${tzstr}' not supported`);\n    const hr = parseInt(m[2]) || 0;\n    const min = parseInt(m[3]) || 0;\n    return (Math.abs(hr * MINUTES_PER_HOUR) + min) * (hr < 0 ? -1 : 1);\n}\n/**\n * Formats the timezone for output\n * @param tz A timezone object\n */\nexport function formatTimezone(minuteOffset) {\n    return ((minuteOffset < 0 ? \"-\" : \"+\") +\n        padDigits(Math.abs(Math.floor(minuteOffset / MINUTES_PER_HOUR)), 2) +\n        padDigits(Math.abs(minuteOffset) % MINUTES_PER_HOUR, 2));\n}\n/**\n * Adjust the date by the given timezone\n * @param d Date object\n * @param minuteOffset number\n */\nexport function adjustDate(d, minuteOffset) {\n    d.setUTCMinutes(d.getUTCMinutes() + minuteOffset);\n}\n/**\n * Computes a date expression\n * @param obj The target object\n * @param expr Any value that resolves to a valid date expression. Valid expressions include a number, Date, or Object{date: number|Date, timezone?: string}\n */\nexport function computeDate(obj, expr, options) {\n    const d = computeValue(obj, expr, null, options);\n    if (isDate(d))\n        return new Date(d);\n    // timestamp is in seconds\n    if (isNumber(d))\n        return new Date(d * 1000);\n    if (d.date) {\n        const date = isDate(d.date) ? new Date(d.date) : new Date(d.date * 1000);\n        if (d.timezone) {\n            adjustDate(date, parseTimezone(d.timezone));\n        }\n        return date;\n    }\n    throw Error(`cannot convert ${expr === null || expr === void 0 ? void 0 : expr.toString()} to date`);\n}\nexport function padDigits(n, digits) {\n    return (new Array(Math.max(digits - String(n).length + 1, 0)).join(\"0\") +\n        n.toString());\n}\nexport function regexQuote(s) {\n    \"^.-*?$\".split(\"\").forEach((c) => {\n        s = s.replace(c, `\\\\${c}`);\n    });\n    return s;\n}\nexport function regexStrip(s) {\n    return s.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n}\n","import { groupBy, isEqual } from \"../../util\";\nimport { $push } from \"../accumulator\";\nimport { MILLIS_PER_DAY } from \"../expression/date/_internal\";\nimport { isUnbounded } from \"../pipeline/_internal\";\n// millis map to diffirent time units\nexport const MILLIS_PER_UNIT = {\n    week: MILLIS_PER_DAY * 7,\n    day: MILLIS_PER_DAY,\n    hour: MILLIS_PER_DAY / 24,\n    minute: 60000,\n    second: 1000,\n    millisecond: 1\n};\n// internal cache to store precomputed series once to avoid O(N^2) calls to over the collection\nconst memo = new WeakMap();\n/**\n * Caches all computed values in a window sequence for reuse.\n * This is only useful for operations with unbounded documents.\n */\nexport function withMemo(collection, expr, cacheFn, fn) {\n    // no caching done for bounded inputs\n    if (!isUnbounded(expr.parentExpr.output[expr.field].window)) {\n        return fn(cacheFn());\n    }\n    // first time using collection\n    if (!memo.has(collection)) {\n        memo.set(collection, { [expr.field]: cacheFn() });\n    }\n    const data = memo.get(collection);\n    // subsequent computations over the same collection.\n    if (data[expr.field] === undefined) {\n        data[expr.field] = cacheFn();\n    }\n    let failed = false;\n    try {\n        return fn(data[expr.field]);\n    }\n    catch (e) {\n        failed = true;\n    }\n    finally {\n        // cleanup on failure or last element in collection.\n        if (failed || expr.documentNumber === collection.length) {\n            delete data[expr.field];\n            if (Object.keys(data).length === 0)\n                memo.delete(collection);\n        }\n    }\n}\n/** Returns the position of a document in the $setWindowFields stage partition. */\nexport function rank(_, collection, expr, options, dense) {\n    return withMemo(collection, expr, () => {\n        const sortKey = \"$\" + Object.keys(expr.parentExpr.sortBy)[0];\n        const values = $push(collection, sortKey, options);\n        const groups = groupBy(values, ((_, n) => values[n]), options.hashFunction);\n        return { values, groups };\n    }, input => {\n        const { values, groups: partitions } = input;\n        // same number of paritions as length means all sort keys are unique\n        if (partitions.size == collection.length) {\n            return expr.documentNumber;\n        }\n        const current = values[expr.documentNumber - 1];\n        let i = 0;\n        let offset = 0;\n        // partition keys are already dense so just return the value on match\n        for (const key of partitions.keys()) {\n            if (isEqual(current, key)) {\n                return dense ? i + 1 : offset + 1;\n            }\n            i++;\n            offset += partitions.get(key).length;\n        }\n        // should be unreachable\n        throw new Error(\"rank: invalid return value. please submit a bug report.\");\n    });\n}\n","import { compare, groupBy, into, isEmpty, isObject, isString, resolve } from \"../../util\";\n/**\n * Takes all input documents and returns them in a stream of sorted documents.\n *\n * @param collection\n * @param sortKeys\n * @param  {Object} options\n * @returns {*}\n */\nexport const $sort = (collection, sortKeys, options) => {\n    if (isEmpty(sortKeys) || !isObject(sortKeys))\n        return collection;\n    let cmp = compare;\n    // check for collation spec on the options\n    const collationSpec = options.collation;\n    // use collation comparator if provided\n    if (isObject(collationSpec) && isString(collationSpec.locale)) {\n        cmp = collationComparator(collationSpec);\n    }\n    return collection.transform((coll) => {\n        const modifiers = Object.keys(sortKeys);\n        for (const key of modifiers.reverse()) {\n            const groups = groupBy(coll, (obj) => resolve(obj, key), options.hashFunction);\n            const sortedKeys = Array.from(groups.keys()).sort(cmp);\n            if (sortKeys[key] === -1)\n                sortedKeys.reverse();\n            // reuse collection so the data is available for the next iteration of the sort modifiers.\n            coll = [];\n            sortedKeys.reduce((acc, key) => into(acc, groups.get(key)), coll);\n        }\n        return coll;\n    });\n};\n// MongoDB collation strength to JS localeCompare sensitivity mapping.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\nconst COLLATION_STRENGTH = {\n    // Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.\n    1: \"base\",\n    //  Only strings that differ in base letters or accents and other diacritic marks compare as unequal.\n    // Examples: a ≠ b, a ≠ á, a = A.\n    2: \"accent\",\n    // Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal.\n    // Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A\n    3: \"variant\"\n    // case - Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.\n};\n/**\n * Creates a comparator function for the given collation spec. See https://docs.mongodb.com/manual/reference/collation/\n *\n * @param spec {Object} The MongoDB collation spec.\n * {\n *   locale: string,\n *   caseLevel: boolean,\n *   caseFirst: string,\n *   strength: int,\n *   numericOrdering: boolean,\n *   alternate: string,\n *   maxVariable: never, // unsupported\n *   backwards: never // unsupported\n * }\n */\nfunction collationComparator(spec) {\n    const localeOpt = {\n        sensitivity: COLLATION_STRENGTH[spec.strength || 3],\n        caseFirst: spec.caseFirst === \"off\" ? \"false\" : spec.caseFirst || \"false\",\n        numeric: spec.numericOrdering || false,\n        ignorePunctuation: spec.alternate === \"shifted\"\n    };\n    // when caseLevel is true for strength  1:base and 2:accent, bump sensitivity to the nearest that supports case comparison\n    if ((spec.caseLevel || false) === true) {\n        if (localeOpt.sensitivity === \"base\")\n            localeOpt.sensitivity = \"case\";\n        if (localeOpt.sensitivity === \"accent\")\n            localeOpt.sensitivity = \"variant\";\n    }\n    const collator = new Intl.Collator(spec.locale, localeOpt);\n    return (a, b) => {\n        // non strings\n        if (!isString(a) || !isString(b))\n            return compare(a, b);\n        // only for strings\n        const i = collator.compare(a, b);\n        if (i < 0)\n            return -1;\n        if (i > 0)\n            return 1;\n        return 0;\n    };\n}\n","/**\n * Restricts the number of documents in an aggregation pipeline.\n *\n * @param collection\n * @param value\n * @param options\n * @returns {Object|*}\n */\nexport const $limit = (collection, expr, options) => {\n    return collection.take(expr);\n};\n","// Array Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#array-expression-operators\nimport { $nin as __nin, createExpressionOperator } from \"../../_predicates\";\n/**\n * Returns a boolean indicating whether a specified value is not an array.\n * Note: This expression operator is missing from the documentation\n *\n * @param {Object} obj\n * @param {Array} expr\n */\nexport const $nin = createExpressionOperator(__nin);\n","// Array Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#array-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil } from \"../../../util\";\n/**\n * Returns a subset of an array.\n *\n * @param  {Object} obj\n * @param  {*} expr\n * @return {*}\n */\nexport const $slice = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    const arr = args[0];\n    let skip = args[1];\n    let limit = args[2];\n    // MongoDB $slice works a bit differently from Array.slice\n    // Uses single argument for 'limit' and array argument [skip, limit]\n    if (isNil(limit)) {\n        if (skip < 0) {\n            skip = Math.max(0, arr.length + skip);\n            limit = arr.length - skip + 1;\n        }\n        else {\n            limit = skip;\n            skip = 0;\n        }\n    }\n    else {\n        if (skip < 0) {\n            skip = Math.max(0, arr.length + skip);\n        }\n        assert(limit > 0, `Invalid argument for $slice operator. Limit must be a positive number`);\n        limit += skip;\n    }\n    return arr.slice(skip, limit);\n};\n","import { computeValue } from \"../../../core\";\nimport { assert, isArray, isNil, isNumber } from \"../../../util\";\nexport const bitwise = (op, compute) => (obj, expr, options) => {\n    assert(isArray(expr), `${op}: expression must be an array.`);\n    const nums = computeValue(obj, expr, null, options);\n    if (nums.some(isNil))\n        return null;\n    assert(nums.every(isNumber), `${op}: expression must evalue to array of numbers.`);\n    return compute(nums);\n};\n","// Bitwise Operators: https://www.mongodb.com/docs/manual/reference/operator/aggregation/bitAnd/#mongodb-expression-exp\nimport { bitwise } from \"./_internal\";\n/**\n * Returns the result of a bitwise and operation on an array of int or long values.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {Number}\n */\nexport const $bitAnd = bitwise(\"$bitAnd\", nums => nums.reduce((a, b) => a & b, -1));\n","// Bitwise Operators: https://www.mongodb.com/docs/manual/reference/operator/aggregation/bitOr/#mongodb-expression-exp\nimport { bitwise } from \"./_internal\";\n/**\n * Returns the result of a bitwise or operation on an array of int or long values.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {Number}\n */\nexport const $bitOr = bitwise(\"$bitOr\", nums => nums.reduce((a, b) => a | b, 0));\n","// Bitwise Operators: https://www.mongodb.com/docs/manual/reference/operator/aggregation/bitNot/#mongodb-expression-exp\nimport { bitwise } from \"./_internal\";\n/**\n * Returns the result of a bitwise xor (exclusive or) operation on an array of int and long values.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {Number}\n */\nexport const $bitXor = bitwise(\"$bitXor\", nums => nums.reduce((a, b) => a ^ b, 0));\n","// Date Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#date-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil, isObject } from \"../../../util\";\nimport { adjustDate, DATE_FORMAT, DATE_SYM_TABLE, MINUTES_PER_HOUR, parseTimezone, regexQuote, regexStrip } from \"./_internal\";\nconst buildMap = (letters, sign) => {\n    const h = {};\n    letters.split(\"\").forEach((v, i) => (h[v] = sign * (i + 1)));\n    return h;\n};\nconst TZ_LETTER_OFFSETS = Object.assign(Object.assign(Object.assign({}, buildMap(\"ABCDEFGHIKLM\", 1)), buildMap(\"NOPQRSTUVWXY\", -1)), { Z: 0 });\n/**\n * Converts a date/time string to a date object.\n * @param obj\n * @param expr\n */\nexport const $dateFromString = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    args.format = args.format || DATE_FORMAT;\n    args.onNull = args.onNull || null;\n    let dateString = args.dateString;\n    if (isNil(dateString))\n        return args.onNull;\n    // collect all separators of the format string\n    const separators = args.format.split(/%[YGmdHMSLuVzZ]/);\n    separators.reverse();\n    const matches = args.format.match(/(%%|%Y|%G|%m|%d|%H|%M|%S|%L|%u|%V|%z|%Z)/g);\n    const dateParts = {};\n    // holds the valid regex of parts that matches input date string\n    let expectedPattern = \"\";\n    for (let i = 0, len = matches.length; i < len; i++) {\n        const formatSpecifier = matches[i];\n        const props = DATE_SYM_TABLE[formatSpecifier];\n        if (isObject(props)) {\n            // get pattern and alias from table\n            const m = props.re.exec(dateString);\n            // get the next separtor\n            const delimiter = separators.pop() || \"\";\n            if (m !== null) {\n                // store and cut out matched part\n                dateParts[props.name] = /^\\d+$/.exec(m[0]) ? parseInt(m[0]) : m[0];\n                dateString =\n                    dateString.substr(0, m.index) +\n                        dateString.substr(m.index + m[0].length);\n                // construct expected pattern\n                expectedPattern +=\n                    regexQuote(delimiter) + regexStrip(props.re.toString());\n            }\n            else {\n                dateParts[props.name] = null;\n            }\n        }\n    }\n    // 1. validate all required date parts exists\n    // 2. validate original dateString against expected pattern.\n    if (isNil(dateParts.year) ||\n        isNil(dateParts.month) ||\n        isNil(dateParts.day) ||\n        !new RegExp(\"^\" + expectedPattern + \"[A-Z]?$\").exec(args.dateString)) {\n        return args.onError;\n    }\n    const m = args.dateString.match(/([A-Z])$/);\n    assert(\n    // only one of in-date timeone or timezone argument but not both.\n    !(m && args.timezone), `$dateFromString: you cannot pass in a date/time string with time zone information ('${m && m[0]}') together with a timezone argument`);\n    const minuteOffset = m\n        ? TZ_LETTER_OFFSETS[m[0]] * MINUTES_PER_HOUR\n        : parseTimezone(args.timezone);\n    // create the date. month is 0-based in Date\n    const d = new Date(Date.UTC(dateParts.year, dateParts.month - 1, dateParts.day, 0, 0, 0));\n    if (!isNil(dateParts.hour))\n        d.setUTCHours(dateParts.hour);\n    if (!isNil(dateParts.minute))\n        d.setUTCMinutes(dateParts.minute);\n    if (!isNil(dateParts.second))\n        d.setUTCSeconds(dateParts.second);\n    if (!isNil(dateParts.millisecond))\n        d.setUTCMilliseconds(dateParts.millisecond);\n    // adjust to the correct represention for UTC\n    adjustDate(d, -minuteOffset);\n    return d;\n};\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { computeValue } from \"../../../core\";\nconst FIXED_POINTS = {\n    undefined: null,\n    null: null,\n    NaN: NaN,\n    Infinity: new Error(),\n    \"-Infinity\": new Error()\n};\n/**\n * Returns an operator for a given trignometric function\n *\n * @param f The trignometric function\n */\nexport function createTrignometryOperator(f, fixedPoints = FIXED_POINTS) {\n    const fp = Object.assign({}, FIXED_POINTS, fixedPoints);\n    const keySet = new Set(Object.keys(fp));\n    return (obj, expr, options) => {\n        const n = computeValue(obj, expr, null, options);\n        if (keySet.has(`${n}`)) {\n            const res = fp[`${n}`];\n            if (res instanceof Error) {\n                throw new Error(`cannot apply $${f.name} to -inf, value must in (-inf,inf)`);\n            }\n            return res;\n        }\n        return f(n);\n    };\n}\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse cosine (arc cosine) of a value in radians. */\nexport const $acos = createTrignometryOperator(Math.acos, {\n    Infinity: Infinity,\n    0: new Error(),\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse hyperbolic cosine (hyperbolic arc cosine) of a value in radians. */\nexport const $acosh = createTrignometryOperator(Math.acosh, {\n    Infinity: Infinity,\n    0: new Error(),\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse sin (arc sine) of a value in radians. */\nexport const $asin = createTrignometryOperator(Math.asin);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse hyperbolic sine (hyperbolic arc sine) of a value in radians. */\nexport const $asinh = createTrignometryOperator(Math.asinh, {\n    Infinity: Infinity,\n    \"-Infinity\": -Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse tangent (arc tangent) of a value in radians. */\nexport const $atan = createTrignometryOperator(Math.atan);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse hyperbolic tangent (hyperbolic arc tangent) of a value in radians. */\nexport const $atanh = createTrignometryOperator(Math.atanh, {\n    1: Infinity,\n    \"-1\": -Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the cosine of a value that is measured in radians. */\nexport const $cos = createTrignometryOperator(Math.cos);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the hyperbolic cosine of a value that is measured in radians. */\nexport const $cosh = createTrignometryOperator(Math.cosh, {\n    \"-Infinity\": Infinity,\n    Infinity: Infinity,\n    // [Math.PI]: -1,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\nconst RADIANS_FACTOR = Math.PI / 180;\n/** Converts a value from degrees to radians. */\nexport const $degreesToRadians = createTrignometryOperator((n) => n * RADIANS_FACTOR, {\n    Infinity: Infinity,\n    \"-Infinity\": Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\nconst DEGREES_FACTOR = 180 / Math.PI;\n/** Converts a value from radians to degrees. */\nexport const $radiansToDegrees = createTrignometryOperator((n) => n * DEGREES_FACTOR, {\n    Infinity: Infinity,\n    \"-Infinity\": -Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the sine of a value that is measured in radians. */\nexport const $sin = createTrignometryOperator(Math.sin);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the hyperbolic sine of a value that is measured in radians. */\nexport const $sinh = createTrignometryOperator(Math.sinh, {\n    \"-Infinity\": -Infinity,\n    Infinity: Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the tangent of a value that is measured in radians. */\nexport const $tan = createTrignometryOperator(Math.tan);\n","import { ComputeOptions, computeValue, getOperator, OperatorType } from \"../../core\";\nimport { assert, ensureArray, filterMissing, has, inArray, into, isEmpty, isNil, isNumber, isObject, isOperator, isString, merge, notInArray, removeValue, resolveGraph, setValue } from \"../../util\";\n/**\n * Reshapes a document stream.\n * $project can rename, add, or remove fields as well as create computed values and sub-documents.\n *\n * @param collection\n * @param expr\n * @param opt\n * @returns {Array}\n */\nexport const $project = (collection, expr, options) => {\n    if (isEmpty(expr))\n        return collection;\n    // result collection\n    let expressionKeys = Object.keys(expr);\n    let idOnlyExcluded = false;\n    // validate inclusion and exclusion\n    validateExpression(expr, options);\n    const ID_KEY = options.idKey;\n    if (inArray(expressionKeys, ID_KEY)) {\n        const id = expr[ID_KEY];\n        if (id === 0 || id === false) {\n            expressionKeys = expressionKeys.filter(notInArray.bind(null, [ID_KEY]));\n            idOnlyExcluded = expressionKeys.length == 0;\n        }\n    }\n    else {\n        // if not specified the add the ID field\n        expressionKeys.push(ID_KEY);\n    }\n    const copts = ComputeOptions.init(options);\n    return collection.map(((obj) => processObject(obj, expr, copts.update(obj), expressionKeys, idOnlyExcluded)));\n};\n/**\n * Process the expression value for $project operators\n *\n * @param {Object} obj The object to use as options\n * @param {Object} expr The experssion object of $project operator\n * @param {Array} expressionKeys The key in the 'expr' object\n * @param {Boolean} idOnlyExcluded Boolean value indicating whether only the ID key is excluded\n */\nfunction processObject(obj, expr, options, expressionKeys, idOnlyExcluded) {\n    let newObj = {};\n    let foundSlice = false;\n    let foundExclusion = false;\n    const dropKeys = [];\n    if (idOnlyExcluded) {\n        dropKeys.push(options.idKey);\n    }\n    for (const key of expressionKeys) {\n        // final computed value of the key\n        let value = undefined;\n        // expression to associate with key\n        const subExpr = expr[key];\n        if (key !== options.idKey && inArray([0, false], subExpr)) {\n            foundExclusion = true;\n        }\n        if (key === options.idKey && isEmpty(subExpr)) {\n            // tiny optimization here to skip over id\n            value = obj[key];\n        }\n        else if (isString(subExpr)) {\n            value = computeValue(obj, subExpr, key, options);\n        }\n        else if (inArray([1, true], subExpr)) {\n            // For direct projections, we use the resolved object value\n        }\n        else if (subExpr instanceof Array) {\n            value = subExpr.map(v => {\n                const r = computeValue(obj, v, null, options);\n                if (isNil(r))\n                    return null;\n                return r;\n            });\n        }\n        else if (isObject(subExpr)) {\n            const subExprObj = subExpr;\n            const subExprKeys = Object.keys(subExpr);\n            const operator = subExprKeys.length == 1 ? subExprKeys[0] : \"\";\n            // first try a projection operator\n            const call = getOperator(OperatorType.PROJECTION, operator, options);\n            if (call) {\n                // apply the projection operator on the operator expression for the key\n                if (operator === \"$slice\") {\n                    // $slice is handled differently for aggregation and projection operations\n                    if (ensureArray(subExprObj[operator]).every(isNumber)) {\n                        // $slice for projection operation\n                        value = call(obj, subExprObj[operator], key, options);\n                        foundSlice = true;\n                    }\n                    else {\n                        // $slice for aggregation operation\n                        value = computeValue(obj, subExprObj, key, options);\n                    }\n                }\n                else {\n                    value = call(obj, subExprObj[operator], key, options);\n                }\n            }\n            else if (isOperator(operator)) {\n                // compute if operator key\n                value = computeValue(obj, subExprObj[operator], operator, options);\n            }\n            else if (has(obj, key)) {\n                // compute the value for the sub expression for the key\n                validateExpression(subExprObj, options);\n                let target = obj[key];\n                if (target instanceof Array) {\n                    value = target.map((o) => processObject(o, subExprObj, options, subExprKeys, false));\n                }\n                else {\n                    target = isObject(target) ? target : obj;\n                    value = processObject(target, subExprObj, options, subExprKeys, false);\n                }\n            }\n            else {\n                // compute the value for the sub expression for the key\n                value = computeValue(obj, subExpr, null, options);\n            }\n        }\n        else {\n            dropKeys.push(key);\n            continue;\n        }\n        // get value with object graph\n        const objPathGraph = resolveGraph(obj, key, {\n            preserveMissing: true\n        });\n        // add the value at the path\n        if (objPathGraph !== undefined) {\n            merge(newObj, objPathGraph, {\n                flatten: true\n            });\n        }\n        // if computed add/or remove accordingly\n        if (notInArray([0, 1, false, true], subExpr)) {\n            if (value === undefined) {\n                removeValue(newObj, key, { descendArray: true });\n            }\n            else {\n                setValue(newObj, key, value);\n            }\n        }\n    }\n    // filter out all missing values preserved to support correct merging\n    filterMissing(newObj);\n    // For the following cases we include all keys on the object that were not explicitly excluded.\n    //\n    // 1. projection included $slice operator\n    // 2. some fields were explicitly excluded\n    // 3. only the id field was excluded\n    if (foundSlice || foundExclusion || idOnlyExcluded) {\n        newObj = into({}, obj, newObj);\n        if (dropKeys.length > 0) {\n            for (const k of dropKeys) {\n                removeValue(newObj, k, { descendArray: true });\n            }\n        }\n    }\n    return newObj;\n}\n/**\n * Validate inclusion and exclusion values in expression\n *\n * @param {Object} expr The expression given for the projection\n */\nfunction validateExpression(expr, options) {\n    const check = [false, false];\n    for (const [k, v] of Object.entries(expr)) {\n        if (k === (options === null || options === void 0 ? void 0 : options.idKey))\n            return;\n        if (v === 0 || v === false) {\n            check[0] = true;\n        }\n        else if (v === 1 || v === true) {\n            check[1] = true;\n        }\n        assert(!(check[0] && check[1]), \"Projection cannot have a mix of inclusion and exclusion.\");\n    }\n}\n","/**\n * Skips over a specified number of documents from the pipeline and returns the rest.\n *\n * @param collection An iterator\n * @param expr\n * @param  {Options} options\n * @returns {*}\n */\nexport const $skip = (collection, expr, options) => {\n    return collection.drop(expr);\n};\n","// Projection Operators. https://docs.mongodb.com/manual/reference/operator/projection/\nexport * from \"./elemMatch\";\nexport * from \"./slice\";\n","// $elemMatch operator. https://docs.mongodb.com/manual/reference/operator/projection/elemMatch/#proj._S_elemMatch\nimport { Query } from \"../../query\";\nimport { assert, resolve } from \"../../util\";\n/**\n * Projects only the first element from an array that matches the specified $elemMatch condition.\n *\n * @param obj\n * @param field\n * @param expr\n * @returns {*}\n */\nexport const $elemMatch = (obj, expr, field, options) => {\n    const arr = resolve(obj, field);\n    const query = new Query(expr, options);\n    assert(arr instanceof Array, \"$elemMatch: argument must resolve to array\");\n    const result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (query.test(arr[i])) {\n            // MongoDB projects only the first nested document when using this operator.\n            // For some use cases this can lead to complicated queries to selectively project nested documents.\n            // When strict mode is disabled, we return all matching nested documents.\n            if (options.useStrictMode)\n                return [arr[i]];\n            result.push(arr[i]);\n        }\n    }\n    return result.length > 0 ? result : undefined;\n};\n","// $slice operator. https://docs.mongodb.com/manual/reference/operator/projection/slice/#proj._S_slice\nimport { isArray, resolve } from \"../../util\";\nimport { $slice as __slice } from \"../expression/array/slice\";\n/**\n * Limits the number of elements projected from an array. Supports skip and limit slices.\n *\n * @param obj\n * @param field\n * @param expr\n */\nexport const $slice = (obj, expr, field, options) => {\n    const xs = resolve(obj, field);\n    const exprAsArray = expr;\n    if (!isArray(xs))\n        return xs;\n    return __slice(obj, expr instanceof Array ? [xs, ...exprAsArray] : [xs, expr], options);\n};\n","export * from \"./array\";\nexport * from \"./bitwise\";\nexport * from \"./comparison\";\nexport * from \"./element\";\nexport * from \"./evaluation\";\nexport * from \"./logical\";\n","// Query Array Operators: https://docs.mongodb.com/manual/reference/operator/query-array/\nimport { $all as __all, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches arrays that contain all elements specified in the query.\n */\nexport const $all = createQueryOperator(__all);\n","// Query Array Operators: https://docs.mongodb.com/manual/reference/operator/query-array/\nimport { $elemMatch as __elemMatch, createQueryOperator, } from \"../../_predicates\";\n/**\n * Selects documents if element in the array field matches all the specified $elemMatch conditions.\n */\nexport const $elemMatch = createQueryOperator(__elemMatch);\n","// Query Array Operators: https://docs.mongodb.com/manual/reference/operator/query-array/\nimport { $size as __size, createQueryOperator } from \"../../_predicates\";\n/**\n * Selects documents if the array field is a specified size.\n */\nexport const $size = createQueryOperator(__size);\n","import { createQueryOperator } from \"../../_predicates\";\nexport const createBitwiseOperator = (predicate) => {\n    return createQueryOperator((value, mask, options) => {\n        let b = 0;\n        if (mask instanceof Array) {\n            for (const n of mask)\n                b = b | (1 << n);\n        }\n        else {\n            b = mask;\n        }\n        return predicate(value & b, b);\n    });\n};\n","// Query Bitwise Operators: https://docs.mongodb.com/manual/reference/operator/query-bitwise/\nimport { createBitwiseOperator } from \"./_internal\";\n/**\n * Matches numeric or binary values in which a set of bit positions all have a value of 0.\n */\nexport const $bitsAllClear = createBitwiseOperator((result, _) => result == 0);\n","// Query Bitwise Operators: https://docs.mongodb.com/manual/reference/operator/query-bitwise/\nimport { createBitwiseOperator } from \"./_internal\";\n/**\n * Matches numeric or binary values in which a set of bit positions all have a value of 1.\n */\nexport const $bitsAllSet = createBitwiseOperator((result, mask) => result == mask);\n","// Query Bitwise Operators: https://docs.mongodb.com/manual/reference/operator/query-bitwise/\nimport { createBitwiseOperator } from \"./_internal\";\n/**\n * Matches numeric or binary values in which any bit from a set of bit positions has a value of 0.\n */\nexport const $bitsAnyClear = createBitwiseOperator((result, mask) => result < mask);\n","// Query Bitwise Operators: https://docs.mongodb.com/manual/reference/operator/query-bitwise/\nimport { createBitwiseOperator } from \"./_internal\";\n/**\n * Matches numeric or binary values in which any bit from a set of bit positions has a value of 1.\n */\nexport const $bitsAnySet = createBitwiseOperator((result, _) => result > 0);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $eq as __eq, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are equal to a specified value.\n */\nexport const $eq = createQueryOperator(__eq);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $gt as __gt, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are greater than a specified value.\n */\nexport const $gt = createQueryOperator(__gt);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $gte as __gte, createQueryOperator } from \"../../_predicates\";\n/**\n * \tMatches values that are greater than or equal to a specified value.\n */\nexport const $gte = createQueryOperator(__gte);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $in as __in, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches any of the values that exist in an array specified in the query.\n */\nexport const $in = createQueryOperator(__in);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $lt as __lt, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than the value specified in the query.\n */\nexport const $lt = createQueryOperator(__lt);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $lte as __lte, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than or equal to the value specified in the query.\n */\nexport const $lte = createQueryOperator(__lte);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $ne as __ne, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches all values that are not equal to the value specified in the query.\n */\nexport const $ne = createQueryOperator(__ne);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $nin as __nin, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that do not exist in an array specified to the query.\n */\nexport const $nin = createQueryOperator(__nin);\n","// Query Element Operators: https://docs.mongodb.com/manual/reference/operator/query-element/\nimport { $exists as __exists, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches documents that have the specified field.\n */\nexport const $exists = createQueryOperator(__exists);\n","// Query Element Operators: https://docs.mongodb.com/manual/reference/operator/query-element/\nimport { $type as __type, createQueryOperator } from \"../../_predicates\";\n/**\n * Selects documents if a field is of the specified type.\n */\nexport const $type = createQueryOperator(__type);\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\nimport { computeValue } from \"../../../core\";\n/**\n * Allows the use of aggregation expressions within the query language.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport function $expr(_, rhs, options) {\n    return obj => computeValue(obj, rhs, null, options);\n}\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\n/**\n * Validate documents against the given JSON Schema.\n *\n * @param selector\n * @param schema\n * @returns {Function}\n */\nexport function $jsonSchema(_, schema, options) {\n    if (!(options === null || options === void 0 ? void 0 : options.jsonSchemaValidator)) {\n        throw new Error(\"Missing option 'jsonSchemaValidator'. Configure to use '$jsonSchema' operator.\");\n    }\n    const validate = options === null || options === void 0 ? void 0 : options.jsonSchemaValidator(schema);\n    return (obj) => validate(obj);\n}\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\nimport { $mod as __mod, createQueryOperator } from \"../../_predicates\";\n/**\n * Performs a modulo operation on the value of a field and selects documents with a specified result.\n */\nexport const $mod = createQueryOperator(__mod);\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\nimport { $regex as __regex, createQueryOperator } from \"../../_predicates\";\n/**\n * Selects documents where values match a specified regular expression.\n */\nexport const $regex = createQueryOperator(__regex);\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\nimport { assert, isFunction, truthy } from \"../../../util\";\n/* eslint-disable */\n/**\n * Matches documents that satisfy a JavaScript expression.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport function $where(_, rhs, options) {\n    assert(options.scriptEnabled, \"$where operator requires 'scriptEnabled' option to be true\");\n    const f = rhs;\n    assert(isFunction(f), \"$where only accepts a Function object\");\n    return (obj) => truthy(f.call(obj), options === null || options === void 0 ? void 0 : options.useStrictMode);\n}\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { assert, isArray } from \"../../../util\";\n/**\n * Joins query clauses with a logical AND returns all documents that match the conditions of both clauses.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $and = (_, rhs, options) => {\n    assert(isArray(rhs), \"Invalid expression: $and expects value to be an Array.\");\n    const queries = rhs.map(expr => new Query(expr, options));\n    return (obj) => queries.every(q => q.test(obj));\n};\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { assert, isArray } from \"../../../util\";\n/**\n * Joins query clauses with a logical OR returns all documents that match the conditions of either clause.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $or = (_, rhs, options) => {\n    assert(isArray(rhs), \"Invalid expression. $or expects value to be an Array\");\n    const queries = rhs.map(expr => new Query(expr, options));\n    return (obj) => queries.some(q => q.test(obj));\n};\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { assert, isArray } from \"../../../util\";\nimport { $or } from \"./or\";\n/**\n * Joins query clauses with a logical NOR returns all documents that fail to match both clauses.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $nor = (_, rhs, options) => {\n    assert(isArray(rhs), \"Invalid expression. $nor expects value to be an array.\");\n    const f = $or(\"$or\", rhs, options);\n    return (obj) => !f(obj);\n};\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { normalize } from \"../../../util\";\n/**\n * Inverts the effect of a query expression and returns documents that do not match the query expression.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $not = (selector, rhs, options) => {\n    const criteria = {};\n    criteria[selector] = normalize(rhs);\n    const query = new Query(criteria, options);\n    return (obj) => !query.test(obj);\n};\n","/**\n * Loads all Query and Projection operators\n */\nimport { Context, OperatorType, useOperators } from \"../core\";\nimport * as booleanOperators from \"../operators/expression/boolean\";\nimport * as comparisonOperators from \"../operators/expression/comparison\";\nimport { $limit, $project, $skip, $sort } from \"../operators/pipeline\";\nimport * as projectionOperators from \"../operators/projection\";\nimport * as queryOperators from \"../operators/query\";\nuseOperators(OperatorType.EXPRESSION, Object.assign(Object.assign({}, booleanOperators), comparisonOperators));\nuseOperators(OperatorType.PIPELINE, {\n    $project,\n    $skip,\n    $limit,\n    $sort\n});\nuseOperators(OperatorType.PROJECTION, projectionOperators);\nuseOperators(OperatorType.QUERY, queryOperators);\n/** The basic context for queries. */\nexport const BASIC_CONTEXT = Context.init()\n    .addExpressionOps(Object.assign(Object.assign({}, booleanOperators), comparisonOperators))\n    .addPipelineOps({ $project, $skip, $limit, $sort })\n    .addProjectionOps(projectionOperators)\n    .addQueryOps(queryOperators);\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n","import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nexport default arrayReduce;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n","import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n","import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n","import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n","import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n","import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n","import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n","import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n","import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n","import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arrayIncludesWith;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import identity from './identity.js';\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nexport default castFunction;\n","import arrayEach from './_arrayEach.js';\nimport baseEach from './_baseEach.js';\nimport castFunction from './_castFunction.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nexport default forEach;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","import arrayMap from './_arrayMap.js';\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nexport default baseValues;\n","import baseValues from './_baseValues.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nexport default values;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nexport default baseReduce;\n","import arrayReduce from './_arrayReduce.js';\nimport baseEach from './_baseEach.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseReduce from './_baseReduce.js';\nimport isArray from './isArray.js';\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nexport default reduce;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","export function PRINT_ERROR(msg: string) {\n  /* istanbul ignore else - can't override global.console in node.js */\n  if (console && console.error) {\n    console.error(`Error: ${msg}`);\n  }\n}\n\nexport function PRINT_WARNING(msg: string) {\n  /* istanbul ignore else - can't override global.console in node.js*/\n  if (console && console.warn) {\n    // TODO: modify docs accordingly\n    console.warn(`Warning: ${msg}`);\n  }\n}\n","export function timer<T>(func: () => T): { time: number; value: T } {\n  const start = new Date().getTime();\n  const val = func();\n  const end = new Date().getTime();\n  const total = end - start;\n  return { time: total, value: val };\n}\n","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast: any) {\n  function FakeConstructor() {}\n\n  // If our object is used as a constructor, it would receive\n  FakeConstructor.prototype = toBecomeFast;\n  const fakeInstance = new (FakeConstructor as any)();\n\n  function fakeAccess() {\n    return typeof fakeInstance.bar;\n  }\n\n  // help V8 understand this is a \"real\" prototype by actually using\n  // the fake instance.\n  fakeAccess();\n  fakeAccess();\n\n  // Always true condition to suppress the Firefox warning of unreachable\n  // code after a return statement.\n  if (1) return toBecomeFast;\n\n  // Eval prevents optimization of this method (even though this is dead code)\n  // - https://esbuild.github.io/content-types/#direct-eval\n  /* istanbul ignore next */\n  // tslint:disable-next-line\n  (0, eval)(toBecomeFast);\n}\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\nimport type {\n  IGASTVisitor,\n  IProduction,\n  IProductionWithOccurrence,\n  ISerializedGast,\n  TokenType,\n} from \"@chevrotain/types\";\n\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType: TokenType): string {\n  if (hasTokenLabel(tokType)) {\n    return tokType.LABEL;\n  } else {\n    return tokType.name;\n  }\n}\n\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(\n  obj: TokenType,\n): obj is TokenType & Pick<Required<TokenType>, \"LABEL\"> {\n  return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\n\nexport abstract class AbstractProduction<T extends IProduction = IProduction>\n  implements IProduction\n{\n  public get definition(): T[] {\n    return this._definition;\n  }\n  public set definition(value: T[]) {\n    this._definition = value;\n  }\n\n  constructor(protected _definition: T[]) {}\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this);\n    forEach(this.definition, (prod) => {\n      prod.accept(visitor);\n    });\n  }\n}\n\nexport class NonTerminal\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public nonTerminalName!: string;\n  public label?: string;\n  public referencedRule!: Rule;\n  public idx: number = 1;\n\n  constructor(options: {\n    nonTerminalName: string;\n    label?: string;\n    referencedRule?: Rule;\n    idx?: number;\n  }) {\n    super([]);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n\n  set definition(definition: IProduction[]) {\n    // immutable\n  }\n\n  get definition(): IProduction[] {\n    if (this.referencedRule !== undefined) {\n      return this.referencedRule.definition;\n    }\n    return [];\n  }\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this);\n    // don't visit children of a reference, we will get cyclic infinite loops if we do so\n  }\n}\n\nexport class Rule extends AbstractProduction {\n  public name!: string;\n  public orgText: string = \"\";\n\n  constructor(options: {\n    name: string;\n    definition: IProduction[];\n    orgText?: string;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class Alternative extends AbstractProduction {\n  public ignoreAmbiguities: boolean = false;\n\n  constructor(options: {\n    definition: IProduction[];\n    ignoreAmbiguities?: boolean;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class Option\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public idx: number = 1;\n  public maxLookahead?: number;\n\n  constructor(options: {\n    definition: IProduction[];\n    idx?: number;\n    maxLookahead?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class RepetitionMandatory\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public idx: number = 1;\n  public maxLookahead?: number;\n\n  constructor(options: {\n    definition: IProduction[];\n    idx?: number;\n    maxLookahead?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class RepetitionMandatoryWithSeparator\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public separator!: TokenType;\n  public idx: number = 1;\n  public maxLookahead?: number;\n\n  constructor(options: {\n    definition: IProduction[];\n    separator: TokenType;\n    idx?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class Repetition\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public separator!: TokenType;\n  public idx: number = 1;\n  public maxLookahead?: number;\n\n  constructor(options: {\n    definition: IProduction[];\n    idx?: number;\n    maxLookahead?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class RepetitionWithSeparator\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public separator!: TokenType;\n  public idx: number = 1;\n  public maxLookahead?: number;\n\n  constructor(options: {\n    definition: IProduction[];\n    separator: TokenType;\n    idx?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class Alternation\n  extends AbstractProduction<Alternative>\n  implements IProductionWithOccurrence\n{\n  public idx: number = 1;\n  public ignoreAmbiguities: boolean = false;\n  public hasPredicates: boolean = false;\n  public maxLookahead?: number;\n\n  public get definition(): Alternative[] {\n    return this._definition;\n  }\n  public set definition(value: Alternative[]) {\n    this._definition = value;\n  }\n\n  constructor(options: {\n    definition: Alternative[];\n    idx?: number;\n    ignoreAmbiguities?: boolean;\n    hasPredicates?: boolean;\n    maxLookahead?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class Terminal implements IProductionWithOccurrence {\n  public terminalType!: TokenType;\n  public label?: string;\n  public idx: number = 1;\n\n  constructor(options: {\n    terminalType: TokenType;\n    label?: string;\n    idx?: number;\n  }) {\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this);\n  }\n}\n\nexport interface ISerializedBasic extends ISerializedGast {\n  type:\n    | \"Alternative\"\n    | \"Option\"\n    | \"RepetitionMandatory\"\n    | \"Repetition\"\n    | \"Alternation\";\n  idx?: number;\n}\n\nexport interface ISerializedGastRule extends ISerializedGast {\n  type: \"Rule\";\n  name: string;\n  orgText: string;\n}\n\nexport interface ISerializedNonTerminal extends ISerializedGast {\n  type: \"NonTerminal\";\n  name: string;\n  label?: string;\n  idx: number;\n}\n\nexport interface ISerializedTerminal extends ISerializedGast {\n  type: \"Terminal\";\n  name: string;\n  terminalLabel?: string;\n  label?: string;\n  pattern?: string;\n  idx: number;\n}\n\nexport interface ISerializedTerminalWithSeparator extends ISerializedGast {\n  type: \"RepetitionMandatoryWithSeparator\" | \"RepetitionWithSeparator\";\n  idx: number;\n  separator: ISerializedTerminal;\n}\n\nexport type ISerializedGastAny =\n  | ISerializedBasic\n  | ISerializedGastRule\n  | ISerializedNonTerminal\n  | ISerializedTerminal\n  | ISerializedTerminalWithSeparator;\n\nexport function serializeGrammar(topRules: Rule[]): ISerializedGast[] {\n  return map(topRules, serializeProduction);\n}\n\nexport function serializeProduction(node: IProduction): ISerializedGast {\n  function convertDefinition(definition: IProduction[]): ISerializedGast[] {\n    return map(definition, serializeProduction);\n  }\n  /* istanbul ignore else */\n  if (node instanceof NonTerminal) {\n    const serializedNonTerminal: ISerializedNonTerminal = {\n      type: \"NonTerminal\",\n      name: node.nonTerminalName,\n      idx: node.idx,\n    };\n\n    if (isString(node.label)) {\n      serializedNonTerminal.label = node.label;\n    }\n\n    return serializedNonTerminal;\n  } else if (node instanceof Alternative) {\n    return <ISerializedBasic>{\n      type: \"Alternative\",\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof Option) {\n    return <ISerializedBasic>{\n      type: \"Option\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof RepetitionMandatory) {\n    return <ISerializedBasic>{\n      type: \"RepetitionMandatory\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof RepetitionMandatoryWithSeparator) {\n    return <ISerializedTerminalWithSeparator>{\n      type: \"RepetitionMandatoryWithSeparator\",\n      idx: node.idx,\n      separator: <ISerializedTerminal>(\n        serializeProduction(new Terminal({ terminalType: node.separator }))\n      ),\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof RepetitionWithSeparator) {\n    return <ISerializedTerminalWithSeparator>{\n      type: \"RepetitionWithSeparator\",\n      idx: node.idx,\n      separator: <ISerializedTerminal>(\n        serializeProduction(new Terminal({ terminalType: node.separator }))\n      ),\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof Repetition) {\n    return <ISerializedBasic>{\n      type: \"Repetition\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof Alternation) {\n    return <ISerializedBasic>{\n      type: \"Alternation\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof Terminal) {\n    const serializedTerminal = <ISerializedTerminal>{\n      type: \"Terminal\",\n      name: node.terminalType.name,\n      label: tokenLabel(node.terminalType),\n      idx: node.idx,\n    };\n\n    if (isString(node.label)) {\n      serializedTerminal.terminalLabel = node.label;\n    }\n\n    const pattern = node.terminalType.PATTERN;\n    if (node.terminalType.PATTERN) {\n      serializedTerminal.pattern = isRegExp(pattern)\n        ? (<any>pattern).source\n        : pattern;\n    }\n\n    return serializedTerminal;\n  } else if (node instanceof Rule) {\n    return <ISerializedGastRule>{\n      type: \"Rule\",\n      name: node.name,\n      orgText: node.orgText,\n      definition: convertDefinition(node.definition),\n    };\n    /* c8 ignore next 3 */\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n","import {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal,\n} from \"./model.js\";\nimport type { IProduction } from \"@chevrotain/types\";\n\nexport abstract class GAstVisitor {\n  public visit(node: IProduction): any {\n    const nodeAny: any = node;\n    switch (nodeAny.constructor) {\n      case NonTerminal:\n        return this.visitNonTerminal(nodeAny);\n      case Alternative:\n        return this.visitAlternative(nodeAny);\n      case Option:\n        return this.visitOption(nodeAny);\n      case RepetitionMandatory:\n        return this.visitRepetitionMandatory(nodeAny);\n      case RepetitionMandatoryWithSeparator:\n        return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n      case RepetitionWithSeparator:\n        return this.visitRepetitionWithSeparator(nodeAny);\n      case Repetition:\n        return this.visitRepetition(nodeAny);\n      case Alternation:\n        return this.visitAlternation(nodeAny);\n      case Terminal:\n        return this.visitTerminal(nodeAny);\n      case Rule:\n        return this.visitRule(nodeAny);\n      /* c8 ignore next 2 */\n      default:\n        throw Error(\"non exhaustive match\");\n    }\n  }\n\n  /* c8 ignore next */\n  public visitNonTerminal(node: NonTerminal): any {}\n\n  /* c8 ignore next */\n  public visitAlternative(node: Alternative): any {}\n\n  /* c8 ignore next */\n  public visitOption(node: Option): any {}\n\n  /* c8 ignore next */\n  public visitRepetition(node: Repetition): any {}\n\n  /* c8 ignore next */\n  public visitRepetitionMandatory(node: RepetitionMandatory): any {}\n\n  /* c8 ignore next 3 */\n  public visitRepetitionMandatoryWithSeparator(\n    node: RepetitionMandatoryWithSeparator,\n  ): any {}\n\n  /* c8 ignore next */\n  public visitRepetitionWithSeparator(node: RepetitionWithSeparator): any {}\n\n  /* c8 ignore next */\n  public visitAlternation(node: Alternation): any {}\n\n  /* c8 ignore next */\n  public visitTerminal(node: Terminal): any {}\n\n  /* c8 ignore next */\n  public visitRule(node: Rule): any {}\n}\n","import { every, includes, some } from \"lodash-es\";\nimport {\n  AbstractProduction,\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal,\n} from \"./model.js\";\nimport type { IProduction, IProductionWithOccurrence } from \"@chevrotain/types\";\n\nexport function isSequenceProd(\n  prod: IProduction,\n): prod is { definition: IProduction[] } & IProduction {\n  return (\n    prod instanceof Alternative ||\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionMandatory ||\n    prod instanceof RepetitionMandatoryWithSeparator ||\n    prod instanceof RepetitionWithSeparator ||\n    prod instanceof Terminal ||\n    prod instanceof Rule\n  );\n}\n\nexport function isOptionalProd(\n  prod: IProduction,\n  alreadyVisited: NonTerminal[] = [],\n): boolean {\n  const isDirectlyOptional =\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionWithSeparator;\n  if (isDirectlyOptional) {\n    return true;\n  }\n\n  // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n  if (prod instanceof Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return some((<Alternation>prod).definition, (subProd: IProduction) => {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false;\n  } else if (prod instanceof AbstractProduction) {\n    if (prod instanceof NonTerminal) {\n      alreadyVisited.push(prod);\n    }\n    return every(\n      (<AbstractProduction>prod).definition,\n      (subProd: IProduction) => {\n        return isOptionalProd(subProd, alreadyVisited);\n      },\n    );\n  } else {\n    return false;\n  }\n}\n\nexport function isBranchingProd(\n  prod: IProduction,\n): prod is { definition: IProduction[] } & IProduction {\n  return prod instanceof Alternation;\n}\n\nexport function getProductionDslName(prod: IProductionWithOccurrence): string {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    return \"SUBRULE\";\n  } else if (prod instanceof Option) {\n    return \"OPTION\";\n  } else if (prod instanceof Alternation) {\n    return \"OR\";\n  } else if (prod instanceof RepetitionMandatory) {\n    return \"AT_LEAST_ONE\";\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\";\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return \"MANY_SEP\";\n  } else if (prod instanceof Repetition) {\n    return \"MANY\";\n  } else if (prod instanceof Terminal) {\n    return \"CONSUME\";\n    /* c8 ignore next 3 */\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n","import { drop, forEach } from \"lodash-es\";\nimport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport { IProduction } from \"@chevrotain/types\";\n\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport abstract class RestWalker {\n  walk(prod: { definition: IProduction[] }, prevRest: any[] = []): void {\n    forEach(prod.definition, (subProd: IProduction, index) => {\n      const currRest = drop(prod.definition, index + 1);\n      /* istanbul ignore else */\n      if (subProd instanceof NonTerminal) {\n        this.walkProdRef(subProd, currRest, prevRest);\n      } else if (subProd instanceof Terminal) {\n        this.walkTerminal(subProd, currRest, prevRest);\n      } else if (subProd instanceof Alternative) {\n        this.walkFlat(subProd, currRest, prevRest);\n      } else if (subProd instanceof Option) {\n        this.walkOption(subProd, currRest, prevRest);\n      } else if (subProd instanceof RepetitionMandatory) {\n        this.walkAtLeastOne(subProd, currRest, prevRest);\n      } else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n        this.walkAtLeastOneSep(subProd, currRest, prevRest);\n      } else if (subProd instanceof RepetitionWithSeparator) {\n        this.walkManySep(subProd, currRest, prevRest);\n      } else if (subProd instanceof Repetition) {\n        this.walkMany(subProd, currRest, prevRest);\n      } else if (subProd instanceof Alternation) {\n        this.walkOr(subProd, currRest, prevRest);\n      } else {\n        throw Error(\"non exhaustive match\");\n      }\n    });\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {}\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {}\n\n  walkFlat(\n    flatProd: Alternative,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABCDEF => after the D the rest is EF\n    const fullOrRest = currRest.concat(prevRest);\n    this.walk(flatProd, <any>fullOrRest);\n  }\n\n  walkOption(\n    optionProd: Option,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC(DE)?F => after the (DE)? the rest is F\n    const fullOrRest = currRest.concat(prevRest);\n    this.walk(optionProd, <any>fullOrRest);\n  }\n\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n    const fullAtLeastOneRest: IProduction[] = [\n      new Option({ definition: atLeastOneProd.definition }),\n    ].concat(<any>currRest, <any>prevRest);\n    this.walk(atLeastOneProd, fullAtLeastOneRest);\n  }\n\n  walkAtLeastOneSep(\n    atLeastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n    const fullAtLeastOneSepRest = restForRepetitionWithSeparator(\n      atLeastOneSepProd,\n      currRest,\n      prevRest,\n    );\n    this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n  }\n\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n    const fullManyRest: IProduction[] = [\n      new Option({ definition: manyProd.definition }),\n    ].concat(<any>currRest, <any>prevRest);\n    this.walk(manyProd, fullManyRest);\n  }\n\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n    const fullManySepRest = restForRepetitionWithSeparator(\n      manySepProd,\n      currRest,\n      prevRest,\n    );\n    this.walk(manySepProd, fullManySepRest);\n  }\n\n  walkOr(\n    orProd: Alternation,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n    const fullOrRest = currRest.concat(prevRest);\n    // walk all different alternatives\n    forEach(orProd.definition, (alt) => {\n      // wrapping each alternative in a single definition wrapper\n      // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n      // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n      const prodWrapper = new Alternative({ definition: [alt] });\n      this.walk(prodWrapper, <any>fullOrRest);\n    });\n  }\n}\n\nfunction restForRepetitionWithSeparator(\n  repSepProd: RepetitionWithSeparator,\n  currRest: IProduction[],\n  prevRest: IProduction[],\n) {\n  const repSepRest = [\n    new Option({\n      definition: [\n        new Terminal({ terminalType: repSepProd.separator }) as IProduction,\n      ].concat(repSepProd.definition),\n    }) as IProduction,\n  ];\n  const fullRepSepRest: IProduction[] = repSepRest.concat(currRest, prevRest);\n  return fullRepSepRest;\n}\n","import { flatten, map, uniq } from \"lodash-es\";\nimport {\n  isBranchingProd,\n  isOptionalProd,\n  isSequenceProd,\n  NonTerminal,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport { IProduction, TokenType } from \"@chevrotain/types\";\n\nexport function first(prod: IProduction): TokenType[] {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    // this could in theory cause infinite loops if\n    // (1) prod A refs prod B.\n    // (2) prod B refs prod A\n    // (3) AB can match the empty set\n    // in other words a cycle where everything is optional so the first will keep\n    // looking ahead for the next optional part and will never exit\n    // currently there is no safeguard for this unique edge case because\n    // (1) not sure a grammar in which this can happen is useful for anything (productive)\n    return first((<NonTerminal>prod).referencedRule);\n  } else if (prod instanceof Terminal) {\n    return firstForTerminal(<Terminal>prod);\n  } else if (isSequenceProd(prod)) {\n    return firstForSequence(prod);\n  } else if (isBranchingProd(prod)) {\n    return firstForBranching(prod);\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nexport function firstForSequence(prod: {\n  definition: IProduction[];\n}): TokenType[] {\n  let firstSet: TokenType[] = [];\n  const seq = prod.definition;\n  let nextSubProdIdx = 0;\n  let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n  let currSubProd;\n  // so we enter the loop at least once (if the definition is not empty\n  let isLastInnerProdOptional = true;\n  // scan a sequence until it's end or until we have found a NONE optional production in it\n  while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n    currSubProd = seq[nextSubProdIdx];\n    isLastInnerProdOptional = isOptionalProd(currSubProd);\n    firstSet = firstSet.concat(first(currSubProd));\n    nextSubProdIdx = nextSubProdIdx + 1;\n    hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n  }\n\n  return uniq(firstSet);\n}\n\nexport function firstForBranching(prod: {\n  definition: IProduction[];\n}): TokenType[] {\n  const allAlternativesFirsts: TokenType[][] = map(\n    prod.definition,\n    (innerProd) => {\n      return first(innerProd);\n    },\n  );\n  return uniq(flatten<TokenType>(allAlternativesFirsts));\n}\n\nexport function firstForTerminal(terminal: Terminal): TokenType[] {\n  return [terminal.terminalType];\n}\n","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative, NonTerminal, Rule, Terminal } from \"@chevrotain/gast\";\nimport { IProduction, TokenType } from \"@chevrotain/types\";\n\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n  public follows: Record<string, TokenType[]> = {};\n\n  constructor(private topProd: Rule) {\n    super();\n  }\n\n  startWalking(): Record<string, TokenType[]> {\n    this.walk(this.topProd);\n    return this.follows;\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // do nothing! just like in the public sector after 13:00\n  }\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    const followName =\n      buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n      this.topProd.name;\n    const fullRest: IProduction[] = currRest.concat(prevRest);\n    const restProd = new Alternative({ definition: fullRest });\n    const t_in_topProd_follows = first(restProd);\n    this.follows[followName] = t_in_topProd_follows;\n  }\n}\n\nexport function computeAllProdsFollows(\n  topProductions: Rule[],\n): Record<string, TokenType[]> {\n  const reSyncFollows = {};\n\n  forEach(topProductions, (topProd) => {\n    const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n    assign(reSyncFollows, currRefsFollow);\n  });\n  return reSyncFollows;\n}\n\nexport function buildBetweenProdsFollowPrefix(\n  inner: Rule,\n  occurenceInParent: number,\n): string {\n  return inner.name + occurenceInParent + IN;\n}\n\nexport function buildInProdFollowPrefix(terminal: Terminal): string {\n  const terminalName = terminal.terminalType.name;\n  return terminalName + terminal.idx + IN;\n}\n","import type { Character, IRegExpAST, RegExpFlags } from \"../types\";\n\nexport function cc(char: string): number {\n  return char.charCodeAt(0);\n}\n\nexport function insertToSet<T>(item: T | T[], set: T[]) {\n  if (Array.isArray(item)) {\n    item.forEach(function (subItem) {\n      set.push(subItem);\n    });\n  } else {\n    set.push(item);\n  }\n}\n\nexport function addFlag(\n  flagObj: RegExpFlags,\n  flagKey: keyof Omit<RegExpFlags, keyof IRegExpAST>,\n) {\n  if (flagObj[flagKey] === true) {\n    throw \"duplicate flag \" + flagKey;\n  }\n\n  const x: boolean = flagObj[flagKey];\n  flagObj[flagKey] = true;\n}\n\nexport function ASSERT_EXISTS<T = Object>(obj: any): obj is T {\n  // istanbul ignore next\n  if (obj === undefined) {\n    throw Error(\"Internal Error - Should never get here!\");\n  }\n  return true;\n}\n\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE(): any {\n  throw Error(\"Internal Error - Should never get here!\");\n}\n\nexport function isCharacter(obj: { type: string }): obj is Character {\n  return obj[\"type\"] === \"Character\";\n}\n","import { cc } from \"./utils.js\";\n\nexport const digitsCharCodes: number[] = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n  digitsCharCodes.push(i);\n}\n\nexport const wordCharCodes: number[] = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n  wordCharCodes.push(i);\n}\n\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n  wordCharCodes.push(i);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes: number[] = [\n  cc(\" \"),\n  cc(\"\\f\"),\n  cc(\"\\n\"),\n  cc(\"\\r\"),\n  cc(\"\\t\"),\n  cc(\"\\v\"),\n  cc(\"\\t\"),\n  cc(\"\\u00a0\"),\n  cc(\"\\u1680\"),\n  cc(\"\\u2000\"),\n  cc(\"\\u2001\"),\n  cc(\"\\u2002\"),\n  cc(\"\\u2003\"),\n  cc(\"\\u2004\"),\n  cc(\"\\u2005\"),\n  cc(\"\\u2006\"),\n  cc(\"\\u2007\"),\n  cc(\"\\u2008\"),\n  cc(\"\\u2009\"),\n  cc(\"\\u200a\"),\n  cc(\"\\u2028\"),\n  cc(\"\\u2029\"),\n  cc(\"\\u202f\"),\n  cc(\"\\u205f\"),\n  cc(\"\\u3000\"),\n  cc(\"\\ufeff\"),\n];\n","import type {\n  Alternative,\n  Assertion,\n  Atom,\n  Character,\n  Disjunction,\n  Group,\n  GroupBackReference,\n  Location,\n  Quantifier,\n  Range,\n  RegExpFlags,\n  RegExpPattern,\n  Set,\n  Term,\n} from \"../types\";\nimport {\n  addFlag,\n  ASSERT_EXISTS,\n  ASSERT_NEVER_REACH_HERE,\n  cc,\n  insertToSet,\n  isCharacter,\n} from \"./utils.js\";\nimport {\n  digitsCharCodes,\n  whitespaceCodes,\n  wordCharCodes,\n} from \"./character-classes.js\";\n\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n  protected idx: number = 0;\n  protected input: string = \"\";\n  protected groupIdx: number = 0;\n\n  protected saveState() {\n    return {\n      idx: this.idx,\n      input: this.input,\n      groupIdx: this.groupIdx,\n    };\n  }\n\n  protected restoreState(newState: {\n    idx: number;\n    input: string;\n    groupIdx: number;\n  }) {\n    this.idx = newState.idx;\n    this.input = newState.input;\n    this.groupIdx = newState.groupIdx;\n  }\n\n  public pattern(input: string): RegExpPattern {\n    // parser state\n    this.idx = 0;\n    this.input = input;\n    this.groupIdx = 0;\n\n    this.consumeChar(\"/\");\n    const value = this.disjunction();\n    this.consumeChar(\"/\");\n\n    const flags: RegExpFlags = {\n      type: \"Flags\",\n      loc: { begin: this.idx, end: input.length },\n      global: false,\n      ignoreCase: false,\n      multiLine: false,\n      unicode: false,\n      sticky: false,\n    };\n\n    while (this.isRegExpFlag()) {\n      switch (this.popChar()) {\n        case \"g\":\n          addFlag(flags, \"global\");\n          break;\n        case \"i\":\n          addFlag(flags, \"ignoreCase\");\n          break;\n        case \"m\":\n          addFlag(flags, \"multiLine\");\n          break;\n        case \"u\":\n          addFlag(flags, \"unicode\");\n          break;\n        case \"y\":\n          addFlag(flags, \"sticky\");\n          break;\n      }\n    }\n\n    if (this.idx !== this.input.length) {\n      throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n    }\n    return {\n      type: \"Pattern\",\n      flags: flags,\n      value: value,\n      loc: this.loc(0),\n    };\n  }\n\n  protected disjunction(): Disjunction {\n    const alts = [];\n    const begin = this.idx;\n\n    alts.push(this.alternative());\n\n    while (this.peekChar() === \"|\") {\n      this.consumeChar(\"|\");\n      alts.push(this.alternative());\n    }\n\n    return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n  }\n\n  protected alternative(): Alternative {\n    const terms = [];\n    const begin = this.idx;\n\n    while (this.isTerm()) {\n      terms.push(this.term());\n    }\n\n    return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n  }\n\n  protected term(): Term {\n    if (this.isAssertion()) {\n      return this.assertion();\n    } else {\n      return this.atom();\n    }\n  }\n\n  protected assertion(): Assertion {\n    const begin = this.idx;\n    switch (this.popChar()) {\n      case \"^\":\n        return {\n          type: \"StartAnchor\",\n          loc: this.loc(begin),\n        };\n      case \"$\":\n        return { type: \"EndAnchor\", loc: this.loc(begin) };\n      // '\\b' or '\\B'\n      case \"\\\\\":\n        switch (this.popChar()) {\n          case \"b\":\n            return {\n              type: \"WordBoundary\",\n              loc: this.loc(begin),\n            };\n          case \"B\":\n            return {\n              type: \"NonWordBoundary\",\n              loc: this.loc(begin),\n            };\n        }\n        // istanbul ignore next\n        throw Error(\"Invalid Assertion Escape\");\n      // '(?=' or '(?!'\n      case \"(\":\n        this.consumeChar(\"?\");\n\n        let type: \"Lookahead\" | \"NegativeLookahead\" | undefined;\n        switch (this.popChar()) {\n          case \"=\":\n            type = \"Lookahead\";\n            break;\n          case \"!\":\n            type = \"NegativeLookahead\";\n            break;\n        }\n        ASSERT_EXISTS(type);\n\n        const disjunction = this.disjunction();\n\n        this.consumeChar(\")\");\n\n        return {\n          type: type!,\n          value: disjunction,\n          loc: this.loc(begin),\n        };\n    }\n    // istanbul ignore next\n    return ASSERT_NEVER_REACH_HERE();\n  }\n\n  protected quantifier(\n    isBacktracking: boolean = false,\n  ): Quantifier | undefined {\n    let range: Partial<Quantifier> | undefined = undefined;\n    const begin = this.idx;\n    switch (this.popChar()) {\n      case \"*\":\n        range = {\n          atLeast: 0,\n          atMost: Infinity,\n        };\n        break;\n      case \"+\":\n        range = {\n          atLeast: 1,\n          atMost: Infinity,\n        };\n        break;\n      case \"?\":\n        range = {\n          atLeast: 0,\n          atMost: 1,\n        };\n        break;\n      case \"{\":\n        const atLeast = this.integerIncludingZero();\n        switch (this.popChar()) {\n          case \"}\":\n            range = {\n              atLeast: atLeast,\n              atMost: atLeast,\n            };\n            break;\n          case \",\":\n            let atMost;\n            if (this.isDigit()) {\n              atMost = this.integerIncludingZero();\n              range = {\n                atLeast: atLeast,\n                atMost: atMost,\n              };\n            } else {\n              range = {\n                atLeast: atLeast,\n                atMost: Infinity,\n              };\n            }\n            this.consumeChar(\"}\");\n            break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n          return undefined;\n        }\n        ASSERT_EXISTS(range);\n        break;\n    }\n\n    // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n    // causes severe performance degradations\n    if (isBacktracking === true && range === undefined) {\n      return undefined;\n    }\n\n    // istanbul ignore else\n    if (ASSERT_EXISTS(range)) {\n      if (this.peekChar(0) === \"?\") {\n        this.consumeChar(\"?\");\n        range.greedy = false;\n      } else {\n        range.greedy = true;\n      }\n\n      range.type = \"Quantifier\";\n      range.loc = this.loc(begin);\n      return range as Quantifier;\n    }\n  }\n\n  protected atom(): Atom {\n    let atom: Omit<Atom, \"loc\" | \"type\"> | undefined;\n    const begin = this.idx;\n    switch (this.peekChar()) {\n      case \".\":\n        atom = this.dotAll();\n        break;\n      case \"\\\\\":\n        atom = this.atomEscape();\n        break;\n      case \"[\":\n        atom = this.characterClass();\n        break;\n      case \"(\":\n        atom = this.group();\n        break;\n    }\n\n    if (atom === undefined && this.isPatternCharacter()) {\n      atom = this.patternCharacter();\n    }\n\n    // istanbul ignore else\n    if (ASSERT_EXISTS<Atom>(atom)) {\n      atom.loc = this.loc(begin);\n\n      if (this.isQuantifier()) {\n        atom.quantifier = this.quantifier();\n      }\n\n      return atom;\n    }\n\n    // istanbul ignore next\n    return ASSERT_NEVER_REACH_HERE();\n  }\n\n  protected dotAll(): Omit<Set, \"loc\"> {\n    this.consumeChar(\".\");\n    return {\n      type: \"Set\",\n      complement: true,\n      value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n    };\n  }\n\n  protected atomEscape(): Omit<GroupBackReference | Set | Character, \"loc\"> {\n    this.consumeChar(\"\\\\\");\n\n    switch (this.peekChar()) {\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        return this.decimalEscapeAtom();\n      case \"d\":\n      case \"D\":\n      case \"s\":\n      case \"S\":\n      case \"w\":\n      case \"W\":\n        return this.characterClassEscape();\n      case \"f\":\n      case \"n\":\n      case \"r\":\n      case \"t\":\n      case \"v\":\n        return this.controlEscapeAtom();\n      case \"c\":\n        return this.controlLetterEscapeAtom();\n      case \"0\":\n        return this.nulCharacterAtom();\n      case \"x\":\n        return this.hexEscapeSequenceAtom();\n      case \"u\":\n        return this.regExpUnicodeEscapeSequenceAtom();\n      default:\n        return this.identityEscapeAtom();\n    }\n  }\n\n  protected decimalEscapeAtom(): Omit<GroupBackReference, \"loc\"> {\n    const value = this.positiveInteger();\n\n    return { type: \"GroupBackReference\", value: value };\n  }\n\n  protected characterClassEscape(): Omit<Set, \"loc\"> {\n    let set: (number | Range)[] | undefined;\n    let complement = false;\n    switch (this.popChar()) {\n      case \"d\":\n        set = digitsCharCodes;\n        break;\n      case \"D\":\n        set = digitsCharCodes;\n        complement = true;\n        break;\n      case \"s\":\n        set = whitespaceCodes;\n        break;\n      case \"S\":\n        set = whitespaceCodes;\n        complement = true;\n        break;\n      case \"w\":\n        set = wordCharCodes;\n        break;\n      case \"W\":\n        set = wordCharCodes;\n        complement = true;\n        break;\n    }\n\n    // istanbul ignore else\n    if (ASSERT_EXISTS(set)) {\n      return { type: \"Set\", value: set, complement: complement };\n    }\n    // istanbul ignore next\n    return ASSERT_NEVER_REACH_HERE();\n  }\n\n  protected controlEscapeAtom(): Omit<Character, \"loc\"> {\n    let escapeCode;\n    switch (this.popChar()) {\n      case \"f\":\n        escapeCode = cc(\"\\f\");\n        break;\n      case \"n\":\n        escapeCode = cc(\"\\n\");\n        break;\n      case \"r\":\n        escapeCode = cc(\"\\r\");\n        break;\n      case \"t\":\n        escapeCode = cc(\"\\t\");\n        break;\n      case \"v\":\n        escapeCode = cc(\"\\v\");\n        break;\n    }\n\n    // istanbul ignore else\n    if (ASSERT_EXISTS(escapeCode)) {\n      return { type: \"Character\", value: escapeCode };\n    }\n    // istanbul ignore next\n    return ASSERT_NEVER_REACH_HERE();\n  }\n\n  protected controlLetterEscapeAtom(): Omit<Character, \"loc\"> {\n    this.consumeChar(\"c\");\n    const letter = this.popChar();\n    if (/[a-zA-Z]/.test(letter) === false) {\n      throw Error(\"Invalid \");\n    }\n\n    const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n    return { type: \"Character\", value: letterCode };\n  }\n\n  protected nulCharacterAtom(): Omit<Character, \"loc\"> {\n    // TODO implement '[lookahead ∉ DecimalDigit]'\n    // TODO: for the deprecated octal escape sequence\n    this.consumeChar(\"0\");\n    return { type: \"Character\", value: cc(\"\\0\") };\n  }\n\n  protected hexEscapeSequenceAtom(): Omit<Character, \"loc\"> {\n    this.consumeChar(\"x\");\n    return this.parseHexDigits(2);\n  }\n\n  protected regExpUnicodeEscapeSequenceAtom(): Omit<Character, \"loc\"> {\n    this.consumeChar(\"u\");\n    return this.parseHexDigits(4);\n  }\n\n  protected identityEscapeAtom(): Omit<Character, \"loc\"> {\n    // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n    // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n    const escapedChar = this.popChar();\n    return { type: \"Character\", value: cc(escapedChar) };\n  }\n\n  protected classPatternCharacterAtom(): Omit<Character, \"loc\"> {\n    switch (this.peekChar()) {\n      // istanbul ignore next\n      case \"\\n\":\n      // istanbul ignore next\n      case \"\\r\":\n      // istanbul ignore next\n      case \"\\u2028\":\n      // istanbul ignore next\n      case \"\\u2029\":\n      // istanbul ignore next\n      case \"\\\\\":\n      // istanbul ignore next\n      case \"]\":\n        throw Error(\"TBD\");\n      default:\n        const nextChar = this.popChar();\n        return { type: \"Character\", value: cc(nextChar) };\n    }\n  }\n\n  protected characterClass(): Omit<Set, \"loc\"> {\n    const set: (number | Range)[] = [];\n    let complement = false;\n    this.consumeChar(\"[\");\n    if (this.peekChar(0) === \"^\") {\n      this.consumeChar(\"^\");\n      complement = true;\n    }\n\n    while (this.isClassAtom()) {\n      const from = this.classAtom();\n      const isFromSingleChar = from.type === \"Character\";\n      if (isCharacter(from) && this.isRangeDash()) {\n        this.consumeChar(\"-\");\n        const to = this.classAtom();\n        const isToSingleChar = to.type === \"Character\";\n\n        // a range can only be used when both sides are single characters\n        if (isCharacter(to)) {\n          if (to.value < from.value) {\n            throw Error(\"Range out of order in character class\");\n          }\n          set.push({ from: from.value, to: to.value });\n        } else {\n          // literal dash\n          insertToSet(from.value, set);\n          set.push(cc(\"-\"));\n          insertToSet(to.value, set);\n        }\n      } else {\n        insertToSet(from.value, set);\n      }\n    }\n\n    this.consumeChar(\"]\");\n\n    return { type: \"Set\", complement: complement, value: set };\n  }\n\n  protected classAtom(): Omit<Character | Set, \"loc\"> {\n    switch (this.peekChar()) {\n      // istanbul ignore next\n      case \"]\":\n      // istanbul ignore next\n      case \"\\n\":\n      // istanbul ignore next\n      case \"\\r\":\n      // istanbul ignore next\n      case \"\\u2028\":\n      // istanbul ignore next\n      case \"\\u2029\":\n        throw Error(\"TBD\");\n      case \"\\\\\":\n        return this.classEscape();\n      default:\n        return this.classPatternCharacterAtom();\n    }\n  }\n\n  protected classEscape(): Omit<Character | Set, \"loc\"> {\n    this.consumeChar(\"\\\\\");\n    switch (this.peekChar()) {\n      // Matches a backspace.\n      // (Not to be confused with \\b word boundary outside characterClass)\n      case \"b\":\n        this.consumeChar(\"b\");\n        return { type: \"Character\", value: cc(\"\\u0008\") };\n      case \"d\":\n      case \"D\":\n      case \"s\":\n      case \"S\":\n      case \"w\":\n      case \"W\":\n        return this.characterClassEscape();\n      case \"f\":\n      case \"n\":\n      case \"r\":\n      case \"t\":\n      case \"v\":\n        return this.controlEscapeAtom();\n      case \"c\":\n        return this.controlLetterEscapeAtom();\n      case \"0\":\n        return this.nulCharacterAtom();\n      case \"x\":\n        return this.hexEscapeSequenceAtom();\n      case \"u\":\n        return this.regExpUnicodeEscapeSequenceAtom();\n      default:\n        return this.identityEscapeAtom();\n    }\n  }\n\n  protected group(): Omit<Group, \"loc\"> {\n    let capturing = true;\n    this.consumeChar(\"(\");\n    switch (this.peekChar(0)) {\n      case \"?\":\n        this.consumeChar(\"?\");\n        this.consumeChar(\":\");\n        capturing = false;\n        break;\n      default:\n        this.groupIdx++;\n        break;\n    }\n    const value = this.disjunction();\n    this.consumeChar(\")\");\n\n    const groupAst: Omit<Group, \"loc\"> = {\n      type: \"Group\",\n      capturing: capturing,\n      value: value,\n    };\n\n    if (capturing) {\n      groupAst[\"idx\"] = this.groupIdx;\n    }\n\n    return groupAst;\n  }\n\n  protected positiveInteger(): number {\n    let number = this.popChar();\n\n    // istanbul ignore next - can't ever get here due to previous lookahead checks\n    // still implementing this error checking in case this ever changes.\n    if (decimalPatternNoZero.test(number) === false) {\n      throw Error(\"Expecting a positive integer\");\n    }\n\n    while (decimalPattern.test(this.peekChar(0))) {\n      number += this.popChar();\n    }\n\n    return parseInt(number, 10);\n  }\n\n  protected integerIncludingZero(): number {\n    let number = this.popChar();\n    if (decimalPattern.test(number) === false) {\n      throw Error(\"Expecting an integer\");\n    }\n\n    while (decimalPattern.test(this.peekChar(0))) {\n      number += this.popChar();\n    }\n\n    return parseInt(number, 10);\n  }\n\n  protected patternCharacter(): Omit<Character, \"loc\"> {\n    const nextChar = this.popChar();\n    switch (nextChar) {\n      // istanbul ignore next\n      case \"\\n\":\n      // istanbul ignore next\n      case \"\\r\":\n      // istanbul ignore next\n      case \"\\u2028\":\n      // istanbul ignore next\n      case \"\\u2029\":\n      // istanbul ignore next\n      case \"^\":\n      // istanbul ignore next\n      case \"$\":\n      // istanbul ignore next\n      case \"\\\\\":\n      // istanbul ignore next\n      case \".\":\n      // istanbul ignore next\n      case \"*\":\n      // istanbul ignore next\n      case \"+\":\n      // istanbul ignore next\n      case \"?\":\n      // istanbul ignore next\n      case \"(\":\n      // istanbul ignore next\n      case \")\":\n      // istanbul ignore next\n      case \"[\":\n      // istanbul ignore next\n      case \"|\":\n        // istanbul ignore next\n        throw Error(\"TBD\");\n      default:\n        return { type: \"Character\", value: cc(nextChar) };\n    }\n  }\n  protected isRegExpFlag(): boolean {\n    switch (this.peekChar(0)) {\n      case \"g\":\n      case \"i\":\n      case \"m\":\n      case \"u\":\n      case \"y\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  protected isRangeDash(): boolean {\n    return this.peekChar() === \"-\" && this.isClassAtom(1);\n  }\n\n  protected isDigit(): boolean {\n    return decimalPattern.test(this.peekChar(0));\n  }\n\n  protected isClassAtom(howMuch = 0): boolean {\n    switch (this.peekChar(howMuch)) {\n      case \"]\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\u2028\":\n      case \"\\u2029\":\n        return false;\n      default:\n        return true;\n    }\n  }\n\n  protected isTerm() {\n    return this.isAtom() || this.isAssertion();\n  }\n\n  protected isAtom(): boolean {\n    if (this.isPatternCharacter()) {\n      return true;\n    }\n\n    switch (this.peekChar(0)) {\n      case \".\":\n      case \"\\\\\": // atomEscape\n      case \"[\": // characterClass\n      // TODO: isAtom must be called before isAssertion - disambiguate\n      case \"(\": // group\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  protected isAssertion(): boolean {\n    switch (this.peekChar(0)) {\n      case \"^\":\n      case \"$\":\n        return true;\n      // '\\b' or '\\B'\n      case \"\\\\\":\n        switch (this.peekChar(1)) {\n          case \"b\":\n          case \"B\":\n            return true;\n          default:\n            return false;\n        }\n      // '(?=' or '(?!'\n      case \"(\":\n        return (\n          this.peekChar(1) === \"?\" &&\n          (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\")\n        );\n      default:\n        return false;\n    }\n  }\n\n  protected isQuantifier(): boolean {\n    const prevState = this.saveState();\n    try {\n      return this.quantifier(true) !== undefined;\n    } catch (e) {\n      return false;\n    } finally {\n      this.restoreState(prevState);\n    }\n  }\n\n  protected isPatternCharacter(): boolean {\n    switch (this.peekChar()) {\n      case \"^\":\n      case \"$\":\n      case \"\\\\\":\n      case \".\":\n      case \"*\":\n      case \"+\":\n      case \"?\":\n      case \"(\":\n      case \")\":\n      case \"[\":\n      case \"|\":\n      case \"/\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\u2028\":\n      case \"\\u2029\":\n        return false;\n      default:\n        return true;\n    }\n  }\n\n  protected parseHexDigits(howMany: number): Omit<Character, \"loc\"> {\n    let hexString = \"\";\n    for (let i = 0; i < howMany; i++) {\n      const hexChar = this.popChar();\n      if (hexDigitPattern.test(hexChar) === false) {\n        throw Error(\"Expecting a HexDecimal digits\");\n      }\n      hexString += hexChar;\n    }\n    const charCode = parseInt(hexString, 16);\n    return { type: \"Character\", value: charCode };\n  }\n\n  protected peekChar(howMuch = 0): string {\n    return this.input[this.idx + howMuch];\n  }\n\n  protected popChar(): string {\n    const nextChar = this.peekChar(0);\n    this.consumeChar(undefined);\n    return nextChar;\n  }\n\n  protected consumeChar(char: string | undefined): void {\n    if (char !== undefined && this.input[this.idx] !== char) {\n      throw Error(\n        \"Expected: '\" +\n          char +\n          \"' but found: '\" +\n          this.input[this.idx] +\n          \"' at offset: \" +\n          this.idx,\n      );\n    }\n\n    if (this.idx >= this.input.length) {\n      throw Error(\"Unexpected end of input\");\n    }\n    this.idx++;\n  }\n\n  protected loc(begin: number): Location {\n    return { begin: begin, end: this.idx };\n  }\n}\n","import type {\n  Alternative,\n  Assertion,\n  Character,\n  Disjunction,\n  Group,\n  GroupBackReference,\n  IRegExpAST,\n  Quantifier,\n  RegExpAstPart,\n  RegExpFlags,\n  RegExpPattern,\n  Set,\n} from \"../types\";\n\nexport class BaseRegExpVisitor {\n  public visitChildren(node: IRegExpAST) {\n    for (const key in node) {\n      const child = (node as any)[key];\n      /* istanbul ignore else */\n      if (node.hasOwnProperty(key)) {\n        if (child.type !== undefined) {\n          this.visit(child);\n        } else if (Array.isArray(child)) {\n          child.forEach((subChild) => {\n            this.visit(subChild);\n          }, this);\n        }\n      }\n    }\n  }\n\n  public visit(node: RegExpAstPart): void {\n    switch (node.type) {\n      case \"Pattern\":\n        this.visitPattern(node);\n        break;\n      case \"Flags\":\n        this.visitFlags(node);\n        break;\n      case \"Disjunction\":\n        this.visitDisjunction(node);\n        break;\n      case \"Alternative\":\n        this.visitAlternative(node);\n        break;\n      case \"StartAnchor\":\n        this.visitStartAnchor(node);\n        break;\n      case \"EndAnchor\":\n        this.visitEndAnchor(node);\n        break;\n      case \"WordBoundary\":\n        this.visitWordBoundary(node);\n        break;\n      case \"NonWordBoundary\":\n        this.visitNonWordBoundary(node);\n        break;\n      case \"Lookahead\":\n        this.visitLookahead(node);\n        break;\n      case \"NegativeLookahead\":\n        this.visitNegativeLookahead(node);\n        break;\n      case \"Character\":\n        this.visitCharacter(node);\n        break;\n      case \"Set\":\n        this.visitSet(node);\n        break;\n      case \"Group\":\n        this.visitGroup(node);\n        break;\n      case \"GroupBackReference\":\n        this.visitGroupBackReference(node);\n        break;\n      case \"Quantifier\":\n        this.visitQuantifier(node);\n        break;\n    }\n\n    this.visitChildren(node);\n  }\n\n  public visitPattern(node: RegExpPattern): void {}\n\n  public visitFlags(node: RegExpFlags): void {}\n\n  public visitDisjunction(node: Disjunction): void {}\n\n  public visitAlternative(node: Alternative): void {}\n\n  // Assertion\n  public visitStartAnchor(node: Assertion): void {}\n\n  public visitEndAnchor(node: Assertion): void {}\n\n  public visitWordBoundary(node: Assertion): void {}\n\n  public visitNonWordBoundary(node: Assertion): void {}\n\n  public visitLookahead(node: Assertion): void {}\n\n  public visitNegativeLookahead(node: Assertion): void {}\n\n  // atoms\n  public visitCharacter(node: Character): void {}\n\n  public visitSet(node: Set): void {}\n\n  public visitGroup(node: Group): void {}\n\n  public visitGroupBackReference(node: GroupBackReference): void {}\n\n  public visitQuantifier(node: Quantifier): void {}\n}\n","import {\n  Alternative,\n  Assertion,\n  Atom,\n  Disjunction,\n  RegExpParser,\n  RegExpPattern,\n} from \"@chevrotain/regexp-to-ast\";\n\nlet regExpAstCache: { [regex: string]: RegExpPattern } = {};\nconst regExpParser = new RegExpParser();\n\n// this should be moved to regexp-to-ast\nexport type ASTNode =\n  | RegExpPattern\n  | Disjunction\n  | Alternative\n  | Assertion\n  | Atom;\n\nexport function getRegExpAst(regExp: RegExp): RegExpPattern {\n  const regExpStr = regExp.toString();\n  if (regExpAstCache.hasOwnProperty(regExpStr)) {\n    return regExpAstCache[regExpStr];\n  } else {\n    const regExpAst = regExpParser.pattern(regExpStr);\n    regExpAstCache[regExpStr] = regExpAst;\n    return regExpAst;\n  }\n}\n\nexport function clearRegExpParserCache() {\n  regExpAstCache = {};\n}\n","import {\n  Alternative,\n  Atom,\n  BaseRegExpVisitor,\n  Character,\n  Disjunction,\n  Group,\n  Set,\n} from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { ASTNode, getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\n\nconst complementErrorMessage =\n  \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg =\n  'Unable to use \"first char\" lexer optimizations:\\n';\n\nexport function getOptimizedStartCodesIndices(\n  regExp: RegExp,\n  ensureOptimizations = false,\n): number[] {\n  try {\n    const ast = getRegExpAst(regExp);\n    const firstChars = firstCharOptimizedIndices(\n      ast.value,\n      {},\n      ast.flags.ignoreCase,\n    );\n    return firstChars;\n  } catch (e) {\n    /* istanbul ignore next */\n    // Testing this relies on the regexp-to-ast library having a bug... */\n    // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n    if (e.message === complementErrorMessage) {\n      if (ensureOptimizations) {\n        PRINT_WARNING(\n          `${failedOptimizationPrefixMsg}` +\n            `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n            \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n            \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\",\n        );\n      }\n    } else {\n      let msgSuffix = \"\";\n      if (ensureOptimizations) {\n        msgSuffix =\n          \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n          \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n      }\n      PRINT_ERROR(\n        `${failedOptimizationPrefixMsg}\\n` +\n          `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n          `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n          \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n          msgSuffix,\n      );\n    }\n  }\n\n  return [];\n}\n\nexport function firstCharOptimizedIndices(\n  ast: ASTNode,\n  result: { [charCode: number]: number },\n  ignoreCase: boolean,\n): number[] {\n  switch (ast.type) {\n    case \"Disjunction\":\n      for (let i = 0; i < ast.value.length; i++) {\n        firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n      }\n      break;\n    case \"Alternative\":\n      const terms = ast.value;\n      for (let i = 0; i < terms.length; i++) {\n        const term = terms[i];\n\n        // skip terms that cannot effect the first char results\n        switch (term.type) {\n          case \"EndAnchor\":\n          // A group back reference cannot affect potential starting char.\n          // because if a back reference is the first production than automatically\n          // the group being referenced has had to come BEFORE so its codes have already been added\n          case \"GroupBackReference\":\n          // assertions do not affect potential starting codes\n          case \"Lookahead\":\n          case \"NegativeLookahead\":\n          case \"StartAnchor\":\n          case \"WordBoundary\":\n          case \"NonWordBoundary\":\n            continue;\n        }\n\n        const atom = term;\n        switch (atom.type) {\n          case \"Character\":\n            addOptimizedIdxToResult(atom.value, result, ignoreCase);\n            break;\n          case \"Set\":\n            if (atom.complement === true) {\n              throw Error(complementErrorMessage);\n            }\n            forEach(atom.value, (code) => {\n              if (typeof code === \"number\") {\n                addOptimizedIdxToResult(code, result, ignoreCase);\n              } else {\n                // range\n                const range = code as any;\n                // cannot optimize when ignoreCase is\n                if (ignoreCase === true) {\n                  for (\n                    let rangeCode = range.from;\n                    rangeCode <= range.to;\n                    rangeCode++\n                  ) {\n                    addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                  }\n                }\n                // Optimization (2 orders of magnitude less work for very large ranges)\n                else {\n                  // handle unoptimized values\n                  for (\n                    let rangeCode = range.from;\n                    rangeCode <= range.to && rangeCode < minOptimizationVal;\n                    rangeCode++\n                  ) {\n                    addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                  }\n\n                  // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                  if (range.to >= minOptimizationVal) {\n                    const minUnOptVal =\n                      range.from >= minOptimizationVal\n                        ? range.from\n                        : minOptimizationVal;\n                    const maxUnOptVal = range.to;\n                    const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                    const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n\n                    for (\n                      let currOptIdx = minOptIdx;\n                      currOptIdx <= maxOptIdx;\n                      currOptIdx++\n                    ) {\n                      result[currOptIdx] = currOptIdx;\n                    }\n                  }\n                }\n              }\n            });\n            break;\n          case \"Group\":\n            firstCharOptimizedIndices(atom.value, result, ignoreCase);\n            break;\n          /* istanbul ignore next */\n          default:\n            throw Error(\"Non Exhaustive Match\");\n        }\n\n        // reached a mandatory production, no more **start** codes can be found on this alternative\n        const isOptionalQuantifier =\n          atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n        if (\n          // A group may be optional due to empty contents /(?:)/\n          // or if everything inside it is optional /((a)?)/\n          (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n          // If this term is not a group it may only be optional if it has an optional quantifier\n          (atom.type !== \"Group\" && isOptionalQuantifier === false)\n        ) {\n          break;\n        }\n      }\n      break;\n    /* istanbul ignore next */\n    default:\n      throw Error(\"non exhaustive match!\");\n  }\n\n  // console.log(Object.keys(result).length)\n  return values(result);\n}\n\nfunction addOptimizedIdxToResult(\n  code: number,\n  result: { [charCode: number]: number },\n  ignoreCase: boolean,\n) {\n  const optimizedCharIdx = charCodeToOptimizedIndex(code);\n  result[optimizedCharIdx] = optimizedCharIdx;\n\n  if (ignoreCase === true) {\n    handleIgnoreCase(code, result);\n  }\n}\n\nfunction handleIgnoreCase(\n  code: number,\n  result: { [charCode: number]: number },\n) {\n  const char = String.fromCharCode(code);\n  const upperChar = char.toUpperCase();\n  /* istanbul ignore else */\n  if (upperChar !== char) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n    result[optimizedCharIdx] = optimizedCharIdx;\n  } else {\n    const lowerChar = char.toLowerCase();\n    if (lowerChar !== char) {\n      const optimizedCharIdx = charCodeToOptimizedIndex(\n        lowerChar.charCodeAt(0),\n      );\n      result[optimizedCharIdx] = optimizedCharIdx;\n    }\n  }\n}\n\nfunction findCode(setNode: Set, targetCharCodes: number[]) {\n  return find(setNode.value, (codeOrRange) => {\n    if (typeof codeOrRange === \"number\") {\n      return includes(targetCharCodes, codeOrRange);\n    } else {\n      // range\n      const range = <any>codeOrRange;\n      return (\n        find(\n          targetCharCodes,\n          (targetCode) => range.from <= targetCode && targetCode <= range.to,\n        ) !== undefined\n      );\n    }\n  });\n}\n\nfunction isWholeOptional(ast: any): boolean {\n  const quantifier = (ast as Atom).quantifier;\n  if (quantifier && quantifier.atLeast === 0) {\n    return true;\n  }\n\n  if (!ast.value) {\n    return false;\n  }\n\n  return isArray(ast.value)\n    ? every(ast.value, isWholeOptional)\n    : isWholeOptional(ast.value);\n}\n\nclass CharCodeFinder extends BaseRegExpVisitor {\n  found: boolean = false;\n\n  constructor(private targetCharCodes: number[]) {\n    super();\n  }\n\n  visitChildren(node: ASTNode) {\n    // No need to keep looking...\n    if (this.found === true) {\n      return;\n    }\n\n    // switch lookaheads as they do not actually consume any characters thus\n    // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n    switch (node.type) {\n      case \"Lookahead\":\n        this.visitLookahead(node);\n        return;\n      case \"NegativeLookahead\":\n        this.visitNegativeLookahead(node);\n        return;\n    }\n\n    super.visitChildren(node);\n  }\n\n  visitCharacter(node: Character) {\n    if (includes(this.targetCharCodes, node.value)) {\n      this.found = true;\n    }\n  }\n\n  visitSet(node: Set) {\n    if (node.complement) {\n      if (findCode(node, this.targetCharCodes) === undefined) {\n        this.found = true;\n      }\n    } else {\n      if (findCode(node, this.targetCharCodes) !== undefined) {\n        this.found = true;\n      }\n    }\n  }\n}\n\nexport function canMatchCharCode(\n  charCodes: number[],\n  pattern: RegExp | string,\n) {\n  if (pattern instanceof RegExp) {\n    const ast = getRegExpAst(pattern);\n    const charCodeFinder = new CharCodeFinder(charCodes);\n    charCodeFinder.visit(ast);\n    return charCodeFinder.found;\n  } else {\n    return (\n      find(<any>pattern, (char) => {\n        return includes(charCodes, (<string>char).charCodeAt(0));\n      }) !== undefined\n    );\n  }\n}\n","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport {\n  IRegExpExec,\n  Lexer,\n  LexerDefinitionErrorType,\n} from \"./lexer_public.js\";\nimport {\n  compact,\n  defaults,\n  difference,\n  filter,\n  find,\n  first,\n  flatten,\n  forEach,\n  has,\n  includes,\n  indexOf,\n  isArray,\n  isEmpty,\n  isFunction,\n  isRegExp,\n  isString,\n  isUndefined,\n  keys,\n  map,\n  reduce,\n  reject,\n  values,\n} from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport {\n  canMatchCharCode,\n  failedOptimizationPrefixMsg,\n  getOptimizedStartCodesIndices,\n} from \"./reg_exp.js\";\nimport {\n  ILexerDefinitionError,\n  ILineTerminatorsTester,\n  IMultiModeLexerDefinition,\n  IToken,\n  TokenType,\n} from \"@chevrotain/types\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\n\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\n\nexport interface IPatternConfig {\n  pattern: IRegExpExec | string;\n  longerAlt: number[] | undefined;\n  canLineTerminator: boolean;\n  isCustom: boolean;\n  short: number | false;\n  group: string | undefined | false;\n  push: string | undefined;\n  pop: boolean;\n  tokenType: TokenType;\n  tokenTypeIdx: number;\n}\n\nexport interface IAnalyzeResult {\n  patternIdxToConfig: IPatternConfig[];\n  charCodeToPatternIdxToConfig: { [charCode: number]: IPatternConfig[] };\n  emptyGroups: { [groupName: string]: IToken[] };\n  hasCustom: boolean;\n  canBeOptimized: boolean;\n}\n\nexport let SUPPORT_STICKY =\n  typeof (<any>new RegExp(\"(?:)\")).sticky === \"boolean\";\n\nexport function disableSticky() {\n  SUPPORT_STICKY = false;\n}\n\nexport function enableSticky() {\n  SUPPORT_STICKY = true;\n}\n\nexport function analyzeTokenTypes(\n  tokenTypes: TokenType[],\n  options: {\n    positionTracking?: \"full\" | \"onlyStart\" | \"onlyOffset\";\n    ensureOptimizations?: boolean;\n    lineTerminatorCharacters?: (number | string)[];\n    // TODO: should `useSticky` be an argument here?\n    useSticky?: boolean;\n    safeMode?: boolean;\n    tracer?: (msg: string, action: () => void) => void;\n  },\n): IAnalyzeResult {\n  options = defaults(options, {\n    useSticky: SUPPORT_STICKY,\n    debug: false as boolean,\n    safeMode: false as boolean,\n    positionTracking: \"full\",\n    lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n    tracer: (msg: string, action: Function) => action(),\n  });\n\n  const tracer = options.tracer!;\n\n  tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n    initCharCodeToOptimizedIndexMap();\n  });\n\n  let onlyRelevantTypes: TokenType[];\n  tracer(\"Reject Lexer.NA\", () => {\n    onlyRelevantTypes = reject(tokenTypes, (currType) => {\n      return currType[PATTERN] === Lexer.NA;\n    });\n  });\n\n  let hasCustom = false;\n  let allTransformedPatterns: (IRegExpExec | string)[];\n  tracer(\"Transform Patterns\", () => {\n    hasCustom = false;\n    allTransformedPatterns = map(\n      onlyRelevantTypes,\n      (currType): IRegExpExec | string => {\n        const currPattern = currType[PATTERN];\n\n        /* istanbul ignore else */\n        if (isRegExp(currPattern)) {\n          const regExpSource = currPattern.source;\n          if (\n            regExpSource.length === 1 &&\n            // only these regExp meta characters which can appear in a length one regExp\n            regExpSource !== \"^\" &&\n            regExpSource !== \"$\" &&\n            regExpSource !== \".\" &&\n            !currPattern.ignoreCase\n          ) {\n            return regExpSource;\n          } else if (\n            regExpSource.length === 2 &&\n            regExpSource[0] === \"\\\\\" &&\n            // not a meta character\n            !includes(\n              [\n                \"d\",\n                \"D\",\n                \"s\",\n                \"S\",\n                \"t\",\n                \"r\",\n                \"n\",\n                \"t\",\n                \"0\",\n                \"c\",\n                \"b\",\n                \"B\",\n                \"f\",\n                \"v\",\n                \"w\",\n                \"W\",\n              ],\n              regExpSource[1],\n            )\n          ) {\n            // escaped meta Characters: /\\+/ /\\[/\n            // or redundant escaping: /\\a/\n            // without the escaping \"\\\"\n            return regExpSource[1];\n          } else {\n            return options.useSticky\n              ? addStickyFlag(currPattern)\n              : addStartOfInput(currPattern);\n          }\n        } else if (isFunction(currPattern)) {\n          hasCustom = true;\n          // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n          return { exec: currPattern };\n        } else if (typeof currPattern === \"object\") {\n          hasCustom = true;\n          // ICustomPattern\n          return currPattern;\n        } else if (typeof currPattern === \"string\") {\n          if (currPattern.length === 1) {\n            return currPattern;\n          } else {\n            const escapedRegExpString = currPattern.replace(\n              /[\\\\^$.*+?()[\\]{}|]/g,\n              \"\\\\$&\",\n            );\n            const wrappedRegExp = new RegExp(escapedRegExpString);\n            return options.useSticky\n              ? addStickyFlag(wrappedRegExp)\n              : addStartOfInput(wrappedRegExp);\n          }\n        } else {\n          throw Error(\"non exhaustive match\");\n        }\n      },\n    );\n  });\n\n  let patternIdxToType: number[];\n  let patternIdxToGroup: (string | undefined | false)[];\n  let patternIdxToLongerAltIdxArr: (number[] | undefined)[];\n  let patternIdxToPushMode: (string | undefined)[];\n  let patternIdxToPopMode: boolean[];\n  tracer(\"misc mapping\", () => {\n    patternIdxToType = map(\n      onlyRelevantTypes,\n      (currType) => currType.tokenTypeIdx!,\n    );\n\n    patternIdxToGroup = map(onlyRelevantTypes, (clazz: any) => {\n      const groupName = clazz.GROUP;\n      /* istanbul ignore next */\n      if (groupName === Lexer.SKIPPED) {\n        return undefined;\n      } else if (isString(groupName)) {\n        return groupName;\n      } else if (isUndefined(groupName)) {\n        return false;\n      } else {\n        throw Error(\"non exhaustive match\");\n      }\n    });\n\n    patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz: any) => {\n      const longerAltType = clazz.LONGER_ALT;\n\n      if (longerAltType) {\n        const longerAltIdxArr = isArray(longerAltType)\n          ? map(longerAltType, (type: any) => indexOf(onlyRelevantTypes, type))\n          : [indexOf(onlyRelevantTypes, longerAltType)];\n        return longerAltIdxArr;\n      }\n    });\n\n    patternIdxToPushMode = map(\n      onlyRelevantTypes,\n      (clazz: any) => clazz.PUSH_MODE,\n    );\n\n    patternIdxToPopMode = map(onlyRelevantTypes, (clazz: any) =>\n      has(clazz, \"POP_MODE\"),\n    );\n  });\n\n  let patternIdxToCanLineTerminator: boolean[];\n  tracer(\"Line Terminator Handling\", () => {\n    const lineTerminatorCharCodes = getCharCodes(\n      options.lineTerminatorCharacters!,\n    );\n    patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n    if (options.positionTracking !== \"onlyOffset\") {\n      patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n        if (has(tokType, \"LINE_BREAKS\")) {\n          return !!tokType.LINE_BREAKS;\n        } else {\n          return (\n            checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n            canMatchCharCode(\n              lineTerminatorCharCodes,\n              tokType.PATTERN as RegExp | string,\n            )\n          );\n        }\n      });\n    }\n  });\n\n  let patternIdxToIsCustom: boolean[];\n  let patternIdxToShort: (number | false)[];\n  let emptyGroups!: { [groupName: string]: IToken[] };\n  let patternIdxToConfig!: IPatternConfig[];\n  tracer(\"Misc Mapping #2\", () => {\n    patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n    patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n\n    emptyGroups = reduce(\n      onlyRelevantTypes,\n      (acc, clazz: any) => {\n        const groupName = clazz.GROUP;\n        if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n          acc[groupName] = [];\n        }\n        return acc;\n      },\n      {} as { [groupName: string]: IToken[] },\n    );\n\n    patternIdxToConfig = map(\n      allTransformedPatterns,\n      (x, idx): IPatternConfig => {\n        return {\n          pattern: allTransformedPatterns[idx],\n          longerAlt: patternIdxToLongerAltIdxArr[idx],\n          canLineTerminator: patternIdxToCanLineTerminator[idx],\n          isCustom: patternIdxToIsCustom[idx],\n          short: patternIdxToShort[idx],\n          group: patternIdxToGroup[idx],\n          push: patternIdxToPushMode[idx],\n          pop: patternIdxToPopMode[idx],\n          tokenTypeIdx: patternIdxToType[idx],\n          tokenType: onlyRelevantTypes[idx],\n        };\n      },\n    );\n  });\n\n  let canBeOptimized = true;\n  let charCodeToPatternIdxToConfig: { [charCode: number]: IPatternConfig[] } =\n    [];\n\n  if (!options.safeMode) {\n    tracer(\"First Char Optimization\", () => {\n      charCodeToPatternIdxToConfig = reduce(\n        onlyRelevantTypes,\n        (result, currTokType, idx) => {\n          if (typeof currTokType.PATTERN === \"string\") {\n            const charCode = currTokType.PATTERN.charCodeAt(0);\n            const optimizedIdx = charCodeToOptimizedIndex(charCode);\n            addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n          } else if (isArray(currTokType.START_CHARS_HINT)) {\n            let lastOptimizedIdx: number;\n            forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n              const charCode =\n                typeof charOrInt === \"string\"\n                  ? charOrInt.charCodeAt(0)\n                  : charOrInt;\n              const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n              // Avoid adding the config multiple times\n              /* istanbul ignore else */\n              // - Difficult to check this scenario effects as it is only a performance\n              //   optimization that does not change correctness\n              if (lastOptimizedIdx !== currOptimizedIdx) {\n                lastOptimizedIdx = currOptimizedIdx;\n                addToMapOfArrays(\n                  result,\n                  currOptimizedIdx,\n                  patternIdxToConfig[idx],\n                );\n              }\n            });\n          } else if (isRegExp(currTokType.PATTERN)) {\n            if (currTokType.PATTERN.unicode) {\n              canBeOptimized = false;\n              if (options.ensureOptimizations) {\n                PRINT_ERROR(\n                  `${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                    \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\",\n                );\n              }\n            } else {\n              const optimizedCodes = getOptimizedStartCodesIndices(\n                currTokType.PATTERN,\n                options.ensureOptimizations,\n              );\n              /* istanbul ignore if */\n              // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n              // the first should be a different validation and the second cannot be tested.\n              if (isEmpty(optimizedCodes)) {\n                // we cannot understand what codes may start possible matches\n                // The optimization correctness requires knowing start codes for ALL patterns.\n                // Not actually sure this is an error, no debug message\n                canBeOptimized = false;\n              }\n              forEach(optimizedCodes, (code) => {\n                addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n              });\n            }\n          } else {\n            if (options.ensureOptimizations) {\n              PRINT_ERROR(\n                `${failedOptimizationPrefixMsg}` +\n                  `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                  \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                  \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\",\n              );\n            }\n            canBeOptimized = false;\n          }\n\n          return result;\n        },\n        [] as { [charCode: number]: IPatternConfig[] },\n      );\n    });\n  }\n\n  return {\n    emptyGroups: emptyGroups,\n    patternIdxToConfig: patternIdxToConfig,\n    charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n    hasCustom: hasCustom,\n    canBeOptimized: canBeOptimized,\n  };\n}\n\nexport function validatePatterns(\n  tokenTypes: TokenType[],\n  validModesNames: string[],\n): ILexerDefinitionError[] {\n  let errors: ILexerDefinitionError[] = [];\n\n  const missingResult = findMissingPatterns(tokenTypes);\n  errors = errors.concat(missingResult.errors);\n\n  const invalidResult = findInvalidPatterns(missingResult.valid);\n  const validTokenTypes = invalidResult.valid;\n  errors = errors.concat(invalidResult.errors);\n\n  errors = errors.concat(validateRegExpPattern(validTokenTypes));\n\n  errors = errors.concat(findInvalidGroupType(validTokenTypes));\n\n  errors = errors.concat(\n    findModesThatDoNotExist(validTokenTypes, validModesNames),\n  );\n\n  errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n\n  return errors;\n}\n\nfunction validateRegExpPattern(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  let errors: ILexerDefinitionError[] = [];\n  const withRegExpPatterns = filter(tokenTypes, (currTokType) =>\n    isRegExp(currTokType[PATTERN]),\n  );\n\n  errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n\n  errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n\n  errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n\n  errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n\n  errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n\n  return errors;\n}\n\nexport interface ILexerFilterResult {\n  errors: ILexerDefinitionError[];\n  valid: TokenType[];\n}\n\nexport function findMissingPatterns(\n  tokenTypes: TokenType[],\n): ILexerFilterResult {\n  const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n    return !has(currType, PATTERN);\n  });\n\n  const errors = map(tokenTypesWithMissingPattern, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- missing static 'PATTERN' property\",\n      type: LexerDefinitionErrorType.MISSING_PATTERN,\n      tokenTypes: [currType],\n    };\n  });\n\n  const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n  return { errors, valid };\n}\n\nexport function findInvalidPatterns(\n  tokenTypes: TokenType[],\n): ILexerFilterResult {\n  const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n    const pattern = currType[PATTERN];\n    return (\n      !isRegExp(pattern) &&\n      !isFunction(pattern) &&\n      !has(pattern, \"exec\") &&\n      !isString(pattern)\n    );\n  });\n\n  const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' can only be a RegExp, a\" +\n        \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n      type: LexerDefinitionErrorType.INVALID_PATTERN,\n      tokenTypes: [currType],\n    };\n  });\n\n  const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n  return { errors, valid };\n}\n\nconst end_of_input = /[^\\\\][$]/;\n\nexport function findEndOfInputAnchor(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  class EndAnchorFinder extends BaseRegExpVisitor {\n    found = false;\n\n    visitEndAnchor(node: unknown) {\n      this.found = true;\n    }\n  }\n\n  const invalidRegex = filter(tokenTypes, (currType) => {\n    const pattern = currType.PATTERN;\n\n    try {\n      const regexpAst = getRegExpAst(pattern as RegExp);\n      const endAnchorVisitor = new EndAnchorFinder();\n      endAnchorVisitor.visit(regexpAst);\n\n      return endAnchorVisitor.found;\n    } catch (e) {\n      // old behavior in case of runtime exceptions with regexp-to-ast.\n      /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n      return end_of_input.test((pattern as RegExp).source);\n    }\n  });\n\n  const errors = map(invalidRegex, (currType) => {\n    return {\n      message:\n        \"Unexpected RegExp Anchor Error:\\n\" +\n        \"\\tToken Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n        \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n      tokenTypes: [currType],\n    };\n  });\n\n  return errors;\n}\n\nexport function findEmptyMatchRegExps(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  const matchesEmptyString = filter(tokenTypes, (currType) => {\n    const pattern = currType.PATTERN as RegExp;\n    return pattern.test(\"\");\n  });\n\n  const errors = map(matchesEmptyString, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' must not match an empty string\",\n      type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n      tokenTypes: [currType],\n    };\n  });\n\n  return errors;\n}\n\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\n\nexport function findStartOfInputAnchor(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  class StartAnchorFinder extends BaseRegExpVisitor {\n    found = false;\n\n    visitStartAnchor(node: unknown) {\n      this.found = true;\n    }\n  }\n\n  const invalidRegex = filter(tokenTypes, (currType) => {\n    const pattern = currType.PATTERN as RegExp;\n    try {\n      const regexpAst = getRegExpAst(pattern);\n      const startAnchorVisitor = new StartAnchorFinder();\n      startAnchorVisitor.visit(regexpAst);\n\n      return startAnchorVisitor.found;\n    } catch (e) {\n      // old behavior in case of runtime exceptions with regexp-to-ast.\n      /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n      return start_of_input.test(pattern.source);\n    }\n  });\n\n  const errors = map(invalidRegex, (currType) => {\n    return {\n      message:\n        \"Unexpected RegExp Anchor Error:\\n\" +\n        \"\\tToken Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n        \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n      tokenTypes: [currType],\n    };\n  });\n\n  return errors;\n}\n\nexport function findUnsupportedFlags(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  const invalidFlags = filter(tokenTypes, (currType) => {\n    const pattern = currType[PATTERN];\n    return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n  });\n\n  const errors = map(invalidFlags, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n      type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n      tokenTypes: [currType],\n    };\n  });\n\n  return errors;\n}\n\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  const found: TokenType[] = [];\n  let identicalPatterns = map(tokenTypes, (outerType: any) => {\n    return reduce(\n      tokenTypes,\n      (result, innerType) => {\n        if (\n          outerType.PATTERN.source === (innerType.PATTERN as RegExp).source &&\n          !includes(found, innerType) &&\n          innerType.PATTERN !== Lexer.NA\n        ) {\n          // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n          // in essence we are creating Equivalence classes on equality relation.\n          found.push(innerType);\n          result.push(innerType);\n          return result;\n        }\n        return result;\n      },\n      [] as TokenType[],\n    );\n  });\n\n  identicalPatterns = compact(identicalPatterns);\n\n  const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n    return currIdenticalSet.length > 1;\n  });\n\n  const errors = map(duplicatePatterns, (setOfIdentical: any) => {\n    const tokenTypeNames = map(setOfIdentical, (currType: any) => {\n      return currType.name;\n    });\n\n    const dupPatternSrc = (<any>first(setOfIdentical)).PATTERN;\n    return {\n      message:\n        `The same RegExp pattern ->${dupPatternSrc}<-` +\n        `has been used in all of the following Token Types: ${tokenTypeNames.join(\n          \", \",\n        )} <-`,\n      type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n      tokenTypes: setOfIdentical,\n    };\n  });\n\n  return errors;\n}\n\nexport function findInvalidGroupType(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  const invalidTypes = filter(tokenTypes, (clazz: any) => {\n    if (!has(clazz, \"GROUP\")) {\n      return false;\n    }\n    const group = clazz.GROUP;\n\n    return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n  });\n\n  const errors = map(invalidTypes, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n      type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n      tokenTypes: [currType],\n    };\n  });\n\n  return errors;\n}\n\nexport function findModesThatDoNotExist(\n  tokenTypes: TokenType[],\n  validModes: string[],\n): ILexerDefinitionError[] {\n  const invalidModes = filter(tokenTypes, (clazz: any) => {\n    return (\n      clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE)\n    );\n  });\n\n  const errors = map(invalidModes, (tokType) => {\n    const msg =\n      `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n      `which does not exist`;\n    return {\n      message: msg,\n      type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n      tokenTypes: [tokType],\n    };\n  });\n\n  return errors;\n}\n\nexport function findUnreachablePatterns(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  const errors: ILexerDefinitionError[] = [];\n\n  const canBeTested = reduce(\n    tokenTypes,\n    (result, tokType, idx) => {\n      const pattern = tokType.PATTERN;\n\n      if (pattern === Lexer.NA) {\n        return result;\n      }\n\n      // a more comprehensive validation for all forms of regExps would require\n      // deeper regExp analysis capabilities\n      if (isString(pattern)) {\n        result.push({ str: pattern, idx, tokenType: tokType });\n      } else if (isRegExp(pattern) && noMetaChar(pattern)) {\n        result.push({ str: pattern.source, idx, tokenType: tokType });\n      }\n      return result;\n    },\n    [] as { str: string; idx: number; tokenType: TokenType }[],\n  );\n\n  forEach(tokenTypes, (tokType, testIdx) => {\n    forEach(canBeTested, ({ str, idx, tokenType }) => {\n      if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n        const msg =\n          `Token: ->${tokenType.name}<- can never be matched.\\n` +\n          `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n          `in the lexer's definition.\\n` +\n          `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n        errors.push({\n          message: msg,\n          type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n          tokenTypes: [tokType, tokenType],\n        });\n      }\n    });\n  });\n\n  return errors;\n}\n\nfunction testTokenType(str: string, pattern: any): boolean {\n  /* istanbul ignore else */\n  if (isRegExp(pattern)) {\n    const regExpArray = pattern.exec(str);\n    return regExpArray !== null && regExpArray.index === 0;\n  } else if (isFunction(pattern)) {\n    // maintain the API of custom patterns\n    return pattern(str, 0, [], {});\n  } else if (has(pattern, \"exec\")) {\n    // maintain the API of custom patterns\n    return pattern.exec(str, 0, [], {});\n  } else if (typeof pattern === \"string\") {\n    return pattern === str;\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nfunction noMetaChar(regExp: RegExp): boolean {\n  //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n  const metaChars = [\n    \".\",\n    \"\\\\\",\n    \"[\",\n    \"]\",\n    \"|\",\n    \"^\",\n    \"$\",\n    \"(\",\n    \")\",\n    \"?\",\n    \"*\",\n    \"+\",\n    \"{\",\n  ];\n  return (\n    find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined\n  );\n}\n\nexport function addStartOfInput(pattern: RegExp): RegExp {\n  const flags = pattern.ignoreCase ? \"i\" : \"\";\n  // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n  // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n  return new RegExp(`^(?:${pattern.source})`, flags);\n}\n\nexport function addStickyFlag(pattern: RegExp): RegExp {\n  const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n  // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n  // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n  return new RegExp(`${pattern.source}`, flags);\n}\n\nexport function performRuntimeChecks(\n  lexerDefinition: IMultiModeLexerDefinition,\n  trackLines: boolean,\n  lineTerminatorCharacters: (number | string)[],\n): ILexerDefinitionError[] {\n  const errors: ILexerDefinitionError[] = [];\n\n  // some run time checks to help the end users.\n  if (!has(lexerDefinition, DEFAULT_MODE)) {\n    errors.push({\n      message:\n        \"A MultiMode Lexer cannot be initialized without a <\" +\n        DEFAULT_MODE +\n        \"> property in its definition\\n\",\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n    });\n  }\n  if (!has(lexerDefinition, MODES)) {\n    errors.push({\n      message:\n        \"A MultiMode Lexer cannot be initialized without a <\" +\n        MODES +\n        \"> property in its definition\\n\",\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n    });\n  }\n\n  if (\n    has(lexerDefinition, MODES) &&\n    has(lexerDefinition, DEFAULT_MODE) &&\n    !has(lexerDefinition.modes, lexerDefinition.defaultMode)\n  ) {\n    errors.push({\n      message:\n        `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n        `which does not exist\\n`,\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n    });\n  }\n\n  if (has(lexerDefinition, MODES)) {\n    forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n      forEach(currModeValue, (currTokType, currIdx) => {\n        if (isUndefined(currTokType)) {\n          errors.push({\n            message:\n              `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n              `<${currModeName}> at index: <${currIdx}>\\n`,\n            type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n          });\n        } else if (has(currTokType, \"LONGER_ALT\")) {\n          const longerAlt = isArray(currTokType.LONGER_ALT)\n            ? currTokType.LONGER_ALT\n            : [currTokType.LONGER_ALT];\n          forEach(longerAlt, (currLongerAlt) => {\n            if (\n              !isUndefined(currLongerAlt) &&\n              !includes(currModeValue, currLongerAlt)\n            ) {\n              errors.push({\n                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n              });\n            }\n          });\n        }\n      });\n    });\n  }\n\n  return errors;\n}\n\nexport function performWarningRuntimeChecks(\n  lexerDefinition: IMultiModeLexerDefinition,\n  trackLines: boolean,\n  lineTerminatorCharacters: (number | string)[],\n): ILexerDefinitionError[] {\n  const warnings = [];\n  let hasAnyLineBreak = false;\n  const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n\n  const concreteTokenTypes = reject(\n    allTokenTypes,\n    (currType) => currType[PATTERN] === Lexer.NA,\n  );\n  const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n  if (trackLines) {\n    forEach(concreteTokenTypes, (tokType) => {\n      const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n      if (currIssue !== false) {\n        const message = buildLineBreakIssueMessage(tokType, currIssue);\n        const warningDescriptor = {\n          message,\n          type: currIssue.issue,\n          tokenType: tokType,\n        };\n        warnings.push(warningDescriptor);\n      } else {\n        // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n        if (has(tokType, \"LINE_BREAKS\")) {\n          if (tokType.LINE_BREAKS === true) {\n            hasAnyLineBreak = true;\n          }\n        } else {\n          if (\n            canMatchCharCode(terminatorCharCodes, tokType.PATTERN as RegExp)\n          ) {\n            hasAnyLineBreak = true;\n          }\n        }\n      }\n    });\n  }\n\n  if (trackLines && !hasAnyLineBreak) {\n    warnings.push({\n      message:\n        \"Warning: No LINE_BREAKS Found.\\n\" +\n        \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n        \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n        \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n    });\n  }\n  return warnings;\n}\n\nexport function cloneEmptyGroups(emptyGroups: {\n  [groupName: string]: IToken;\n}): { [groupName: string]: IToken } {\n  const clonedResult: any = {};\n  const groupKeys = keys(emptyGroups);\n\n  forEach(groupKeys, (currKey) => {\n    const currGroupValue = emptyGroups[currKey];\n\n    /* istanbul ignore else */\n    if (isArray(currGroupValue)) {\n      clonedResult[currKey] = [];\n    } else {\n      throw Error(\"non exhaustive match\");\n    }\n  });\n\n  return clonedResult;\n}\n\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType: TokenType): boolean {\n  const pattern = tokenType.PATTERN;\n  /* istanbul ignore else */\n  if (isRegExp(pattern)) {\n    return false;\n  } else if (isFunction(pattern)) {\n    // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n    return true;\n  } else if (has(pattern, \"exec\")) {\n    // ICustomPattern\n    return true;\n  } else if (isString(pattern)) {\n    return false;\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nexport function isShortPattern(pattern: any): number | false {\n  if (isString(pattern) && pattern.length === 1) {\n    return pattern.charCodeAt(0);\n  } else {\n    return false;\n  }\n}\n\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester: ILineTerminatorsTester = {\n  // implements /\\n|\\r\\n?/g.test\n  test: function (text) {\n    const len = text.length;\n    for (let i = this.lastIndex; i < len; i++) {\n      const c = text.charCodeAt(i);\n      if (c === 10) {\n        this.lastIndex = i + 1;\n        return true;\n      } else if (c === 13) {\n        if (text.charCodeAt(i + 1) === 10) {\n          this.lastIndex = i + 2;\n        } else {\n          this.lastIndex = i + 1;\n        }\n        return true;\n      }\n    }\n    return false;\n  },\n\n  lastIndex: 0,\n};\n\nfunction checkLineBreaksIssues(\n  tokType: TokenType,\n  lineTerminatorCharCodes: number[],\n):\n  | {\n      issue:\n        | LexerDefinitionErrorType.IDENTIFY_TERMINATOR\n        | LexerDefinitionErrorType.CUSTOM_LINE_BREAK;\n      errMsg?: string;\n    }\n  | false {\n  if (has(tokType, \"LINE_BREAKS\")) {\n    // if the user explicitly declared the line_breaks option we will respect their choice\n    // and assume it is correct.\n    return false;\n  } else {\n    /* istanbul ignore else */\n    if (isRegExp(tokType.PATTERN)) {\n      try {\n        // TODO: why is the casting suddenly needed?\n        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN as RegExp);\n      } catch (e) {\n        /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n        return {\n          issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n          errMsg: (e as Error).message,\n        };\n      }\n      return false;\n    } else if (isString(tokType.PATTERN)) {\n      // string literal patterns can always be analyzed to detect line terminator usage\n      return false;\n    } else if (isCustomPattern(tokType)) {\n      // custom token types\n      return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n    } else {\n      throw Error(\"non exhaustive match\");\n    }\n  }\n}\n\nexport function buildLineBreakIssueMessage(\n  tokType: TokenType,\n  details: {\n    issue:\n      | LexerDefinitionErrorType.IDENTIFY_TERMINATOR\n      | LexerDefinitionErrorType.CUSTOM_LINE_BREAK;\n    errMsg?: string;\n  },\n): string {\n  /* istanbul ignore else */\n  if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n    return (\n      \"Warning: unable to identify line terminator usage in pattern.\\n\" +\n      `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n      `\\t Root cause: ${details.errMsg}.\\n` +\n      \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\"\n    );\n  } else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n    return (\n      \"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n      `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n      \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\"\n    );\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nfunction getCharCodes(charsOrCodes: (number | string)[]): number[] {\n  const charCodes = map(charsOrCodes, (numOrString) => {\n    if (isString(numOrString)) {\n      return numOrString.charCodeAt(0);\n    } else {\n      return numOrString;\n    }\n  });\n\n  return charCodes;\n}\n\nfunction addToMapOfArrays<T>(\n  map: Record<number, T[]>,\n  key: number,\n  value: T,\n): void {\n  if (map[key] === undefined) {\n    map[key] = [value];\n  } else {\n    map[key].push(value);\n  }\n}\n\nexport const minOptimizationVal = 256;\n\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap: number[] = [];\nexport function charCodeToOptimizedIndex(charCode: number): number {\n  return charCode < minOptimizationVal\n    ? charCode\n    : charCodeToOptimizedIdxMap[charCode];\n}\n\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n  if (isEmpty(charCodeToOptimizedIdxMap)) {\n    charCodeToOptimizedIdxMap = new Array(65536);\n    for (let i = 0; i < 65536; i++) {\n      charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n    }\n  }\n}\n","import {\n  clone,\n  compact,\n  difference,\n  flatten,\n  forEach,\n  has,\n  includes,\n  isArray,\n  isEmpty,\n  map,\n} from \"lodash-es\";\nimport { IToken, TokenType } from \"@chevrotain/types\";\n\nexport function tokenStructuredMatcher(\n  tokInstance: IToken,\n  tokConstructor: TokenType,\n) {\n  const instanceType = tokInstance.tokenTypeIdx;\n  if (instanceType === tokConstructor.tokenTypeIdx) {\n    return true;\n  } else {\n    return (\n      tokConstructor.isParent === true &&\n      tokConstructor.categoryMatchesMap![instanceType] === true\n    );\n  }\n}\n\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(\n  token: IToken,\n  tokType: TokenType,\n) {\n  return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\n\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass: { [tokenIdx: number]: TokenType } = {};\n\nexport function augmentTokenTypes(tokenTypes: TokenType[]): void {\n  // collect the parent Token Types as well.\n  const tokenTypesAndParents = expandCategories(tokenTypes);\n\n  // add required tokenType and categoryMatches properties\n  assignTokenDefaultProps(tokenTypesAndParents);\n\n  // fill up the categoryMatches\n  assignCategoriesMapProp(tokenTypesAndParents);\n  assignCategoriesTokensProp(tokenTypesAndParents);\n\n  forEach(tokenTypesAndParents, (tokType) => {\n    tokType.isParent = tokType.categoryMatches!.length > 0;\n  });\n}\n\nexport function expandCategories(tokenTypes: TokenType[]): TokenType[] {\n  let result = clone(tokenTypes);\n\n  let categories = tokenTypes;\n  let searching = true;\n  while (searching) {\n    categories = compact(\n      flatten(map(categories, (currTokType) => currTokType.CATEGORIES)),\n    );\n\n    const newCategories = difference(categories, result);\n\n    result = result.concat(newCategories);\n\n    if (isEmpty(newCategories)) {\n      searching = false;\n    } else {\n      categories = newCategories;\n    }\n  }\n  return result;\n}\n\nexport function assignTokenDefaultProps(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    if (!hasShortKeyProperty(currTokType)) {\n      tokenIdxToClass[tokenShortNameIdx] = currTokType;\n      (<any>currTokType).tokenTypeIdx = tokenShortNameIdx++;\n    }\n\n    // CATEGORIES? : TokenType | TokenType[]\n    if (\n      hasCategoriesProperty(currTokType) &&\n      !isArray(currTokType.CATEGORIES)\n      // &&\n      // !isUndefined(currTokType.CATEGORIES.PATTERN)\n    ) {\n      currTokType.CATEGORIES = [currTokType.CATEGORIES as unknown as TokenType];\n    }\n\n    if (!hasCategoriesProperty(currTokType)) {\n      currTokType.CATEGORIES = [];\n    }\n\n    if (!hasExtendingTokensTypesProperty(currTokType)) {\n      currTokType.categoryMatches = [];\n    }\n\n    if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n      currTokType.categoryMatchesMap = {};\n    }\n  });\n}\n\nexport function assignCategoriesTokensProp(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    // avoid duplications\n    currTokType.categoryMatches = [];\n    forEach(currTokType.categoryMatchesMap!, (val, key) => {\n      currTokType.categoryMatches!.push(\n        tokenIdxToClass[key as unknown as number].tokenTypeIdx!,\n      );\n    });\n  });\n}\n\nexport function assignCategoriesMapProp(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    singleAssignCategoriesToksMap([], currTokType);\n  });\n}\n\nexport function singleAssignCategoriesToksMap(\n  path: TokenType[],\n  nextNode: TokenType,\n): void {\n  forEach(path, (pathNode) => {\n    nextNode.categoryMatchesMap![pathNode.tokenTypeIdx!] = true;\n  });\n\n  forEach(nextNode.CATEGORIES, (nextCategory) => {\n    const newPath = path.concat(nextNode);\n    // avoids infinite loops due to cyclic categories.\n    if (!includes(newPath, nextCategory)) {\n      singleAssignCategoriesToksMap(newPath, nextCategory);\n    }\n  });\n}\n\nexport function hasShortKeyProperty(tokType: TokenType): boolean {\n  return has(tokType, \"tokenTypeIdx\");\n}\n\nexport function hasCategoriesProperty(tokType: TokenType): boolean {\n  return has(tokType, \"CATEGORIES\");\n}\n\nexport function hasExtendingTokensTypesProperty(tokType: TokenType): boolean {\n  return has(tokType, \"categoryMatches\");\n}\n\nexport function hasExtendingTokensTypesMapProperty(\n  tokType: TokenType,\n): boolean {\n  return has(tokType, \"categoryMatchesMap\");\n}\n\nexport function isTokenType(tokType: TokenType): boolean {\n  return has(tokType, \"tokenTypeIdx\");\n}\n","import { ILexerErrorMessageProvider, IToken } from \"@chevrotain/types\";\n\nexport const defaultLexerErrorProvider: ILexerErrorMessageProvider = {\n  buildUnableToPopLexerModeMessage(token: IToken): string {\n    return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n  },\n\n  buildUnexpectedCharactersMessage(\n    fullText: string,\n    startOffset: number,\n    length: number,\n    line?: number,\n    column?: number,\n  ): string {\n    return (\n      `unexpected character: ->${fullText.charAt(\n        startOffset,\n      )}<- at offset: ${startOffset},` + ` skipped ${length} characters.`\n    );\n  },\n};\n","import {\n  analyzeTokenTypes,\n  charCodeToOptimizedIndex,\n  cloneEmptyGroups,\n  DEFAULT_MODE,\n  IAnalyzeResult,\n  IPatternConfig,\n  LineTerminatorOptimizedTester,\n  performRuntimeChecks,\n  performWarningRuntimeChecks,\n  SUPPORT_STICKY,\n  validatePatterns,\n} from \"./lexer.js\";\nimport {\n  assign,\n  clone,\n  forEach,\n  identity,\n  isArray,\n  isEmpty,\n  isUndefined,\n  keys,\n  last,\n  map,\n  noop,\n  reduce,\n  reject,\n} from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport {\n  CustomPatternMatcherFunc,\n  CustomPatternMatcherReturn,\n  ILexerConfig,\n  ILexerDefinitionError,\n  ILexingError,\n  IMultiModeLexerDefinition,\n  IToken,\n  TokenType,\n} from \"@chevrotain/types\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\n\nexport interface ILexingResult {\n  tokens: IToken[];\n  groups: { [groupName: string]: IToken[] };\n  errors: ILexingError[];\n}\n\nexport enum LexerDefinitionErrorType {\n  MISSING_PATTERN,\n  INVALID_PATTERN,\n  EOI_ANCHOR_FOUND,\n  UNSUPPORTED_FLAGS_FOUND,\n  DUPLICATE_PATTERNS_FOUND,\n  INVALID_GROUP_TYPE_FOUND,\n  PUSH_MODE_DOES_NOT_EXIST,\n  MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n  MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n  MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n  LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n  SOI_ANCHOR_FOUND,\n  EMPTY_MATCH_PATTERN,\n  NO_LINE_BREAKS_FLAGS,\n  UNREACHABLE_PATTERN,\n  IDENTIFY_TERMINATOR,\n  CUSTOM_LINE_BREAK,\n  MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n}\n\nexport interface IRegExpExec {\n  exec: CustomPatternMatcherFunc;\n}\n\nconst DEFAULT_LEXER_CONFIG: Required<ILexerConfig> = {\n  deferDefinitionErrorsHandling: false,\n  positionTracking: \"full\",\n  lineTerminatorsPattern: /\\n|\\r\\n?/g,\n  lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n  ensureOptimizations: false,\n  safeMode: false,\n  errorMessageProvider: defaultLexerErrorProvider,\n  traceInitPerf: false,\n  skipValidations: false,\n  recoveryEnabled: true,\n};\n\nObject.freeze(DEFAULT_LEXER_CONFIG);\n\nexport class Lexer {\n  public static SKIPPED =\n    \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\n\n  public static NA = /NOT_APPLICABLE/;\n  public lexerDefinitionErrors: ILexerDefinitionError[] = [];\n  public lexerDefinitionWarning: ILexerDefinitionError[] = [];\n\n  protected patternIdxToConfig: Record<string, IPatternConfig[]> = {};\n  protected charCodeToPatternIdxToConfig: {\n    [modeName: string]: { [charCode: number]: IPatternConfig[] };\n  } = {};\n\n  protected modes: string[] = [];\n  protected defaultMode!: string;\n  protected emptyGroups: { [groupName: string]: IToken } = {};\n\n  private config: Required<ILexerConfig>;\n  private trackStartLines: boolean = true;\n  private trackEndLines: boolean = true;\n  private hasCustom: boolean = false;\n  private canModeBeOptimized: Record<string, boolean> = {};\n\n  private traceInitPerf!: boolean | number;\n  private traceInitMaxIdent!: number;\n  private traceInitIndent: number;\n\n  constructor(\n    protected lexerDefinition: TokenType[] | IMultiModeLexerDefinition,\n    config: ILexerConfig = DEFAULT_LEXER_CONFIG,\n  ) {\n    if (typeof config === \"boolean\") {\n      throw Error(\n        \"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n          \"a boolean 2nd argument is no longer supported\",\n      );\n    }\n\n    // todo: defaults func?\n    this.config = assign({}, DEFAULT_LEXER_CONFIG, config) as any;\n\n    const traceInitVal = this.config.traceInitPerf;\n    if (traceInitVal === true) {\n      this.traceInitMaxIdent = Infinity;\n      this.traceInitPerf = true;\n    } else if (typeof traceInitVal === \"number\") {\n      this.traceInitMaxIdent = traceInitVal;\n      this.traceInitPerf = true;\n    }\n    this.traceInitIndent = -1;\n\n    this.TRACE_INIT(\"Lexer Constructor\", () => {\n      let actualDefinition!: IMultiModeLexerDefinition;\n      let hasOnlySingleMode = true;\n      this.TRACE_INIT(\"Lexer Config handling\", () => {\n        if (\n          this.config.lineTerminatorsPattern ===\n          DEFAULT_LEXER_CONFIG.lineTerminatorsPattern\n        ) {\n          // optimized built-in implementation for the defaults definition of lineTerminators\n          this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n        } else {\n          if (\n            this.config.lineTerminatorCharacters ===\n            DEFAULT_LEXER_CONFIG.lineTerminatorCharacters\n          ) {\n            throw Error(\n              \"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\",\n            );\n          }\n        }\n\n        if (config.safeMode && config.ensureOptimizations) {\n          throw Error(\n            '\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.',\n          );\n        }\n\n        this.trackStartLines = /full|onlyStart/i.test(\n          this.config.positionTracking,\n        );\n        this.trackEndLines = /full/i.test(this.config.positionTracking);\n\n        // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n        if (isArray(lexerDefinition)) {\n          actualDefinition = {\n            modes: { defaultMode: clone(lexerDefinition) },\n            defaultMode: DEFAULT_MODE,\n          };\n        } else {\n          // no conversion needed, input should already be a IMultiModeLexerDefinition\n          hasOnlySingleMode = false;\n          actualDefinition = clone(<IMultiModeLexerDefinition>lexerDefinition);\n        }\n      });\n\n      if (this.config.skipValidations === false) {\n        this.TRACE_INIT(\"performRuntimeChecks\", () => {\n          this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(\n            performRuntimeChecks(\n              actualDefinition,\n              this.trackStartLines,\n              this.config.lineTerminatorCharacters,\n            ),\n          );\n        });\n\n        this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n          this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(\n            performWarningRuntimeChecks(\n              actualDefinition,\n              this.trackStartLines,\n              this.config.lineTerminatorCharacters,\n            ),\n          );\n        });\n      }\n\n      // for extra robustness to avoid throwing an none informative error message\n      actualDefinition.modes = actualDefinition.modes\n        ? actualDefinition.modes\n        : {};\n\n      // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n      // this transformation is to increase robustness in the case of partially invalid lexer definition.\n      forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n        actualDefinition.modes[currModeName] = reject<TokenType>(\n          currModeValue,\n          (currTokType) => isUndefined(currTokType),\n        );\n      });\n\n      const allModeNames = keys(actualDefinition.modes);\n\n      forEach(\n        actualDefinition.modes,\n        (currModDef: TokenType[], currModName) => {\n          this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n            this.modes.push(currModName);\n\n            if (this.config.skipValidations === false) {\n              this.TRACE_INIT(`validatePatterns`, () => {\n                this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(\n                  validatePatterns(currModDef, allModeNames),\n                );\n              });\n            }\n\n            // If definition errors were encountered, the analysis phase may fail unexpectedly/\n            // Considering a lexer with definition errors may never be used, there is no point\n            // to performing the analysis anyhow...\n            if (isEmpty(this.lexerDefinitionErrors)) {\n              augmentTokenTypes(currModDef);\n\n              let currAnalyzeResult!: IAnalyzeResult;\n              this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                  lineTerminatorCharacters:\n                    this.config.lineTerminatorCharacters,\n                  positionTracking: config.positionTracking,\n                  ensureOptimizations: config.ensureOptimizations,\n                  safeMode: config.safeMode,\n                  tracer: this.TRACE_INIT,\n                });\n              });\n\n              this.patternIdxToConfig[currModName] =\n                currAnalyzeResult.patternIdxToConfig;\n\n              this.charCodeToPatternIdxToConfig[currModName] =\n                currAnalyzeResult.charCodeToPatternIdxToConfig;\n\n              this.emptyGroups = assign(\n                {},\n                this.emptyGroups,\n                currAnalyzeResult.emptyGroups,\n              ) as any;\n\n              this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n\n              this.canModeBeOptimized[currModName] =\n                currAnalyzeResult.canBeOptimized;\n            }\n          });\n        },\n      );\n\n      this.defaultMode = actualDefinition.defaultMode;\n\n      if (\n        !isEmpty(this.lexerDefinitionErrors) &&\n        !this.config.deferDefinitionErrorsHandling\n      ) {\n        const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n          return error.message;\n        });\n        const allErrMessagesString = allErrMessages.join(\n          \"-----------------------\\n\",\n        );\n        throw new Error(\n          \"Errors detected in definition of Lexer:\\n\" + allErrMessagesString,\n        );\n      }\n\n      // Only print warning if there are no errors, This will avoid pl\n      forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n        PRINT_WARNING(warningDescriptor.message);\n      });\n\n      this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n        // Choose the relevant internal implementations for this specific parser.\n        // These implementations should be in-lined by the JavaScript engine\n        // to provide optimal performance in each scenario.\n        if (SUPPORT_STICKY) {\n          this.chopInput = <any>identity;\n          this.match = this.matchWithTest;\n        } else {\n          this.updateLastIndex = noop;\n          this.match = this.matchWithExec;\n        }\n\n        if (hasOnlySingleMode) {\n          this.handleModes = noop;\n        }\n\n        if (this.trackStartLines === false) {\n          this.computeNewColumn = identity;\n        }\n\n        if (this.trackEndLines === false) {\n          this.updateTokenEndLineColumnLocation = noop;\n        }\n\n        if (/full/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createFullToken;\n        } else if (/onlyStart/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createStartOnlyToken;\n        } else if (/onlyOffset/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createOffsetOnlyToken;\n        } else {\n          throw Error(\n            `Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`,\n          );\n        }\n\n        if (this.hasCustom) {\n          this.addToken = this.addTokenUsingPush;\n          this.handlePayload = this.handlePayloadWithCustom;\n        } else {\n          this.addToken = this.addTokenUsingMemberAccess;\n          this.handlePayload = this.handlePayloadNoCustom;\n        }\n      });\n\n      this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n        const unOptimizedModes = reduce(\n          this.canModeBeOptimized,\n          (cannotBeOptimized, canBeOptimized, modeName) => {\n            if (canBeOptimized === false) {\n              cannotBeOptimized.push(modeName);\n            }\n            return cannotBeOptimized;\n          },\n          [] as string[],\n        );\n\n        if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n          throw Error(\n            `Lexer Modes: < ${unOptimizedModes.join(\n              \", \",\n            )} > cannot be optimized.\\n` +\n              '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n              \"\\t Or inspect the console log for details on how to resolve these issues.\",\n          );\n        }\n      });\n\n      this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n        clearRegExpParserCache();\n      });\n\n      this.TRACE_INIT(\"toFastProperties\", () => {\n        toFastProperties(this);\n      });\n    });\n  }\n\n  public tokenize(\n    text: string,\n    initialMode: string = this.defaultMode,\n  ): ILexingResult {\n    if (!isEmpty(this.lexerDefinitionErrors)) {\n      const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n        return error.message;\n      });\n      const allErrMessagesString = allErrMessages.join(\n        \"-----------------------\\n\",\n      );\n      throw new Error(\n        \"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n          allErrMessagesString,\n      );\n    }\n\n    return this.tokenizeInternal(text, initialMode);\n  }\n\n  // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n  // This is intentional due to performance considerations.\n  // this method also used quite a bit of `!` none null assertions because it is too optimized\n  // for `tsc` to always understand it is \"safe\"\n  private tokenizeInternal(text: string, initialMode: string): ILexingResult {\n    let i,\n      j,\n      k,\n      matchAltImage,\n      longerAlt,\n      matchedImage: string | null,\n      payload,\n      altPayload,\n      imageLength,\n      group,\n      tokType,\n      newToken: IToken,\n      errLength,\n      droppedChar,\n      msg,\n      match;\n    const orgText = text;\n    const orgLength = orgText.length;\n    let offset = 0;\n    let matchedTokensIndex = 0;\n    // initializing the tokensArray to the \"guessed\" size.\n    // guessing too little will still reduce the number of array re-sizes on pushes.\n    // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n    // but would still have a faster runtime by avoiding (All but one) array resizing.\n    const guessedNumberOfTokens = this.hasCustom\n      ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n      : Math.floor(text.length / 10);\n    const matchedTokens = new Array(guessedNumberOfTokens);\n    const errors: ILexingError[] = [];\n    let line = this.trackStartLines ? 1 : undefined;\n    let column = this.trackStartLines ? 1 : undefined;\n    const groups: any = cloneEmptyGroups(this.emptyGroups);\n    const trackLines = this.trackStartLines;\n    const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n\n    let currModePatternsLength = 0;\n    let patternIdxToConfig: IPatternConfig[] = [];\n    let currCharCodeToPatternIdxToConfig: {\n      [charCode: number]: IPatternConfig[];\n    } = [];\n\n    const modeStack: string[] = [];\n\n    const emptyArray: IPatternConfig[] = [];\n    Object.freeze(emptyArray);\n    let getPossiblePatterns!: (charCode: number) => IPatternConfig[];\n\n    function getPossiblePatternsSlow() {\n      return patternIdxToConfig;\n    }\n\n    function getPossiblePatternsOptimized(charCode: number): IPatternConfig[] {\n      const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n      const possiblePatterns =\n        currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n      if (possiblePatterns === undefined) {\n        return emptyArray;\n      } else {\n        return possiblePatterns;\n      }\n    }\n\n    const pop_mode = (popToken: IToken) => {\n      // TODO: perhaps avoid this error in the edge case there is no more input?\n      if (\n        modeStack.length === 1 &&\n        // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n        // So no error should occur.\n        popToken.tokenType.PUSH_MODE === undefined\n      ) {\n        // if we try to pop the last mode there lexer will no longer have ANY mode.\n        // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n        const msg =\n          this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(\n            popToken,\n          );\n\n        errors.push({\n          offset: popToken.startOffset,\n          line: popToken.startLine,\n          column: popToken.startColumn,\n          length: popToken.image.length,\n          message: msg,\n        });\n      } else {\n        modeStack.pop();\n        const newMode = last(modeStack)!;\n        patternIdxToConfig = this.patternIdxToConfig[newMode];\n        currCharCodeToPatternIdxToConfig =\n          this.charCodeToPatternIdxToConfig[newMode];\n        currModePatternsLength = patternIdxToConfig.length;\n        const modeCanBeOptimized =\n          this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n\n        if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n          getPossiblePatterns = getPossiblePatternsOptimized;\n        } else {\n          getPossiblePatterns = getPossiblePatternsSlow;\n        }\n      }\n    };\n\n    function push_mode(this: Lexer, newMode: string) {\n      modeStack.push(newMode);\n      currCharCodeToPatternIdxToConfig =\n        this.charCodeToPatternIdxToConfig[newMode];\n\n      patternIdxToConfig = this.patternIdxToConfig[newMode];\n      currModePatternsLength = patternIdxToConfig.length;\n\n      currModePatternsLength = patternIdxToConfig.length;\n      const modeCanBeOptimized =\n        this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n\n      if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n        getPossiblePatterns = getPossiblePatternsOptimized;\n      } else {\n        getPossiblePatterns = getPossiblePatternsSlow;\n      }\n    }\n\n    // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n    // seem to matter performance wise.\n    push_mode.call(this, initialMode);\n\n    let currConfig!: IPatternConfig;\n\n    const recoveryEnabled = this.config.recoveryEnabled;\n\n    while (offset < orgLength) {\n      matchedImage = null;\n\n      const nextCharCode = orgText.charCodeAt(offset);\n      const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n      const chosenPatternsLength = chosenPatternIdxToConfig.length;\n\n      for (i = 0; i < chosenPatternsLength; i++) {\n        currConfig = chosenPatternIdxToConfig[i];\n        const currPattern = currConfig.pattern;\n        payload = null;\n\n        // manually in-lined because > 600 chars won't be in-lined in V8\n        const singleCharCode = currConfig.short;\n        if (singleCharCode !== false) {\n          if (nextCharCode === singleCharCode) {\n            // single character string\n            matchedImage = currPattern as string;\n          }\n        } else if (currConfig.isCustom === true) {\n          match = (currPattern as IRegExpExec).exec(\n            orgText,\n            offset,\n            matchedTokens,\n            groups,\n          );\n          if (match !== null) {\n            matchedImage = match[0];\n            if ((match as CustomPatternMatcherReturn).payload !== undefined) {\n              payload = (match as CustomPatternMatcherReturn).payload;\n            }\n          } else {\n            matchedImage = null;\n          }\n        } else {\n          this.updateLastIndex(currPattern as RegExp, offset);\n          matchedImage = this.match(currPattern as RegExp, text, offset);\n        }\n\n        if (matchedImage !== null) {\n          // even though this pattern matched we must try a another longer alternative.\n          // this can be used to prioritize keywords over identifiers\n          longerAlt = currConfig.longerAlt;\n          if (longerAlt !== undefined) {\n            // TODO: micro optimize, avoid extra prop access\n            // by saving/linking longerAlt on the original config?\n            const longerAltLength = longerAlt.length;\n            for (k = 0; k < longerAltLength; k++) {\n              const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n              const longerAltPattern = longerAltConfig.pattern;\n              altPayload = null;\n\n              // single Char can never be a longer alt so no need to test it.\n              // manually in-lined because > 600 chars won't be in-lined in V8\n              if (longerAltConfig.isCustom === true) {\n                match = (longerAltPattern as IRegExpExec).exec(\n                  orgText,\n                  offset,\n                  matchedTokens,\n                  groups,\n                );\n                if (match !== null) {\n                  matchAltImage = match[0];\n                  if (\n                    (match as CustomPatternMatcherReturn).payload !== undefined\n                  ) {\n                    altPayload = (match as CustomPatternMatcherReturn).payload;\n                  }\n                } else {\n                  matchAltImage = null;\n                }\n              } else {\n                this.updateLastIndex(longerAltPattern as RegExp, offset);\n                matchAltImage = this.match(\n                  longerAltPattern as RegExp,\n                  text,\n                  offset,\n                );\n              }\n\n              if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                matchedImage = matchAltImage;\n                payload = altPayload;\n                currConfig = longerAltConfig;\n                // Exit the loop early after matching one of the longer alternatives\n                // The first matched alternative takes precedence\n                break;\n              }\n            }\n          }\n          break;\n        }\n      }\n\n      // successful match\n      if (matchedImage !== null) {\n        imageLength = matchedImage.length;\n        group = currConfig.group;\n        if (group !== undefined) {\n          tokType = currConfig.tokenTypeIdx;\n          // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n          // createFullToken method\n          newToken = this.createTokenInstance(\n            matchedImage,\n            offset,\n            tokType,\n            currConfig.tokenType,\n            line,\n            column,\n            imageLength,\n          );\n\n          this.handlePayload(newToken, payload);\n\n          // TODO: optimize NOOP in case there are no special groups?\n          if (group === false) {\n            matchedTokensIndex = this.addToken(\n              matchedTokens,\n              matchedTokensIndex,\n              newToken,\n            );\n          } else {\n            groups[group].push(newToken);\n          }\n        }\n        text = this.chopInput(text, imageLength);\n        offset = offset + imageLength;\n\n        // TODO: with newlines the column may be assigned twice\n        column = this.computeNewColumn(column!, imageLength);\n\n        if (trackLines === true && currConfig.canLineTerminator === true) {\n          let numOfLTsInMatch = 0;\n          let foundTerminator;\n          let lastLTEndOffset: number;\n          lineTerminatorPattern.lastIndex = 0;\n          do {\n            foundTerminator = lineTerminatorPattern.test(matchedImage);\n            if (foundTerminator === true) {\n              lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n              numOfLTsInMatch++;\n            }\n          } while (foundTerminator === true);\n\n          if (numOfLTsInMatch !== 0) {\n            line = line! + numOfLTsInMatch;\n            column = imageLength - lastLTEndOffset!;\n            this.updateTokenEndLineColumnLocation(\n              newToken!,\n              group!,\n              lastLTEndOffset!,\n              numOfLTsInMatch,\n              line,\n              column,\n              imageLength,\n            );\n          }\n        }\n        // will be NOOP if no modes present\n        this.handleModes(currConfig, pop_mode, push_mode, newToken!);\n      } else {\n        // error recovery, drop characters until we identify a valid token's start point\n        const errorStartOffset = offset;\n        const errorLine = line;\n        const errorColumn = column;\n        let foundResyncPoint = recoveryEnabled === false;\n\n        while (foundResyncPoint === false && offset < orgLength) {\n          // Identity Func (when sticky flag is enabled)\n          text = this.chopInput(text, 1);\n          offset++;\n          for (j = 0; j < currModePatternsLength; j++) {\n            const currConfig = patternIdxToConfig[j];\n            const currPattern = currConfig.pattern;\n\n            // manually in-lined because > 600 chars won't be in-lined in V8\n            const singleCharCode = currConfig.short;\n            if (singleCharCode !== false) {\n              if (orgText.charCodeAt(offset) === singleCharCode) {\n                // single character string\n                foundResyncPoint = true;\n              }\n            } else if (currConfig.isCustom === true) {\n              foundResyncPoint =\n                (currPattern as IRegExpExec).exec(\n                  orgText,\n                  offset,\n                  matchedTokens,\n                  groups,\n                ) !== null;\n            } else {\n              this.updateLastIndex(currPattern as RegExp, offset);\n              foundResyncPoint = (currPattern as RegExp).exec(text) !== null;\n            }\n\n            if (foundResyncPoint === true) {\n              break;\n            }\n          }\n        }\n\n        errLength = offset - errorStartOffset;\n        column = this.computeNewColumn(column!, errLength);\n        // at this point we either re-synced or reached the end of the input text\n        msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(\n          orgText,\n          errorStartOffset,\n          errLength,\n          errorLine,\n          errorColumn,\n        );\n        errors.push({\n          offset: errorStartOffset,\n          line: errorLine,\n          column: errorColumn,\n          length: errLength,\n          message: msg,\n        });\n\n        if (recoveryEnabled === false) {\n          break;\n        }\n      }\n    }\n\n    // if we do have custom patterns which push directly into the\n    // TODO: custom tokens should not push directly??\n    if (!this.hasCustom) {\n      // if we guessed a too large size for the tokens array this will shrink it to the right size.\n      matchedTokens.length = matchedTokensIndex;\n    }\n\n    return {\n      tokens: matchedTokens,\n      groups: groups,\n      errors: errors,\n    };\n  }\n\n  private handleModes(\n    config: IPatternConfig,\n    pop_mode: (tok: IToken) => void,\n    push_mode: (this: Lexer, pushMode: string) => void,\n    newToken: IToken,\n  ) {\n    if (config.pop === true) {\n      // need to save the PUSH_MODE property as if the mode is popped\n      // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n      const pushMode = config.push;\n      pop_mode(newToken);\n      if (pushMode !== undefined) {\n        push_mode.call(this, pushMode);\n      }\n    } else if (config.push !== undefined) {\n      push_mode.call(this, config.push);\n    }\n  }\n\n  private chopInput(text: string, length: number): string {\n    return text.substring(length);\n  }\n\n  private updateLastIndex(regExp: RegExp, newLastIndex: number): void {\n    regExp.lastIndex = newLastIndex;\n  }\n\n  // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n  private updateTokenEndLineColumnLocation(\n    newToken: IToken,\n    group: string | false,\n    lastLTIdx: number,\n    numOfLTsInMatch: number,\n    line: number,\n    column: number,\n    imageLength: number,\n  ): void {\n    let lastCharIsLT, fixForEndingInLT;\n    if (group !== undefined) {\n      // a none skipped multi line Token, need to update endLine/endColumn\n      lastCharIsLT = lastLTIdx === imageLength - 1;\n      fixForEndingInLT = lastCharIsLT ? -1 : 0;\n      if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n        // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n        newToken.endLine = line + fixForEndingInLT;\n        // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n        // inclusive to exclusive range.\n        newToken.endColumn = column - 1 + -fixForEndingInLT;\n      }\n      // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n    }\n  }\n\n  private computeNewColumn(oldColumn: number, imageLength: number) {\n    return oldColumn + imageLength;\n  }\n\n  // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n  /* istanbul ignore next - place holder */\n  private createTokenInstance!: (...args: any[]) => IToken;\n\n  private createOffsetOnlyToken(\n    image: string,\n    startOffset: number,\n    tokenTypeIdx: number,\n    tokenType: TokenType,\n  ) {\n    return {\n      image,\n      startOffset,\n      tokenTypeIdx,\n      tokenType,\n    };\n  }\n\n  private createStartOnlyToken(\n    image: string,\n    startOffset: number,\n    tokenTypeIdx: number,\n    tokenType: TokenType,\n    startLine: number,\n    startColumn: number,\n  ) {\n    return {\n      image,\n      startOffset,\n      startLine,\n      startColumn,\n      tokenTypeIdx,\n      tokenType,\n    };\n  }\n\n  private createFullToken(\n    image: string,\n    startOffset: number,\n    tokenTypeIdx: number,\n    tokenType: TokenType,\n    startLine: number,\n    startColumn: number,\n    imageLength: number,\n  ): IToken {\n    return {\n      image,\n      startOffset,\n      endOffset: startOffset + imageLength - 1,\n      startLine,\n      endLine: startLine,\n      startColumn,\n      endColumn: startColumn + imageLength - 1,\n      tokenTypeIdx,\n      tokenType,\n    };\n  }\n\n  // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n  /* istanbul ignore next - place holder */\n  private addToken!: (\n    tokenVector: IToken[],\n    index: number,\n    tokenToAdd: IToken,\n  ) => number;\n\n  private addTokenUsingPush(\n    tokenVector: IToken[],\n    index: number,\n    tokenToAdd: IToken,\n  ): number {\n    tokenVector.push(tokenToAdd);\n    return index;\n  }\n\n  private addTokenUsingMemberAccess(\n    tokenVector: IToken[],\n    index: number,\n    tokenToAdd: IToken,\n  ): number {\n    tokenVector[index] = tokenToAdd;\n    index++;\n    return index;\n  }\n\n  // Place holder, will be replaced by the correct variant according to the hasCustom flag option at runtime.\n  private handlePayload: (token: IToken, payload: any) => void;\n\n  private handlePayloadNoCustom(token: IToken, payload: any): void {}\n\n  private handlePayloadWithCustom(token: IToken, payload: any): void {\n    if (payload !== null) {\n      token.payload = payload;\n    }\n  }\n\n  // place holder to be replaced with chosen alternative at runtime\n  private match!: (\n    pattern: RegExp,\n    text: string,\n    offset: number,\n  ) => string | null;\n\n  private matchWithTest(\n    pattern: RegExp,\n    text: string,\n    offset: number,\n  ): string | null {\n    const found = pattern.test(text);\n    if (found === true) {\n      return text.substring(offset, pattern.lastIndex);\n    }\n    return null;\n  }\n\n  private matchWithExec(pattern: RegExp, text: string): string | null {\n    const regExpArray = pattern.exec(text);\n    return regExpArray !== null ? regExpArray[0] : null;\n  }\n\n  // Duplicated from the parser's perf trace trait to allow future extraction\n  // of the lexer to a separate package.\n  TRACE_INIT = <T>(phaseDesc: string, phaseImpl: () => T): T => {\n    // No need to optimize this using NOOP pattern because\n    // It is not called in a hot spot...\n    if (this.traceInitPerf === true) {\n      this.traceInitIndent++;\n      const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        console.log(`${indent}--> <${phaseDesc}>`);\n      }\n      const { time, value } = timer(phaseImpl);\n      /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n      const traceMethod = time > 10 ? console.warn : console.log;\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n      }\n      this.traceInitIndent--;\n      return value;\n    } else {\n      return phaseImpl();\n    }\n  };\n}\n","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nimport { IToken, ITokenConfig, TokenType } from \"@chevrotain/types\";\n\nexport function tokenLabel(tokType: TokenType): string {\n  if (hasTokenLabel(tokType)) {\n    return tokType.LABEL;\n  } else {\n    return tokType.name;\n  }\n}\n\nexport function tokenName(tokType: TokenType): string {\n  return tokType.name;\n}\n\nexport function hasTokenLabel(\n  obj: TokenType,\n): obj is TokenType & Pick<Required<TokenType>, \"LABEL\"> {\n  return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\n\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\n\nexport function createToken(config: ITokenConfig): TokenType {\n  return createTokenInternal(config);\n}\n\nfunction createTokenInternal(config: ITokenConfig): TokenType {\n  const pattern = config.pattern;\n\n  const tokenType: TokenType = <any>{};\n  tokenType.name = config.name;\n\n  if (!isUndefined(pattern)) {\n    tokenType.PATTERN = pattern;\n  }\n\n  if (has(config, PARENT)) {\n    throw (\n      \"The parent property is no longer supported.\\n\" +\n      \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\"\n    );\n  }\n\n  if (has(config, CATEGORIES)) {\n    // casting to ANY as this will be fixed inside `augmentTokenTypes``\n    tokenType.CATEGORIES = <any>config[CATEGORIES];\n  }\n\n  augmentTokenTypes([tokenType]);\n\n  if (has(config, LABEL)) {\n    tokenType.LABEL = config[LABEL];\n  }\n\n  if (has(config, GROUP)) {\n    tokenType.GROUP = config[GROUP];\n  }\n\n  if (has(config, POP_MODE)) {\n    tokenType.POP_MODE = config[POP_MODE];\n  }\n\n  if (has(config, PUSH_MODE)) {\n    tokenType.PUSH_MODE = config[PUSH_MODE];\n  }\n\n  if (has(config, LONGER_ALT)) {\n    tokenType.LONGER_ALT = config[LONGER_ALT];\n  }\n\n  if (has(config, LINE_BREAKS)) {\n    tokenType.LINE_BREAKS = config[LINE_BREAKS];\n  }\n\n  if (has(config, START_CHARS_HINT)) {\n    tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n  }\n\n  return tokenType;\n}\n\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\n\nexport function createTokenInstance(\n  tokType: TokenType,\n  image: string,\n  startOffset: number,\n  endOffset: number,\n  startLine: number,\n  endLine: number,\n  startColumn: number,\n  endColumn: number,\n): IToken {\n  return {\n    image,\n    startOffset,\n    endOffset,\n    startLine,\n    endLine,\n    startColumn,\n    endColumn,\n    tokenTypeIdx: (<any>tokType).tokenTypeIdx,\n    tokenType: tokType,\n  };\n}\n\nexport function tokenMatcher(token: IToken, tokType: TokenType): boolean {\n  return tokenStructuredMatcher(token, tokType);\n}\n","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport {\n  Alternation,\n  getProductionDslName,\n  NonTerminal,\n  Rule,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport {\n  IParserErrorMessageProvider,\n  IProductionWithOccurrence,\n  TokenType,\n} from \"@chevrotain/types\";\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IGrammarValidatorErrorMessageProvider,\n} from \"./grammar/types.js\";\n\nexport const defaultParserErrorProvider: IParserErrorMessageProvider = {\n  buildMismatchTokenMessage({ expected, actual, previous, ruleName }): string {\n    const hasLabel = hasTokenLabel(expected);\n    const expectedMsg = hasLabel\n      ? `--> ${tokenLabel(expected)} <--`\n      : `token of type --> ${expected.name} <--`;\n\n    const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n\n    return msg;\n  },\n\n  buildNotAllInputParsedMessage({ firstRedundant, ruleName }): string {\n    return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n  },\n\n  buildNoViableAltMessage({\n    expectedPathsPerAlt,\n    actual,\n    previous,\n    customUserDescription,\n    ruleName,\n  }): string {\n    const errPrefix = \"Expecting: \";\n    // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n    const actualText = first(actual)!.image;\n    const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      const allLookAheadPaths = reduce(\n        expectedPathsPerAlt,\n        (result, currAltPaths) => result.concat(currAltPaths),\n        [] as TokenType[][],\n      );\n      const nextValidTokenSequences = map(\n        allLookAheadPaths,\n        (currPath) =>\n          `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\n            \", \",\n          )}]`,\n      );\n      const nextValidSequenceItems = map(\n        nextValidTokenSequences,\n        (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`,\n      );\n      const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\n        \"\\n\",\n      )}`;\n\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  },\n\n  buildEarlyExitMessage({\n    expectedIterationPaths,\n    actual,\n    customUserDescription,\n    ruleName,\n  }): string {\n    const errPrefix = \"Expecting: \";\n    // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n    const actualText = first(actual)!.image;\n    const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      const nextValidTokenSequences = map(\n        expectedIterationPaths,\n        (currPath) =>\n          `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\n            \",\",\n          )}]`,\n      );\n      const calculatedDescription =\n        `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n        `<${nextValidTokenSequences.join(\" ,\")}>`;\n\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  },\n};\n\nObject.freeze(defaultParserErrorProvider);\n\nexport const defaultGrammarResolverErrorProvider: IGrammarResolverErrorMessageProvider =\n  {\n    buildRuleNotFoundError(\n      topLevelRule: Rule,\n      undefinedRule: NonTerminal,\n    ): string {\n      const msg =\n        \"Invalid grammar, reference to a rule which is not defined: ->\" +\n        undefinedRule.nonTerminalName +\n        \"<-\\n\" +\n        \"inside top level rule: ->\" +\n        topLevelRule.name +\n        \"<-\";\n      return msg;\n    },\n  };\n\nexport const defaultGrammarValidatorErrorProvider: IGrammarValidatorErrorMessageProvider =\n  {\n    buildDuplicateFoundError(\n      topLevelRule: Rule,\n      duplicateProds: IProductionWithOccurrence[],\n    ): string {\n      function getExtraProductionArgument(\n        prod: IProductionWithOccurrence,\n      ): string {\n        if (prod instanceof Terminal) {\n          return prod.terminalType.name;\n        } else if (prod instanceof NonTerminal) {\n          return prod.nonTerminalName;\n        } else {\n          return \"\";\n        }\n      }\n\n      const topLevelName = topLevelRule.name;\n      const duplicateProd = first(duplicateProds)!;\n      const index = duplicateProd.idx;\n      const dslName = getProductionDslName(duplicateProd);\n      const extraArgument = getExtraProductionArgument(duplicateProd);\n\n      const hasExplicitIndex = index > 0;\n      let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${\n        extraArgument ? `with argument: ->${extraArgument}<-` : \"\"\n      }\n                  appears more than once (${\n                    duplicateProds.length\n                  } times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n\n      // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n      msg = msg.replace(/[ \\t]+/g, \" \");\n      msg = msg.replace(/\\s\\s+/g, \"\\n\");\n\n      return msg;\n    },\n\n    buildNamespaceConflictError(rule: Rule): string {\n      const errMsg =\n        `Namespace conflict found in grammar.\\n` +\n        `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n        `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n        `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n        `and Non-Terminal names start with a lower case letter.`;\n\n      return errMsg;\n    },\n\n    buildAlternationPrefixAmbiguityError(options: {\n      topLevelRule: Rule;\n      prefixPath: TokenType[];\n      ambiguityIndices: number[];\n      alternation: Alternation;\n    }): string {\n      const pathMsg = map(options.prefixPath, (currTok) =>\n        tokenLabel(currTok),\n      ).join(\", \");\n      const occurrence =\n        options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n      const errMsg =\n        `Ambiguous alternatives: <${options.ambiguityIndices.join(\n          \" ,\",\n        )}> due to common lookahead prefix\\n` +\n        `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n        `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n        `For Further details.`;\n\n      return errMsg;\n    },\n\n    buildAlternationAmbiguityError(options: {\n      topLevelRule: Rule;\n      prefixPath: TokenType[];\n      ambiguityIndices: number[];\n      alternation: Alternation;\n    }): string {\n      const pathMsg = map(options.prefixPath, (currtok) =>\n        tokenLabel(currtok),\n      ).join(\", \");\n      const occurrence =\n        options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n      let currMessage =\n        `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\n          \" ,\",\n        )}> in <OR${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n\n      currMessage =\n        currMessage +\n        `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n        `For Further details.`;\n      return currMessage;\n    },\n\n    buildEmptyRepetitionError(options: {\n      topLevelRule: Rule;\n      repetition: IProductionWithOccurrence;\n    }): string {\n      let dslName = getProductionDslName(options.repetition);\n      if (options.repetition.idx !== 0) {\n        dslName += options.repetition.idx;\n      }\n\n      const errMsg =\n        `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n        `This could lead to an infinite loop.`;\n\n      return errMsg;\n    },\n\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options: {\n      tokenType: TokenType;\n      expectedPattern: RegExp;\n    }): string {\n      /* istanbul ignore next */\n      return \"deprecated\";\n    },\n\n    buildEmptyAlternationError(options: {\n      topLevelRule: Rule;\n      alternation: Alternation;\n      emptyChoiceIdx: number;\n    }): string {\n      const errMsg =\n        `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n        ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n        `Only the last alternative may be an empty alternative.`;\n\n      return errMsg;\n    },\n\n    buildTooManyAlternativesError(options: {\n      topLevelRule: Rule;\n      alternation: Alternation;\n    }): string {\n      const errMsg =\n        `An Alternation cannot have more than 256 alternatives:\\n` +\n        `<OR${options.alternation.idx}> inside <${\n          options.topLevelRule.name\n        }> Rule.\\n has ${\n          options.alternation.definition.length + 1\n        } alternatives.`;\n\n      return errMsg;\n    },\n\n    buildLeftRecursionError(options: {\n      topLevelRule: Rule;\n      leftRecursionPath: Rule[];\n    }): string {\n      const ruleName = options.topLevelRule.name;\n      const pathNames = map(\n        options.leftRecursionPath,\n        (currRule) => currRule.name,\n      );\n      const leftRecursivePath = `${ruleName} --> ${pathNames\n        .concat([ruleName])\n        .join(\" --> \")}`;\n      const errMsg =\n        `Left Recursion found in grammar.\\n` +\n        `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n        `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n        ` To fix this refactor your grammar to remove the left recursion.\\n` +\n        `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n\n      return errMsg;\n    },\n\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options: {\n      topLevelRule: Rule;\n      expectedPattern: RegExp;\n    }): string {\n      /* istanbul ignore next */\n      return \"deprecated\";\n    },\n\n    buildDuplicateRuleNameError(options: {\n      topLevelRule: Rule | string;\n      grammarName: string;\n    }): string {\n      let ruleName;\n      if (options.topLevelRule instanceof Rule) {\n        ruleName = options.topLevelRule.name;\n      } else {\n        ruleName = options.topLevelRule;\n      }\n\n      const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n\n      return errMsg;\n    },\n  };\n","import {\n  IParserUnresolvedRefDefinitionError,\n  ParserDefinitionErrorType,\n} from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor, NonTerminal, Rule } from \"@chevrotain/gast\";\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IParserDefinitionError,\n} from \"./types.js\";\n\nexport function resolveGrammar(\n  topLevels: Record<string, Rule>,\n  errMsgProvider: IGrammarResolverErrorMessageProvider,\n): IParserDefinitionError[] {\n  const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n  refResolver.resolveRefs();\n  return refResolver.errors;\n}\n\nexport class GastRefResolverVisitor extends GAstVisitor {\n  public errors: IParserUnresolvedRefDefinitionError[] = [];\n  private currTopLevel: Rule;\n\n  constructor(\n    private nameToTopRule: Record<string, Rule>,\n    private errMsgProvider: IGrammarResolverErrorMessageProvider,\n  ) {\n    super();\n  }\n\n  public resolveRefs(): void {\n    forEach(values(this.nameToTopRule), (prod) => {\n      this.currTopLevel = prod;\n      prod.accept(this);\n    });\n  }\n\n  public visitNonTerminal(node: NonTerminal): void {\n    const ref = this.nameToTopRule[node.nonTerminalName];\n\n    if (!ref) {\n      const msg = this.errMsgProvider.buildRuleNotFoundError(\n        this.currTopLevel,\n        node,\n      );\n      this.errors.push({\n        message: msg,\n        type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n        ruleName: this.currTopLevel.name,\n        unresolvedRefName: node.nonTerminalName,\n      });\n    } else {\n      node.referencedRule = ref;\n    }\n  }\n}\n","import {\n  clone,\n  drop,\n  dropRight,\n  first as _first,\n  forEach,\n  isEmpty,\n  last,\n} from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { TokenMatcher } from \"../parser/parser.js\";\nimport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport {\n  IGrammarPath,\n  IProduction,\n  ISyntacticContentAssistPath,\n  IToken,\n  ITokenGrammarPath,\n  TokenType,\n} from \"@chevrotain/types\";\n\nexport abstract class AbstractNextPossibleTokensWalker extends RestWalker {\n  protected possibleTokTypes: TokenType[] = [];\n  protected ruleStack: string[];\n  protected occurrenceStack: number[];\n\n  protected nextProductionName = \"\";\n  protected nextProductionOccurrence = 0;\n  protected found = false;\n  protected isAtEndOfPath = false;\n\n  constructor(\n    protected topProd: Rule,\n    protected path: IGrammarPath,\n  ) {\n    super();\n  }\n\n  startWalking(): TokenType[] {\n    this.found = false;\n\n    if (this.path.ruleStack[0] !== this.topProd.name) {\n      throw Error(\"The path does not start with the walker's top Rule!\");\n    }\n\n    // immutable for the win\n    this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n    this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n\n    // already verified that the first production is valid, we now seek the 2nd production\n    this.ruleStack.pop();\n    this.occurrenceStack.pop();\n\n    this.updateExpectedNext();\n    this.walk(this.topProd);\n\n    return this.possibleTokTypes;\n  }\n\n  walk(\n    prod: { definition: IProduction[] },\n    prevRest: IProduction[] = [],\n  ): void {\n    // stop scanning once we found the path\n    if (!this.found) {\n      super.walk(prod, prevRest);\n    }\n  }\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // found the next production, need to keep walking in it\n    if (\n      refProd.referencedRule.name === this.nextProductionName &&\n      refProd.idx === this.nextProductionOccurrence\n    ) {\n      const fullRest = currRest.concat(prevRest);\n      this.updateExpectedNext();\n      this.walk(refProd.referencedRule, <any>fullRest);\n    }\n  }\n\n  updateExpectedNext(): void {\n    // need to consume the Terminal\n    if (isEmpty(this.ruleStack)) {\n      // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n      // really seeking is the last Terminal...\n      this.nextProductionName = \"\";\n      this.nextProductionOccurrence = 0;\n      this.isAtEndOfPath = true;\n    } else {\n      this.nextProductionName = this.ruleStack.pop()!;\n      this.nextProductionOccurrence = this.occurrenceStack.pop()!;\n    }\n  }\n}\n\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n  private nextTerminalName = \"\";\n  private nextTerminalOccurrence = 0;\n\n  constructor(\n    topProd: Rule,\n    protected path: ITokenGrammarPath,\n  ) {\n    super(topProd, path);\n    this.nextTerminalName = this.path.lastTok.name;\n    this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (\n      this.isAtEndOfPath &&\n      terminal.terminalType.name === this.nextTerminalName &&\n      terminal.idx === this.nextTerminalOccurrence &&\n      !this.found\n    ) {\n      const fullRest = currRest.concat(prevRest);\n      const restProd = new Alternative({ definition: fullRest });\n      this.possibleTokTypes = first(restProd);\n      this.found = true;\n    }\n  }\n}\n\nexport type AlternativesFirstTokens = TokenType[][];\n\nexport interface IFirstAfterRepetition {\n  token: TokenType | undefined;\n  occurrence: number | undefined;\n  isEndOfRule: boolean | undefined;\n}\n\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n  protected result: IFirstAfterRepetition = {\n    token: undefined,\n    occurrence: undefined,\n    isEndOfRule: undefined,\n  };\n\n  constructor(\n    protected topRule: Rule,\n    protected occurrence: number,\n  ) {\n    super();\n  }\n\n  startWalking(): IFirstAfterRepetition {\n    this.walk(this.topRule);\n    return this.result;\n  }\n}\n\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (manyProd.idx === this.occurrence) {\n      const firstAfterMany = _first(currRest.concat(prevRest));\n      this.result.isEndOfRule = firstAfterMany === undefined;\n      if (firstAfterMany instanceof Terminal) {\n        this.result.token = firstAfterMany.terminalType;\n        this.result.occurrence = firstAfterMany.idx;\n      }\n    } else {\n      super.walkMany(manyProd, currRest, prevRest);\n    }\n  }\n}\n\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (manySepProd.idx === this.occurrence) {\n      const firstAfterManySep = _first(currRest.concat(prevRest));\n      this.result.isEndOfRule = firstAfterManySep === undefined;\n      if (firstAfterManySep instanceof Terminal) {\n        this.result.token = firstAfterManySep.terminalType;\n        this.result.occurrence = firstAfterManySep.idx;\n      }\n    } else {\n      super.walkManySep(manySepProd, currRest, prevRest);\n    }\n  }\n}\n\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (atLeastOneProd.idx === this.occurrence) {\n      const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n      this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n      if (firstAfterAtLeastOne instanceof Terminal) {\n        this.result.token = firstAfterAtLeastOne.terminalType;\n        this.result.occurrence = firstAfterAtLeastOne.idx;\n      }\n    } else {\n      super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n    }\n  }\n}\n\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkAtLeastOneSep(\n    atleastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (atleastOneSepProd.idx === this.occurrence) {\n      const firstAfterfirstAfterAtLeastOneSep = _first(\n        currRest.concat(prevRest),\n      );\n      this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n      if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n        this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n        this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n      }\n    } else {\n      super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n    }\n  }\n}\n\nexport interface PartialPathAndSuffixes {\n  partialPath: TokenType[];\n  suffixDef: IProduction[];\n}\n\nexport function possiblePathsFrom(\n  targetDef: IProduction[],\n  maxLength: number,\n  currPath: TokenType[] = [],\n): PartialPathAndSuffixes[] {\n  // avoid side effects\n  currPath = clone(currPath);\n  let result: PartialPathAndSuffixes[] = [];\n  let i = 0;\n\n  // TODO: avoid inner funcs\n  function remainingPathWith(nextDef: IProduction[]) {\n    return nextDef.concat(drop(targetDef, i + 1));\n  }\n\n  // TODO: avoid inner funcs\n  function getAlternativesForProd(definition: IProduction[]) {\n    const alternatives = possiblePathsFrom(\n      remainingPathWith(definition),\n      maxLength,\n      currPath,\n    );\n    return result.concat(alternatives);\n  }\n\n  /**\n   * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n   * following (rest) of the targetDef.\n   *\n   * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n   * the optional production.\n   */\n  while (currPath.length < maxLength && i < targetDef.length) {\n    const prod = targetDef[i];\n\n    /* istanbul ignore else */\n    if (prod instanceof Alternative) {\n      return getAlternativesForProd(prod.definition);\n    } else if (prod instanceof NonTerminal) {\n      return getAlternativesForProd(prod.definition);\n    } else if (prod instanceof Option) {\n      result = getAlternativesForProd(prod.definition);\n    } else if (prod instanceof RepetitionMandatory) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: prod.definition,\n        }),\n      ]);\n      return getAlternativesForProd(newDef);\n    } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n      const newDef = [\n        new Alternative({ definition: prod.definition }),\n        new Repetition({\n          definition: [new Terminal({ terminalType: prod.separator })].concat(\n            <any>prod.definition,\n          ),\n        }),\n      ];\n      return getAlternativesForProd(newDef);\n    } else if (prod instanceof RepetitionWithSeparator) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: [new Terminal({ terminalType: prod.separator })].concat(\n            <any>prod.definition,\n          ),\n        }),\n      ]);\n      result = getAlternativesForProd(newDef);\n    } else if (prod instanceof Repetition) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: prod.definition,\n        }),\n      ]);\n      result = getAlternativesForProd(newDef);\n    } else if (prod instanceof Alternation) {\n      forEach(prod.definition, (currAlt) => {\n        // TODO: this is a limited check for empty alternatives\n        //   It would prevent a common case of infinite loops during parser initialization.\n        //   However **in-directly** empty alternatives may still cause issues.\n        if (isEmpty(currAlt.definition) === false) {\n          result = getAlternativesForProd(currAlt.definition);\n        }\n      });\n      return result;\n    } else if (prod instanceof Terminal) {\n      currPath.push(prod.terminalType);\n    } else {\n      throw Error(\"non exhaustive match\");\n    }\n\n    i++;\n  }\n  result.push({\n    partialPath: currPath,\n    suffixDef: drop(targetDef, i),\n  });\n\n  return result;\n}\n\ninterface IPathToExamine {\n  idx: number;\n  def: IProduction[];\n  ruleStack: string[];\n  occurrenceStack: number[];\n}\n\nexport function nextPossibleTokensAfter(\n  initialDef: IProduction[],\n  tokenVector: IToken[],\n  tokMatcher: TokenMatcher,\n  maxLookAhead: number,\n): ISyntacticContentAssistPath[] {\n  const EXIT_NON_TERMINAL: any = \"EXIT_NONE_TERMINAL\";\n  // to avoid creating a new Array each time.\n  const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n  const EXIT_ALTERNATIVE: any = \"EXIT_ALTERNATIVE\";\n  let foundCompletePath = false;\n\n  const tokenVectorLength = tokenVector.length;\n  const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n\n  const result: ISyntacticContentAssistPath[] = [];\n\n  const possiblePaths: IPathToExamine[] = [];\n  possiblePaths.push({\n    idx: -1,\n    def: initialDef,\n    ruleStack: [],\n    occurrenceStack: [],\n  });\n\n  while (!isEmpty(possiblePaths)) {\n    const currPath = possiblePaths.pop()!;\n\n    // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n    if (currPath === EXIT_ALTERNATIVE) {\n      if (\n        foundCompletePath &&\n        last(possiblePaths)!.idx <= minimalAlternativesIndex\n      ) {\n        // remove irrelevant alternative\n        possiblePaths.pop();\n      }\n      continue;\n    }\n\n    const currDef = currPath.def;\n    const currIdx = currPath.idx;\n    const currRuleStack = currPath.ruleStack;\n    const currOccurrenceStack = currPath.occurrenceStack;\n\n    // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n    if (isEmpty(currDef)) {\n      continue;\n    }\n\n    const prod = currDef[0];\n    /* istanbul ignore else */\n    if (prod === EXIT_NON_TERMINAL) {\n      const nextPath = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: dropRight(currRuleStack),\n        occurrenceStack: dropRight(currOccurrenceStack),\n      };\n      possiblePaths.push(nextPath);\n    } else if (prod instanceof Terminal) {\n      /* istanbul ignore else */\n      if (currIdx < tokenVectorLength - 1) {\n        const nextIdx = currIdx + 1;\n        const actualToken = tokenVector[nextIdx];\n        if (tokMatcher!(actualToken, prod.terminalType)) {\n          const nextPath = {\n            idx: nextIdx,\n            def: drop(currDef),\n            ruleStack: currRuleStack,\n            occurrenceStack: currOccurrenceStack,\n          };\n          possiblePaths.push(nextPath);\n        }\n        // end of the line\n      } else if (currIdx === tokenVectorLength - 1) {\n        // IGNORE ABOVE ELSE\n        result.push({\n          nextTokenType: prod.terminalType,\n          nextTokenOccurrence: prod.idx,\n          ruleStack: currRuleStack,\n          occurrenceStack: currOccurrenceStack,\n        });\n        foundCompletePath = true;\n      } else {\n        throw Error(\"non exhaustive match\");\n      }\n    } else if (prod instanceof NonTerminal) {\n      const newRuleStack = clone(currRuleStack);\n      newRuleStack.push(prod.nonTerminalName);\n\n      const newOccurrenceStack = clone(currOccurrenceStack);\n      newOccurrenceStack.push(prod.idx);\n\n      const nextPath = {\n        idx: currIdx,\n        def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n        ruleStack: newRuleStack,\n        occurrenceStack: newOccurrenceStack,\n      };\n      possiblePaths.push(nextPath);\n    } else if (prod instanceof Option) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      const nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWithout);\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE);\n\n      const nextPathWith = {\n        idx: currIdx,\n        def: prod.definition.concat(drop(currDef)),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWith);\n    } else if (prod instanceof RepetitionMandatory) {\n      // TODO:(THE NEW operators here take a while...) (convert once?)\n      const secondIteration = new Repetition({\n        definition: prod.definition,\n        idx: prod.idx,\n      });\n      const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n      const nextPath = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPath);\n    } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n      // TODO:(THE NEW operators here take a while...) (convert once?)\n      const separatorGast = new Terminal({\n        terminalType: prod.separator,\n      });\n      const secondIteration = new Repetition({\n        definition: [<any>separatorGast].concat(prod.definition),\n        idx: prod.idx,\n      });\n      const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n      const nextPath = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPath);\n    } else if (prod instanceof RepetitionWithSeparator) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      const nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWithout);\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE);\n\n      const separatorGast = new Terminal({\n        terminalType: prod.separator,\n      });\n      const nthRepetition = new Repetition({\n        definition: [<any>separatorGast].concat(prod.definition),\n        idx: prod.idx,\n      });\n      const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n      const nextPathWith = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWith);\n    } else if (prod instanceof Repetition) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      const nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWithout);\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE);\n\n      // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n      const nthRepetition = new Repetition({\n        definition: prod.definition,\n        idx: prod.idx,\n      });\n      const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n      const nextPathWith = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWith);\n    } else if (prod instanceof Alternation) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      for (let i = prod.definition.length - 1; i >= 0; i--) {\n        const currAlt: any = prod.definition[i];\n        const currAltPath = {\n          idx: currIdx,\n          def: currAlt.definition.concat(drop(currDef)),\n          ruleStack: currRuleStack,\n          occurrenceStack: currOccurrenceStack,\n        };\n        possiblePaths.push(currAltPath);\n        possiblePaths.push(EXIT_ALTERNATIVE);\n      }\n    } else if (prod instanceof Alternative) {\n      possiblePaths.push({\n        idx: currIdx,\n        def: prod.definition.concat(drop(currDef)),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      });\n    } else if (prod instanceof Rule) {\n      // last because we should only encounter at most a single one of these per invocation.\n      possiblePaths.push(\n        expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack),\n      );\n    } else {\n      throw Error(\"non exhaustive match\");\n    }\n  }\n  return result;\n}\n\nfunction expandTopLevelRule(\n  topRule: Rule,\n  currIdx: number,\n  currRuleStack: string[],\n  currOccurrenceStack: number[],\n): IPathToExamine {\n  const newRuleStack = clone(currRuleStack);\n  newRuleStack.push(topRule.name);\n\n  const newCurrOccurrenceStack = clone(currOccurrenceStack);\n  // top rule is always assumed to have been called with occurrence index 1\n  newCurrOccurrenceStack.push(1);\n\n  return {\n    idx: currIdx,\n    def: topRule.definition,\n    ruleStack: newRuleStack,\n    occurrenceStack: newCurrOccurrenceStack,\n  };\n}\n","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Predicate, TokenMatcher } from \"../parser/parser.js\";\nimport {\n  tokenStructuredMatcher,\n  tokenStructuredMatcherNoCategories,\n} from \"../../scan/tokens.js\";\nimport {\n  Alternation,\n  Alternative as AlternativeGAST,\n  GAstVisitor,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n} from \"@chevrotain/gast\";\nimport {\n  BaseParser,\n  IOrAlt,\n  IProduction,\n  IProductionWithOccurrence,\n  LookaheadProductionType,\n  LookaheadSequence,\n  Rule,\n  TokenType,\n} from \"@chevrotain/types\";\n\nexport enum PROD_TYPE {\n  OPTION,\n  REPETITION,\n  REPETITION_MANDATORY,\n  REPETITION_MANDATORY_WITH_SEPARATOR,\n  REPETITION_WITH_SEPARATOR,\n  ALTERNATION,\n}\n\nexport function getProdType(\n  prod: IProduction | LookaheadProductionType,\n): PROD_TYPE {\n  /* istanbul ignore else */\n  if (prod instanceof Option || prod === \"Option\") {\n    return PROD_TYPE.OPTION;\n  } else if (prod instanceof Repetition || prod === \"Repetition\") {\n    return PROD_TYPE.REPETITION;\n  } else if (\n    prod instanceof RepetitionMandatory ||\n    prod === \"RepetitionMandatory\"\n  ) {\n    return PROD_TYPE.REPETITION_MANDATORY;\n  } else if (\n    prod instanceof RepetitionMandatoryWithSeparator ||\n    prod === \"RepetitionMandatoryWithSeparator\"\n  ) {\n    return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n  } else if (\n    prod instanceof RepetitionWithSeparator ||\n    prod === \"RepetitionWithSeparator\"\n  ) {\n    return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n  } else if (prod instanceof Alternation || prod === \"Alternation\") {\n    return PROD_TYPE.ALTERNATION;\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nexport function getLookaheadPaths(options: {\n  occurrence: number;\n  rule: Rule;\n  prodType: LookaheadProductionType;\n  maxLookahead: number;\n}): LookaheadSequence[] {\n  const { occurrence, rule, prodType, maxLookahead } = options;\n  const type = getProdType(prodType);\n  if (type === PROD_TYPE.ALTERNATION) {\n    return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n  } else {\n    return getLookaheadPathsForOptionalProd(\n      occurrence,\n      rule,\n      type,\n      maxLookahead,\n    );\n  }\n}\n\nexport function buildLookaheadFuncForOr(\n  occurrence: number,\n  ruleGrammar: Rule,\n  maxLookahead: number,\n  hasPredicates: boolean,\n  dynamicTokensEnabled: boolean,\n  laFuncBuilder: Function,\n): (orAlts?: IOrAlt<any>[]) => number | undefined {\n  const lookAheadPaths = getLookaheadPathsForOr(\n    occurrence,\n    ruleGrammar,\n    maxLookahead,\n  );\n\n  const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n    ? tokenStructuredMatcherNoCategories\n    : tokenStructuredMatcher;\n\n  return laFuncBuilder(\n    lookAheadPaths,\n    hasPredicates,\n    tokenMatcher,\n    dynamicTokensEnabled,\n  );\n}\n\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(\n  occurrence: number,\n  ruleGrammar: Rule,\n  k: number,\n  dynamicTokensEnabled: boolean,\n  prodType: PROD_TYPE,\n  lookaheadBuilder: (\n    lookAheadSequence: LookaheadSequence,\n    tokenMatcher: TokenMatcher,\n    dynamicTokensEnabled: boolean,\n  ) => () => boolean,\n): () => boolean {\n  const lookAheadPaths = getLookaheadPathsForOptionalProd(\n    occurrence,\n    ruleGrammar,\n    prodType,\n    k,\n  );\n\n  const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n    ? tokenStructuredMatcherNoCategories\n    : tokenStructuredMatcher;\n\n  return lookaheadBuilder(\n    lookAheadPaths[0],\n    tokenMatcher,\n    dynamicTokensEnabled,\n  );\n}\n\nexport type Alternative = TokenType[][];\n\nexport function buildAlternativesLookAheadFunc(\n  alts: LookaheadSequence[],\n  hasPredicates: boolean,\n  tokenMatcher: TokenMatcher,\n  dynamicTokensEnabled: boolean,\n): (orAlts: IOrAlt<any>[]) => number | undefined {\n  const numOfAlts = alts.length;\n  const areAllOneTokenLookahead = every(alts, (currAlt) => {\n    return every(currAlt, (currPath) => {\n      return currPath.length === 1;\n    });\n  });\n\n  // This version takes into account the predicates as well.\n  if (hasPredicates) {\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (\n      this: BaseParser,\n      orAlts: IOrAlt<any>[],\n    ): number | undefined {\n      // unfortunately the predicates must be extracted every single time\n      // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n      // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n      const predicates: (Predicate | undefined)[] = map(\n        orAlts,\n        (currAlt) => currAlt.GATE,\n      );\n\n      for (let t = 0; t < numOfAlts; t++) {\n        const currAlt = alts[t];\n        const currNumOfPaths = currAlt.length;\n\n        const currPredicate = predicates[t];\n        if (currPredicate !== undefined && currPredicate.call(this) === false) {\n          // if the predicate does not match there is no point in checking the paths\n          continue;\n        }\n        nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n          const currPath = currAlt[j];\n          const currPathLength = currPath.length;\n          for (let i = 0; i < currPathLength; i++) {\n            const nextToken = this.LA(i + 1);\n            if (tokenMatcher(nextToken, currPath[i]) === false) {\n              // mismatch in current path\n              // try the next pth\n              continue nextPath;\n            }\n          }\n          // found a full path that matches.\n          // this will also work for an empty ALT as the loop will be skipped\n          return t;\n        }\n        // none of the paths for the current alternative matched\n        // try the next alternative\n      }\n      // none of the alternatives could be matched\n      return undefined;\n    };\n  } else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n    const singleTokenAlts = map(alts, (currAlt) => {\n      return flatten(currAlt);\n    });\n\n    const choiceToAlt = reduce(\n      singleTokenAlts,\n      (result, currAlt, idx) => {\n        forEach(currAlt, (currTokType) => {\n          if (!has(result, currTokType.tokenTypeIdx!)) {\n            result[currTokType.tokenTypeIdx!] = idx;\n          }\n          forEach(currTokType.categoryMatches!, (currExtendingType) => {\n            if (!has(result, currExtendingType)) {\n              result[currExtendingType] = idx;\n            }\n          });\n        });\n        return result;\n      },\n      {} as Record<number, number>,\n    );\n\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (this: BaseParser): number {\n      const nextToken = this.LA(1);\n      return choiceToAlt[nextToken.tokenTypeIdx];\n    };\n  } else {\n    // optimized lookahead without needing to check the predicates at all.\n    // this causes code duplication which is intentional to improve performance.\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (this: BaseParser): number | undefined {\n      for (let t = 0; t < numOfAlts; t++) {\n        const currAlt = alts[t];\n        const currNumOfPaths = currAlt.length;\n        nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n          const currPath = currAlt[j];\n          const currPathLength = currPath.length;\n          for (let i = 0; i < currPathLength; i++) {\n            const nextToken = this.LA(i + 1);\n            if (tokenMatcher(nextToken, currPath[i]) === false) {\n              // mismatch in current path\n              // try the next pth\n              continue nextPath;\n            }\n          }\n          // found a full path that matches.\n          // this will also work for an empty ALT as the loop will be skipped\n          return t;\n        }\n        // none of the paths for the current alternative matched\n        // try the next alternative\n      }\n      // none of the alternatives could be matched\n      return undefined;\n    };\n  }\n}\n\nexport function buildSingleAlternativeLookaheadFunction(\n  alt: LookaheadSequence,\n  tokenMatcher: TokenMatcher,\n  dynamicTokensEnabled: boolean,\n): () => boolean {\n  const areAllOneTokenLookahead = every(alt, (currPath) => {\n    return currPath.length === 1;\n  });\n\n  const numOfPaths = alt.length;\n\n  // optimized (common) case of all the lookaheads paths requiring only\n  // a single token lookahead.\n  if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n    const singleTokensTypes = flatten(alt);\n\n    if (\n      singleTokensTypes.length === 1 &&\n      isEmpty((<any>singleTokensTypes[0]).categoryMatches)\n    ) {\n      const expectedTokenType = singleTokensTypes[0];\n      const expectedTokenUniqueKey = (<any>expectedTokenType).tokenTypeIdx;\n\n      return function (this: BaseParser): boolean {\n        return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n      };\n    } else {\n      const choiceToAlt = reduce(\n        singleTokensTypes,\n        (result, currTokType, idx) => {\n          result[currTokType.tokenTypeIdx!] = true;\n          forEach(currTokType.categoryMatches!, (currExtendingType) => {\n            result[currExtendingType] = true;\n          });\n          return result;\n        },\n        [] as boolean[],\n      );\n\n      return function (this: BaseParser): boolean {\n        const nextToken = this.LA(1);\n        return choiceToAlt[nextToken.tokenTypeIdx] === true;\n      };\n    }\n  } else {\n    return function (this: BaseParser): boolean {\n      nextPath: for (let j = 0; j < numOfPaths; j++) {\n        const currPath = alt[j];\n        const currPathLength = currPath.length;\n        for (let i = 0; i < currPathLength; i++) {\n          const nextToken = this.LA(i + 1);\n          if (tokenMatcher(nextToken, currPath[i]) === false) {\n            // mismatch in current path\n            // try the next pth\n            continue nextPath;\n          }\n        }\n        // found a full path that matches.\n        return true;\n      }\n\n      // none of the paths matched\n      return false;\n    };\n  }\n}\n\nclass RestDefinitionFinderWalker extends RestWalker {\n  private restDef: IProduction[];\n\n  constructor(\n    private topProd: Rule,\n    private targetOccurrence: number,\n    private targetProdType: PROD_TYPE,\n  ) {\n    super();\n  }\n\n  startWalking(): IProduction[] {\n    this.walk(this.topProd);\n    return this.restDef;\n  }\n\n  private checkIsTarget(\n    node: IProductionWithOccurrence,\n    expectedProdType: PROD_TYPE,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): boolean {\n    if (\n      node.idx === this.targetOccurrence &&\n      this.targetProdType === expectedProdType\n    ) {\n      this.restDef = currRest.concat(prevRest);\n      return true;\n    }\n    // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n    return false;\n  }\n\n  walkOption(\n    optionProd: Option,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n      super.walkOption(optionProd, currRest, prevRest);\n    }\n  }\n\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (\n      !this.checkIsTarget(\n        atLeastOneProd,\n        PROD_TYPE.REPETITION_MANDATORY,\n        currRest,\n        prevRest,\n      )\n    ) {\n      super.walkOption(atLeastOneProd, currRest, prevRest);\n    }\n  }\n\n  walkAtLeastOneSep(\n    atLeastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (\n      !this.checkIsTarget(\n        atLeastOneSepProd,\n        PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,\n        currRest,\n        prevRest,\n      )\n    ) {\n      super.walkOption(atLeastOneSepProd, currRest, prevRest);\n    }\n  }\n\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (\n      !this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)\n    ) {\n      super.walkOption(manyProd, currRest, prevRest);\n    }\n  }\n\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (\n      !this.checkIsTarget(\n        manySepProd,\n        PROD_TYPE.REPETITION_WITH_SEPARATOR,\n        currRest,\n        prevRest,\n      )\n    ) {\n      super.walkOption(manySepProd, currRest, prevRest);\n    }\n  }\n}\n\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n  public result: IProduction[] = [];\n\n  constructor(\n    private targetOccurrence: number,\n    private targetProdType: PROD_TYPE,\n    private targetRef?: any,\n  ) {\n    super();\n  }\n\n  private checkIsTarget(\n    node: { definition: IProduction[] } & IProductionWithOccurrence,\n    expectedProdName: PROD_TYPE,\n  ): void {\n    if (\n      node.idx === this.targetOccurrence &&\n      this.targetProdType === expectedProdName &&\n      (this.targetRef === undefined || node === this.targetRef)\n    ) {\n      this.result = node.definition;\n    }\n  }\n\n  public visitOption(node: Option): void {\n    this.checkIsTarget(node, PROD_TYPE.OPTION);\n  }\n\n  public visitRepetition(node: Repetition): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION);\n  }\n\n  public visitRepetitionMandatory(node: RepetitionMandatory): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    node: RepetitionMandatoryWithSeparator,\n  ): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n  }\n\n  public visitRepetitionWithSeparator(node: RepetitionWithSeparator): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n  }\n\n  public visitAlternation(node: Alternation): void {\n    this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n  }\n}\n\nfunction initializeArrayOfArrays(size: number): any[][] {\n  const result = new Array(size);\n  for (let i = 0; i < size; i++) {\n    result[i] = [];\n  }\n  return result;\n}\n\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path: TokenType[]): string[] {\n  let keys = [\"\"];\n  for (let i = 0; i < path.length; i++) {\n    const tokType = path[i];\n    const longerKeys = [];\n    for (let j = 0; j < keys.length; j++) {\n      const currShorterKey = keys[j];\n      longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n      for (let t = 0; t < tokType.categoryMatches!.length; t++) {\n        const categoriesKeySuffix = \"_\" + tokType.categoryMatches![t];\n        longerKeys.push(currShorterKey + categoriesKeySuffix);\n      }\n    }\n    keys = longerKeys;\n  }\n  return keys;\n}\n\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(\n  altKnownPathsKeys: Record<string, boolean>[],\n  searchPathKeys: string[],\n  idx: number,\n): boolean {\n  for (\n    let currAltIdx = 0;\n    currAltIdx < altKnownPathsKeys.length;\n    currAltIdx++\n  ) {\n    // We only want to test vs the other alternatives\n    if (currAltIdx === idx) {\n      continue;\n    }\n    const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n    for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n      const searchKey = searchPathKeys[searchIdx];\n      if (otherAltKnownPathsKeys[searchKey] === true) {\n        return false;\n      }\n    }\n  }\n  // None of the SearchPathKeys were found in any of the other alternatives\n  return true;\n}\n\nexport function lookAheadSequenceFromAlternatives(\n  altsDefs: IProduction[],\n  k: number,\n): LookaheadSequence[] {\n  const partialAlts = map(altsDefs, (currAlt) =>\n    possiblePathsFrom([currAlt], 1),\n  );\n  const finalResult = initializeArrayOfArrays(partialAlts.length);\n  const altsHashes = map(partialAlts, (currAltPaths) => {\n    const dict: { [key: string]: boolean } = {};\n    forEach(currAltPaths, (item) => {\n      const keys = pathToHashKeys(item.partialPath);\n      forEach(keys, (currKey) => {\n        dict[currKey] = true;\n      });\n    });\n    return dict;\n  });\n  let newData = partialAlts;\n\n  // maxLookahead loop\n  for (let pathLength = 1; pathLength <= k; pathLength++) {\n    const currDataset = newData;\n    newData = initializeArrayOfArrays(currDataset.length);\n\n    // alternatives loop\n    for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n      const currAltPathsAndSuffixes = currDataset[altIdx];\n      // paths in current alternative loop\n      for (\n        let currPathIdx = 0;\n        currPathIdx < currAltPathsAndSuffixes.length;\n        currPathIdx++\n      ) {\n        const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n        const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n        const prefixKeys = pathToHashKeys(currPathPrefix);\n        const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n        // End of the line for this path.\n        if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n          const currAltResult = finalResult[altIdx];\n          // TODO: Can we implement a containsPath using Maps/Dictionaries?\n          if (containsPath(currAltResult, currPathPrefix) === false) {\n            currAltResult.push(currPathPrefix);\n            // Update all new  keys for the current path.\n            for (let j = 0; j < prefixKeys.length; j++) {\n              const currKey = prefixKeys[j];\n              altsHashes[altIdx][currKey] = true;\n            }\n          }\n        }\n        // Expand longer paths\n        else {\n          const newPartialPathsAndSuffixes = possiblePathsFrom(\n            suffixDef,\n            pathLength + 1,\n            currPathPrefix,\n          );\n          newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n\n          // Update keys for new known paths\n          forEach(newPartialPathsAndSuffixes, (item) => {\n            const prefixKeys = pathToHashKeys(item.partialPath);\n            forEach(prefixKeys, (key) => {\n              altsHashes[altIdx][key] = true;\n            });\n          });\n        }\n      }\n    }\n  }\n\n  return finalResult;\n}\n\nexport function getLookaheadPathsForOr(\n  occurrence: number,\n  ruleGrammar: Rule,\n  k: number,\n  orProd?: Alternation,\n): LookaheadSequence[] {\n  const visitor = new InsideDefinitionFinderVisitor(\n    occurrence,\n    PROD_TYPE.ALTERNATION,\n    orProd,\n  );\n  ruleGrammar.accept(visitor);\n  return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\n\nexport function getLookaheadPathsForOptionalProd(\n  occurrence: number,\n  ruleGrammar: Rule,\n  prodType: PROD_TYPE,\n  k: number,\n): LookaheadSequence[] {\n  const insideDefVisitor = new InsideDefinitionFinderVisitor(\n    occurrence,\n    prodType,\n  );\n  ruleGrammar.accept(insideDefVisitor);\n  const insideDef = insideDefVisitor.result;\n\n  const afterDefWalker = new RestDefinitionFinderWalker(\n    ruleGrammar,\n    occurrence,\n    prodType,\n  );\n  const afterDef = afterDefWalker.startWalking();\n\n  const insideFlat = new AlternativeGAST({ definition: insideDef });\n  const afterFlat = new AlternativeGAST({ definition: afterDef });\n\n  return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\n\nexport function containsPath(\n  alternative: Alternative,\n  searchPath: TokenType[],\n): boolean {\n  compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n    const otherPath = alternative[i];\n    if (otherPath.length !== searchPath.length) {\n      continue;\n    }\n    for (let j = 0; j < otherPath.length; j++) {\n      const searchTok = searchPath[j];\n      const otherTok = otherPath[j];\n\n      const matchingTokens =\n        searchTok === otherTok ||\n        otherTok.categoryMatchesMap![searchTok.tokenTypeIdx!] !== undefined;\n      if (matchingTokens === false) {\n        continue compareOtherPath;\n      }\n    }\n    return true;\n  }\n\n  return false;\n}\n\nexport function isStrictPrefixOfPath(\n  prefix: TokenType[],\n  other: TokenType[],\n): boolean {\n  return (\n    prefix.length < other.length &&\n    every(prefix, (tokType, idx) => {\n      const otherTokType = other[idx];\n      return (\n        tokType === otherTokType ||\n        otherTokType.categoryMatchesMap![tokType.tokenTypeIdx!]\n      );\n    })\n  );\n}\n\nexport function areTokenCategoriesNotUsed(\n  lookAheadPaths: LookaheadSequence[],\n): boolean {\n  return every(lookAheadPaths, (singleAltPaths) =>\n    every(singleAltPaths, (singlePath) =>\n      every(singlePath, (token) => isEmpty(token.categoryMatches!)),\n    ),\n  );\n}\n","import {\n  clone,\n  compact,\n  difference,\n  drop,\n  dropRight,\n  filter,\n  first,\n  flatMap,\n  flatten,\n  forEach,\n  groupBy,\n  includes,\n  isEmpty,\n  map,\n  pickBy,\n  reduce,\n  reject,\n  values,\n} from \"lodash-es\";\nimport {\n  IParserAmbiguousAlternativesDefinitionError,\n  IParserDuplicatesDefinitionError,\n  IParserEmptyAlternativeDefinitionError,\n  ParserDefinitionErrorType,\n} from \"../parser/parser.js\";\nimport {\n  Alternation,\n  Alternative as AlternativeGAST,\n  GAstVisitor,\n  getProductionDslName,\n  isOptionalProd,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport {\n  Alternative,\n  containsPath,\n  getLookaheadPathsForOptionalProd,\n  getLookaheadPathsForOr,\n  getProdType,\n  isStrictPrefixOfPath,\n} from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport {\n  ILookaheadStrategy,\n  IProduction,\n  IProductionWithOccurrence,\n  Rule,\n  TokenType,\n} from \"@chevrotain/types\";\nimport {\n  IGrammarValidatorErrorMessageProvider,\n  IParserDefinitionError,\n} from \"./types.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\n\nexport function validateLookahead(options: {\n  lookaheadStrategy: ILookaheadStrategy;\n  rules: Rule[];\n  tokenTypes: TokenType[];\n  grammarName: string;\n}): IParserDefinitionError[] {\n  const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n    rules: options.rules,\n    tokenTypes: options.tokenTypes,\n    grammarName: options.grammarName,\n  });\n  return map(lookaheadValidationErrorMessages, (errorMessage) => ({\n    type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION,\n    ...errorMessage,\n  }));\n}\n\nexport function validateGrammar(\n  topLevels: Rule[],\n  tokenTypes: TokenType[],\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n  grammarName: string,\n): IParserDefinitionError[] {\n  const duplicateErrors: IParserDefinitionError[] = flatMap(\n    topLevels,\n    (currTopLevel) =>\n      validateDuplicateProductions(currTopLevel, errMsgProvider),\n  );\n\n  const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(\n    topLevels,\n    tokenTypes,\n    errMsgProvider,\n  );\n\n  const tooManyAltsErrors = flatMap(topLevels, (curRule) =>\n    validateTooManyAlts(curRule, errMsgProvider),\n  );\n\n  const duplicateRulesError = flatMap(topLevels, (curRule) =>\n    validateRuleDoesNotAlreadyExist(\n      curRule,\n      topLevels,\n      grammarName,\n      errMsgProvider,\n    ),\n  );\n\n  return duplicateErrors.concat(\n    termsNamespaceConflictErrors,\n    tooManyAltsErrors,\n    duplicateRulesError,\n  );\n}\n\nfunction validateDuplicateProductions(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserDuplicatesDefinitionError[] {\n  const collectorVisitor = new OccurrenceValidationCollector();\n  topLevelRule.accept(collectorVisitor);\n  const allRuleProductions = collectorVisitor.allProductions;\n\n  const productionGroups = groupBy(\n    allRuleProductions,\n    identifyProductionForDuplicates,\n  );\n\n  const duplicates: any = pickBy(productionGroups, (currGroup) => {\n    return currGroup.length > 1;\n  });\n\n  const errors = map(values(duplicates), (currDuplicates: any) => {\n    const firstProd: any = first(currDuplicates);\n    const msg = errMsgProvider.buildDuplicateFoundError(\n      topLevelRule,\n      currDuplicates,\n    );\n    const dslName = getProductionDslName(firstProd);\n    const defError: IParserDuplicatesDefinitionError = {\n      message: msg,\n      type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n      ruleName: topLevelRule.name,\n      dslName: dslName,\n      occurrence: firstProd.idx,\n    };\n\n    const param = getExtraProductionArgument(firstProd);\n    if (param) {\n      defError.parameter = param;\n    }\n\n    return defError;\n  });\n  return errors;\n}\n\nexport function identifyProductionForDuplicates(\n  prod: IProductionWithOccurrence,\n): string {\n  return `${getProductionDslName(prod)}_#_${\n    prod.idx\n  }_#_${getExtraProductionArgument(prod)}`;\n}\n\nfunction getExtraProductionArgument(prod: IProductionWithOccurrence): string {\n  if (prod instanceof Terminal) {\n    return prod.terminalType.name;\n  } else if (prod instanceof NonTerminal) {\n    return prod.nonTerminalName;\n  } else {\n    return \"\";\n  }\n}\n\nexport class OccurrenceValidationCollector extends GAstVisitor {\n  public allProductions: IProductionWithOccurrence[] = [];\n\n  public visitNonTerminal(subrule: NonTerminal): void {\n    this.allProductions.push(subrule);\n  }\n\n  public visitOption(option: Option): void {\n    this.allProductions.push(option);\n  }\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.allProductions.push(manySep);\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.allProductions.push(atLeastOne);\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator,\n  ): void {\n    this.allProductions.push(atLeastOneSep);\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.allProductions.push(many);\n  }\n\n  public visitAlternation(or: Alternation): void {\n    this.allProductions.push(or);\n  }\n\n  public visitTerminal(terminal: Terminal): void {\n    this.allProductions.push(terminal);\n  }\n}\n\nexport function validateRuleDoesNotAlreadyExist(\n  rule: Rule,\n  allRules: Rule[],\n  className: string,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserDefinitionError[] {\n  const errors = [];\n  const occurrences = reduce(\n    allRules,\n    (result, curRule) => {\n      if (curRule.name === rule.name) {\n        return result + 1;\n      }\n      return result;\n    },\n    0,\n  );\n  if (occurrences > 1) {\n    const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n      topLevelRule: rule,\n      grammarName: className,\n    });\n    errors.push({\n      message: errMsg,\n      type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n      ruleName: rule.name,\n    });\n  }\n\n  return errors;\n}\n\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(\n  ruleName: string,\n  definedRulesNames: string[],\n  className: string,\n): IParserDefinitionError[] {\n  const errors = [];\n  let errMsg;\n\n  if (!includes(definedRulesNames, ruleName)) {\n    errMsg =\n      `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n      `as it is not defined in any of the super grammars `;\n    errors.push({\n      message: errMsg,\n      type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n      ruleName: ruleName,\n    });\n  }\n\n  return errors;\n}\n\nexport function validateNoLeftRecursion(\n  topRule: Rule,\n  currRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n  path: Rule[] = [],\n): IParserDefinitionError[] {\n  const errors: IParserDefinitionError[] = [];\n  const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n  if (isEmpty(nextNonTerminals)) {\n    return [];\n  } else {\n    const ruleName = topRule.name;\n    const foundLeftRecursion = includes(nextNonTerminals, topRule);\n    if (foundLeftRecursion) {\n      errors.push({\n        message: errMsgProvider.buildLeftRecursionError({\n          topLevelRule: topRule,\n          leftRecursionPath: path,\n        }),\n        type: ParserDefinitionErrorType.LEFT_RECURSION,\n        ruleName: ruleName,\n      });\n    }\n\n    // we are only looking for cyclic paths leading back to the specific topRule\n    // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n    const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n    const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n      const newPath = clone(path);\n      newPath.push(currRefRule);\n      return validateNoLeftRecursion(\n        topRule,\n        currRefRule,\n        errMsgProvider,\n        newPath,\n      );\n    });\n\n    return errors.concat(errorsFromNextSteps);\n  }\n}\n\nexport function getFirstNoneTerminal(definition: IProduction[]): Rule[] {\n  let result: Rule[] = [];\n  if (isEmpty(definition)) {\n    return result;\n  }\n  const firstProd = first(definition);\n\n  /* istanbul ignore else */\n  if (firstProd instanceof NonTerminal) {\n    result.push(firstProd.referencedRule);\n  } else if (\n    firstProd instanceof AlternativeGAST ||\n    firstProd instanceof Option ||\n    firstProd instanceof RepetitionMandatory ||\n    firstProd instanceof RepetitionMandatoryWithSeparator ||\n    firstProd instanceof RepetitionWithSeparator ||\n    firstProd instanceof Repetition\n  ) {\n    result = result.concat(\n      getFirstNoneTerminal(<IProduction[]>firstProd.definition),\n    );\n  } else if (firstProd instanceof Alternation) {\n    // each sub definition in alternation is a FLAT\n    result = flatten(\n      map(firstProd.definition, (currSubDef) =>\n        getFirstNoneTerminal((<AlternativeGAST>currSubDef).definition),\n      ),\n    );\n  } else if (firstProd instanceof Terminal) {\n    // nothing to see, move along\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n\n  const isFirstOptional = isOptionalProd(firstProd);\n  const hasMore = definition.length > 1;\n  if (isFirstOptional && hasMore) {\n    const rest = drop(definition);\n    return result.concat(getFirstNoneTerminal(rest));\n  } else {\n    return result;\n  }\n}\n\nclass OrCollector extends GAstVisitor {\n  public alternations: Alternation[] = [];\n\n  public visitAlternation(node: Alternation): void {\n    this.alternations.push(node);\n  }\n}\n\nexport function validateEmptyOrAlternative(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserEmptyAlternativeDefinitionError[] {\n  const orCollector = new OrCollector();\n  topLevelRule.accept(orCollector);\n  const ors = orCollector.alternations;\n\n  const errors = flatMap<Alternation, IParserEmptyAlternativeDefinitionError>(\n    ors,\n    (currOr) => {\n      const exceptLast = dropRight(currOr.definition);\n      return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n        const possibleFirstInAlt = nextPossibleTokensAfter(\n          [currAlternative],\n          [],\n          tokenStructuredMatcher,\n          1,\n        );\n        if (isEmpty(possibleFirstInAlt)) {\n          return [\n            {\n              message: errMsgProvider.buildEmptyAlternationError({\n                topLevelRule: topLevelRule,\n                alternation: currOr,\n                emptyChoiceIdx: currAltIdx,\n              }),\n              type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n              ruleName: topLevelRule.name,\n              occurrence: currOr.idx,\n              alternative: currAltIdx + 1,\n            },\n          ];\n        } else {\n          return [];\n        }\n      });\n    },\n  );\n\n  return errors;\n}\n\nexport function validateAmbiguousAlternationAlternatives(\n  topLevelRule: Rule,\n  globalMaxLookahead: number,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserAmbiguousAlternativesDefinitionError[] {\n  const orCollector = new OrCollector();\n  topLevelRule.accept(orCollector);\n  let ors = orCollector.alternations;\n\n  // New Handling of ignoring ambiguities\n  // - https://github.com/chevrotain/chevrotain/issues/869\n  ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n\n  const errors = flatMap(ors, (currOr: Alternation) => {\n    const currOccurrence = currOr.idx;\n    const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n    const alternatives = getLookaheadPathsForOr(\n      currOccurrence,\n      topLevelRule,\n      actualMaxLookahead,\n      currOr,\n    );\n    const altsAmbiguityErrors = checkAlternativesAmbiguities(\n      alternatives,\n      currOr,\n      topLevelRule,\n      errMsgProvider,\n    );\n    const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(\n      alternatives,\n      currOr,\n      topLevelRule,\n      errMsgProvider,\n    );\n\n    return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n  });\n\n  return errors;\n}\n\nexport class RepetitionCollector extends GAstVisitor {\n  public allProductions: (IProductionWithOccurrence & {\n    maxLookahead?: number;\n  })[] = [];\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.allProductions.push(manySep);\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.allProductions.push(atLeastOne);\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator,\n  ): void {\n    this.allProductions.push(atLeastOneSep);\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.allProductions.push(many);\n  }\n}\n\nexport function validateTooManyAlts(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserDefinitionError[] {\n  const orCollector = new OrCollector();\n  topLevelRule.accept(orCollector);\n  const ors = orCollector.alternations;\n\n  const errors = flatMap(ors, (currOr) => {\n    if (currOr.definition.length > 255) {\n      return [\n        {\n          message: errMsgProvider.buildTooManyAlternativesError({\n            topLevelRule: topLevelRule,\n            alternation: currOr,\n          }),\n          type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n          ruleName: topLevelRule.name,\n          occurrence: currOr.idx,\n        },\n      ];\n    } else {\n      return [];\n    }\n  });\n\n  return errors;\n}\n\nexport function validateSomeNonEmptyLookaheadPath(\n  topLevelRules: Rule[],\n  maxLookahead: number,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserDefinitionError[] {\n  const errors: IParserDefinitionError[] = [];\n  forEach(topLevelRules, (currTopRule) => {\n    const collectorVisitor = new RepetitionCollector();\n    currTopRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    forEach(allRuleProductions, (currProd) => {\n      const prodType = getProdType(currProd);\n      const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n      const currOccurrence = currProd.idx;\n      const paths = getLookaheadPathsForOptionalProd(\n        currOccurrence,\n        currTopRule,\n        prodType,\n        actualMaxLookahead,\n      );\n      const pathsInsideProduction = paths[0];\n      if (isEmpty(flatten(pathsInsideProduction))) {\n        const errMsg = errMsgProvider.buildEmptyRepetitionError({\n          topLevelRule: currTopRule,\n          repetition: currProd,\n        });\n        errors.push({\n          message: errMsg,\n          type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n          ruleName: currTopRule.name,\n        });\n      }\n    });\n  });\n\n  return errors;\n}\n\nexport interface IAmbiguityDescriptor {\n  alts: number[];\n  path: TokenType[];\n}\n\nfunction checkAlternativesAmbiguities(\n  alternatives: Alternative[],\n  alternation: Alternation,\n  rule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserAmbiguousAlternativesDefinitionError[] {\n  const foundAmbiguousPaths: Alternative = [];\n  const identicalAmbiguities = reduce(\n    alternatives,\n    (result, currAlt, currAltIdx) => {\n      // ignore (skip) ambiguities with this alternative\n      if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n        return result;\n      }\n\n      forEach(currAlt, (currPath) => {\n        const altsCurrPathAppearsIn = [currAltIdx];\n        forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n          if (\n            currAltIdx !== currOtherAltIdx &&\n            containsPath(currOtherAlt, currPath) &&\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true\n          ) {\n            altsCurrPathAppearsIn.push(currOtherAltIdx);\n          }\n        });\n\n        if (\n          altsCurrPathAppearsIn.length > 1 &&\n          !containsPath(foundAmbiguousPaths, currPath)\n        ) {\n          foundAmbiguousPaths.push(currPath);\n          result.push({\n            alts: altsCurrPathAppearsIn,\n            path: currPath,\n          });\n        }\n      });\n      return result;\n    },\n    [] as { alts: number[]; path: TokenType[] }[],\n  );\n\n  const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n    const ambgIndices = map(\n      currAmbDescriptor.alts,\n      (currAltIdx) => currAltIdx + 1,\n    );\n\n    const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n      topLevelRule: rule,\n      alternation: alternation,\n      ambiguityIndices: ambgIndices,\n      prefixPath: currAmbDescriptor.path,\n    });\n\n    return {\n      message: currMessage,\n      type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n      ruleName: rule.name,\n      occurrence: alternation.idx,\n      alternatives: currAmbDescriptor.alts,\n    };\n  });\n\n  return currErrors;\n}\n\nexport function checkPrefixAlternativesAmbiguities(\n  alternatives: Alternative[],\n  alternation: Alternation,\n  rule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserAmbiguousAlternativesDefinitionError[] {\n  // flatten\n  const pathsAndIndices = reduce(\n    alternatives,\n    (result, currAlt, idx) => {\n      const currPathsAndIdx = map(currAlt, (currPath) => {\n        return { idx: idx, path: currPath };\n      });\n      return result.concat(currPathsAndIdx);\n    },\n    [] as { idx: number; path: TokenType[] }[],\n  );\n\n  const errors = compact(\n    flatMap(pathsAndIndices, (currPathAndIdx) => {\n      const alternativeGast = alternation.definition[currPathAndIdx.idx];\n      // ignore (skip) ambiguities with this alternative\n      if (alternativeGast.ignoreAmbiguities === true) {\n        return [];\n      }\n      const targetIdx = currPathAndIdx.idx;\n      const targetPath = currPathAndIdx.path;\n\n      const prefixAmbiguitiesPathsAndIndices = filter(\n        pathsAndIndices,\n        (searchPathAndIdx) => {\n          // prefix ambiguity can only be created from lower idx (higher priority) path\n          return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n              true &&\n            searchPathAndIdx.idx < targetIdx &&\n            // checking for strict prefix because identical lookaheads\n            // will be be detected using a different validation.\n            isStrictPrefixOfPath(searchPathAndIdx.path, targetPath)\n          );\n        },\n      );\n\n      const currPathPrefixErrors = map(\n        prefixAmbiguitiesPathsAndIndices,\n        (currAmbPathAndIdx): IParserAmbiguousAlternativesDefinitionError => {\n          const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n          const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n\n          const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbPathAndIdx.path,\n          });\n          return {\n            message: message,\n            type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n            ruleName: rule.name,\n            occurrence: occurrence,\n            alternatives: ambgIndices,\n          };\n        },\n      );\n\n      return currPathPrefixErrors;\n    }),\n  );\n\n  return errors;\n}\n\nfunction checkTerminalAndNoneTerminalsNameSpace(\n  topLevels: Rule[],\n  tokenTypes: TokenType[],\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserDefinitionError[] {\n  const errors: IParserDefinitionError[] = [];\n\n  const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n\n  forEach(topLevels, (currRule) => {\n    const currRuleName = currRule.name;\n    if (includes(tokenNames, currRuleName)) {\n      const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n\n      errors.push({\n        message: errMsg,\n        type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n        ruleName: currRuleName,\n      });\n    }\n  });\n\n  return errors;\n}\n","import { Rule } from \"@chevrotain/gast\";\nimport { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport {\n  defaultGrammarResolverErrorProvider,\n  defaultGrammarValidatorErrorProvider,\n} from \"../../errors_public.js\";\nimport { TokenType } from \"@chevrotain/types\";\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IGrammarValidatorErrorMessageProvider,\n  IParserDefinitionError,\n} from \"../types.js\";\n\ntype ResolveGrammarOpts = {\n  rules: Rule[];\n  errMsgProvider?: IGrammarResolverErrorMessageProvider;\n};\nexport function resolveGrammar(\n  options: ResolveGrammarOpts,\n): IParserDefinitionError[] {\n  const actualOptions: Required<ResolveGrammarOpts> = defaults(options, {\n    errMsgProvider: defaultGrammarResolverErrorProvider,\n  });\n\n  const topRulesTable: { [ruleName: string]: Rule } = {};\n  forEach(options.rules, (rule) => {\n    topRulesTable[rule.name] = rule;\n  });\n  return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\n\nexport function validateGrammar(options: {\n  rules: Rule[];\n  tokenTypes: TokenType[];\n  grammarName: string;\n  errMsgProvider: IGrammarValidatorErrorMessageProvider;\n}): IParserDefinitionError[] {\n  options = defaults(options, {\n    errMsgProvider: defaultGrammarValidatorErrorProvider,\n  });\n\n  return orgValidateGrammar(\n    options.rules,\n    options.tokenTypes,\n    options.errMsgProvider,\n    options.grammarName,\n  );\n}\n","import { includes } from \"lodash-es\";\nimport {\n  IRecognitionException,\n  IRecognizerContext,\n  IToken,\n} from \"@chevrotain/types\";\n\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\n\nconst RECOGNITION_EXCEPTION_NAMES = [\n  MISMATCHED_TOKEN_EXCEPTION,\n  NO_VIABLE_ALT_EXCEPTION,\n  EARLY_EXIT_EXCEPTION,\n  NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\n\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error: Error) {\n  // can't do instanceof on hacked custom js exceptions\n  return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\n\nabstract class RecognitionException\n  extends Error\n  implements IRecognitionException\n{\n  context: IRecognizerContext;\n  resyncedTokens: IToken[] = [];\n\n  protected constructor(\n    message: string,\n    public token: IToken,\n  ) {\n    super(message);\n\n    // fix prototype chain when typescript target is ES5\n    Object.setPrototypeOf(this, new.target.prototype);\n\n    /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\n\nexport class MismatchedTokenException extends RecognitionException {\n  constructor(\n    message: string,\n    token: IToken,\n    public previousToken: IToken,\n  ) {\n    super(message, token);\n    this.name = MISMATCHED_TOKEN_EXCEPTION;\n  }\n}\n\nexport class NoViableAltException extends RecognitionException {\n  constructor(\n    message: string,\n    token: IToken,\n    public previousToken: IToken,\n  ) {\n    super(message, token);\n    this.name = NO_VIABLE_ALT_EXCEPTION;\n  }\n}\n\nexport class NotAllInputParsedException extends RecognitionException {\n  constructor(message: string, token: IToken) {\n    super(message, token);\n    this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n  }\n}\n\nexport class EarlyExitException extends RecognitionException {\n  constructor(\n    message: string,\n    token: IToken,\n    public previousToken: IToken,\n  ) {\n    super(message, token);\n    this.name = EARLY_EXIT_EXCEPTION;\n  }\n}\n","import {\n  createTokenInstance,\n  EOF,\n  tokenMatcher,\n} from \"../../../scan/tokens_public.js\";\nimport {\n  AbstractNextTerminalAfterProductionWalker,\n  IFirstAfterRepetition,\n} from \"../../grammar/interpreter.js\";\nimport {\n  clone,\n  dropRight,\n  find,\n  flatten,\n  has,\n  includes,\n  isEmpty,\n  map,\n} from \"lodash-es\";\nimport {\n  IParserConfig,\n  IToken,\n  ITokenGrammarPath,\n  TokenType,\n} from \"@chevrotain/types\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n\nexport const EOF_FOLLOW_KEY: any = {};\n\nexport interface IFollowKey {\n  ruleName: string;\n  idxInCallingRule: number;\n  inRule: string;\n}\n\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\n\nexport class InRuleRecoveryException extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = IN_RULE_RECOVERY_EXCEPTION;\n  }\n}\n\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n  recoveryEnabled: boolean;\n  firstAfterRepMap: Record<string, IFirstAfterRepetition>;\n  resyncFollows: Record<string, TokenType[]>;\n\n  initRecoverable(config: IParserConfig) {\n    this.firstAfterRepMap = {};\n    this.resyncFollows = {};\n\n    this.recoveryEnabled = has(config, \"recoveryEnabled\")\n      ? (config.recoveryEnabled as boolean) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n\n    // performance optimization, NOOP will be inlined which\n    // effectively means that this optional feature does not exist\n    // when not used.\n    if (this.recoveryEnabled) {\n      this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n    }\n  }\n\n  public getTokenToInsert(tokType: TokenType): IToken {\n    const tokToInsert = createTokenInstance(\n      tokType,\n      \"\",\n      NaN,\n      NaN,\n      NaN,\n      NaN,\n      NaN,\n      NaN,\n    );\n    tokToInsert.isInsertedInRecovery = true;\n    return tokToInsert;\n  }\n\n  public canTokenTypeBeInsertedInRecovery(tokType: TokenType): boolean {\n    return true;\n  }\n\n  public canTokenTypeBeDeletedInRecovery(tokType: TokenType): boolean {\n    return true;\n  }\n\n  tryInRepetitionRecovery(\n    this: MixedInParser,\n    grammarRule: Function,\n    grammarRuleArgs: any[],\n    lookAheadFunc: () => boolean,\n    expectedTokType: TokenType,\n  ): void {\n    // TODO: can the resyncTokenType be cached?\n    const reSyncTokType = this.findReSyncTokenType();\n    const savedLexerState = this.exportLexerState();\n    const resyncedTokens: IToken[] = [];\n    let passedResyncPoint = false;\n\n    const nextTokenWithoutResync = this.LA(1);\n    let currToken = this.LA(1);\n\n    const generateErrorMessage = () => {\n      const previousToken = this.LA(0);\n      // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n      // the error that would have been thrown\n      const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: expectedTokType,\n        actual: nextTokenWithoutResync,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName(),\n      });\n      const error = new MismatchedTokenException(\n        msg,\n        nextTokenWithoutResync,\n        this.LA(0),\n      );\n      // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n      error.resyncedTokens = dropRight(resyncedTokens);\n      this.SAVE_ERROR(error);\n    };\n\n    while (!passedResyncPoint) {\n      // re-synced to a point where we can safely exit the repetition/\n      if (this.tokenMatcher(currToken, expectedTokType)) {\n        generateErrorMessage();\n        return; // must return here to avoid reverting the inputIdx\n      } else if (lookAheadFunc.call(this)) {\n        // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n        generateErrorMessage();\n        // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n        grammarRule.apply(this, grammarRuleArgs);\n        return; // must return here to avoid reverting the inputIdx\n      } else if (this.tokenMatcher(currToken, reSyncTokType)) {\n        passedResyncPoint = true;\n      } else {\n        currToken = this.SKIP_TOKEN();\n        this.addToResyncTokens(currToken, resyncedTokens);\n      }\n    }\n\n    // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n    // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n    // \"between rules\" resync recovery later in the flow.\n    this.importLexerState(savedLexerState);\n  }\n\n  shouldInRepetitionRecoveryBeTried(\n    this: MixedInParser,\n    expectTokAfterLastMatch: TokenType,\n    nextTokIdx: number,\n    notStuck: boolean | undefined,\n  ): boolean {\n    // Edge case of arriving from a MANY repetition which is stuck\n    // Attempting recovery in this case could cause an infinite loop\n    if (notStuck === false) {\n      return false;\n    }\n\n    // no need to recover, next token is what we expect...\n    if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n      return false;\n    }\n\n    // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n    // and prefer some backtracking path that includes recovered errors.\n    if (this.isBackTracking()) {\n      return false;\n    }\n\n    // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n    // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n    //noinspection RedundantIfStatementJS\n    if (\n      this.canPerformInRuleRecovery(\n        expectTokAfterLastMatch,\n        this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx),\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Error Recovery functionality\n  getFollowsForInRuleRecovery(\n    this: MixedInParser,\n    tokType: TokenType,\n    tokIdxInRule: number,\n  ): TokenType[] {\n    const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n    const follows = this.getNextPossibleTokenTypes(grammarPath);\n    return follows;\n  }\n\n  tryInRuleRecovery(\n    this: MixedInParser,\n    expectedTokType: TokenType,\n    follows: TokenType[],\n  ): IToken {\n    if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n      const tokToInsert = this.getTokenToInsert(expectedTokType);\n      return tokToInsert;\n    }\n\n    if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n      const nextTok = this.SKIP_TOKEN();\n      this.consumeToken();\n      return nextTok;\n    }\n\n    throw new InRuleRecoveryException(\"sad sad panda\");\n  }\n\n  canPerformInRuleRecovery(\n    this: MixedInParser,\n    expectedToken: TokenType,\n    follows: TokenType[],\n  ): boolean {\n    return (\n      this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n      this.canRecoverWithSingleTokenDeletion(expectedToken)\n    );\n  }\n\n  canRecoverWithSingleTokenInsertion(\n    this: MixedInParser,\n    expectedTokType: TokenType,\n    follows: TokenType[],\n  ): boolean {\n    if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n      return false;\n    }\n\n    // must know the possible following tokens to perform single token insertion\n    if (isEmpty(follows)) {\n      return false;\n    }\n\n    const mismatchedTok = this.LA(1);\n    const isMisMatchedTokInFollows =\n      find(follows, (possibleFollowsTokType: TokenType) => {\n        return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n      }) !== undefined;\n\n    return isMisMatchedTokInFollows;\n  }\n\n  canRecoverWithSingleTokenDeletion(\n    this: MixedInParser,\n    expectedTokType: TokenType,\n  ): boolean {\n    if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n      return false;\n    }\n\n    const isNextTokenWhatIsExpected = this.tokenMatcher(\n      this.LA(2),\n      expectedTokType,\n    );\n    return isNextTokenWhatIsExpected;\n  }\n\n  isInCurrentRuleReSyncSet(\n    this: MixedInParser,\n    tokenTypeIdx: TokenType,\n  ): boolean {\n    const followKey = this.getCurrFollowKey();\n    const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n    return includes(currentRuleReSyncSet, tokenTypeIdx);\n  }\n\n  findReSyncTokenType(this: MixedInParser): TokenType {\n    const allPossibleReSyncTokTypes = this.flattenFollowSet();\n    // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n    let nextToken = this.LA(1);\n    let k = 2;\n    while (true) {\n      const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n        const canMatch = tokenMatcher(nextToken, resyncTokType);\n        return canMatch;\n      });\n      if (foundMatch !== undefined) {\n        return foundMatch;\n      }\n      nextToken = this.LA(k);\n      k++;\n    }\n  }\n\n  getCurrFollowKey(this: MixedInParser): IFollowKey {\n    // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n    if (this.RULE_STACK.length === 1) {\n      return EOF_FOLLOW_KEY;\n    }\n    const currRuleShortName = this.getLastExplicitRuleShortName();\n    const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n    const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n\n    return {\n      ruleName: this.shortRuleNameToFullName(currRuleShortName),\n      idxInCallingRule: currRuleIdx,\n      inRule: this.shortRuleNameToFullName(prevRuleShortName),\n    };\n  }\n\n  buildFullFollowKeyStack(this: MixedInParser): IFollowKey[] {\n    const explicitRuleStack = this.RULE_STACK;\n    const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n\n    return map(explicitRuleStack, (ruleName, idx) => {\n      if (idx === 0) {\n        return EOF_FOLLOW_KEY;\n      }\n      return {\n        ruleName: this.shortRuleNameToFullName(ruleName),\n        idxInCallingRule: explicitOccurrenceStack[idx],\n        inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n      };\n    });\n  }\n\n  flattenFollowSet(this: MixedInParser): TokenType[] {\n    const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n      return this.getFollowSetFromFollowKey(currKey);\n    });\n    return <any>flatten(followStack);\n  }\n\n  getFollowSetFromFollowKey(\n    this: MixedInParser,\n    followKey: IFollowKey,\n  ): TokenType[] {\n    if (followKey === EOF_FOLLOW_KEY) {\n      return [EOF];\n    }\n\n    const followName =\n      followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n\n    return this.resyncFollows[followName];\n  }\n\n  // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n  // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n  addToResyncTokens(\n    this: MixedInParser,\n    token: IToken,\n    resyncTokens: IToken[],\n  ): IToken[] {\n    if (!this.tokenMatcher(token, EOF)) {\n      resyncTokens.push(token);\n    }\n    return resyncTokens;\n  }\n\n  reSyncTo(this: MixedInParser, tokType: TokenType): IToken[] {\n    const resyncedTokens: IToken[] = [];\n    let nextTok = this.LA(1);\n    while (this.tokenMatcher(nextTok, tokType) === false) {\n      nextTok = this.SKIP_TOKEN();\n      this.addToResyncTokens(nextTok, resyncedTokens);\n    }\n    // the last token is not part of the error.\n    return dropRight(resyncedTokens);\n  }\n\n  attemptInRepetitionRecovery(\n    this: MixedInParser,\n    prodFunc: Function,\n    args: any[],\n    lookaheadFunc: () => boolean,\n    dslMethodIdx: number,\n    prodOccurrence: number,\n    nextToksWalker: typeof AbstractNextTerminalAfterProductionWalker,\n    notStuck?: boolean,\n  ): void {\n    // by default this is a NO-OP\n    // The actual implementation is with the function(not method) below\n  }\n\n  getCurrentGrammarPath(\n    this: MixedInParser,\n    tokType: TokenType,\n    tokIdxInRule: number,\n  ): ITokenGrammarPath {\n    const pathRuleStack: string[] = this.getHumanReadableRuleStack();\n    const pathOccurrenceStack: number[] = clone(this.RULE_OCCURRENCE_STACK);\n    const grammarPath: any = {\n      ruleStack: pathRuleStack,\n      occurrenceStack: pathOccurrenceStack,\n      lastTok: tokType,\n      lastTokOccurrence: tokIdxInRule,\n    };\n\n    return grammarPath;\n  }\n  getHumanReadableRuleStack(this: MixedInParser): string[] {\n    return map(this.RULE_STACK, (currShortName) =>\n      this.shortRuleNameToFullName(currShortName),\n    );\n  }\n}\n\nexport function attemptInRepetitionRecovery(\n  this: MixedInParser,\n  prodFunc: Function,\n  args: any[],\n  lookaheadFunc: () => boolean,\n  dslMethodIdx: number,\n  prodOccurrence: number,\n  nextToksWalker: typeof AbstractNextTerminalAfterProductionWalker,\n  notStuck?: boolean,\n): void {\n  const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n  let firstAfterRepInfo = this.firstAfterRepMap[key];\n  if (firstAfterRepInfo === undefined) {\n    const currRuleName = this.getCurrRuleFullName();\n    const ruleGrammar = this.getGAstProductions()[currRuleName];\n    const walker: AbstractNextTerminalAfterProductionWalker =\n      new nextToksWalker(ruleGrammar, prodOccurrence);\n    firstAfterRepInfo = walker.startWalking();\n    this.firstAfterRepMap[key] = firstAfterRepInfo;\n  }\n\n  let expectTokAfterLastMatch = firstAfterRepInfo.token;\n  let nextTokIdx = firstAfterRepInfo.occurrence;\n  const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n\n  // special edge case of a TOP most repetition after which the input should END.\n  // this will force an attempt for inRule recovery in that scenario.\n  if (\n    this.RULE_STACK.length === 1 &&\n    isEndOfRule &&\n    expectTokAfterLastMatch === undefined\n  ) {\n    expectTokAfterLastMatch = EOF;\n    nextTokIdx = 1;\n  }\n\n  // We don't have anything to re-sync to...\n  // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n  if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n    return;\n  }\n\n  if (\n    this.shouldInRepetitionRecoveryBeTried(\n      expectTokAfterLastMatch,\n      nextTokIdx,\n      notStuck,\n    )\n  ) {\n    // TODO: performance optimization: instead of passing the original args here, we modify\n    // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n    // to avoid searching the cache for it once more.\n    this.tryInRepetitionRecovery(\n      prodFunc,\n      args,\n      lookaheadFunc,\n      expectTokAfterLastMatch,\n    );\n  }\n}\n","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\n\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(\n  ruleIdx: number,\n  dslMethodIdx: number,\n  occurrence: number,\n): number {\n  return occurrence | dslMethodIdx | ruleIdx;\n}\n\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n","import {\n  ILookaheadStrategy,\n  ILookaheadValidationError,\n  IOrAlt,\n  OptionalProductionType,\n  Rule,\n  TokenType,\n} from \"@chevrotain/types\";\nimport { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport {\n  validateAmbiguousAlternationAlternatives,\n  validateEmptyOrAlternative,\n  validateNoLeftRecursion,\n  validateSomeNonEmptyLookaheadPath,\n} from \"./checks.js\";\nimport {\n  buildAlternativesLookAheadFunc,\n  buildLookaheadFuncForOptionalProd,\n  buildLookaheadFuncForOr,\n  buildSingleAlternativeLookaheadFunction,\n  getProdType,\n} from \"./lookahead.js\";\nimport { IParserDefinitionError } from \"./types.js\";\n\nexport class LLkLookaheadStrategy implements ILookaheadStrategy {\n  readonly maxLookahead: number;\n\n  constructor(options?: { maxLookahead?: number }) {\n    this.maxLookahead =\n      options?.maxLookahead ?? DEFAULT_PARSER_CONFIG.maxLookahead;\n  }\n\n  validate(options: {\n    rules: Rule[];\n    tokenTypes: TokenType[];\n    grammarName: string;\n  }): ILookaheadValidationError[] {\n    const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n\n    if (isEmpty(leftRecursionErrors)) {\n      const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n      const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(\n        options.rules,\n        this.maxLookahead,\n      );\n      const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(\n        options.rules,\n        this.maxLookahead,\n      );\n      const allErrors = [\n        ...leftRecursionErrors,\n        ...emptyAltErrors,\n        ...ambiguousAltsErrors,\n        ...emptyRepetitionErrors,\n      ];\n      return allErrors;\n    }\n    return leftRecursionErrors;\n  }\n\n  validateNoLeftRecursion(rules: Rule[]): IParserDefinitionError[] {\n    return flatMap(rules, (currTopRule) =>\n      validateNoLeftRecursion(\n        currTopRule,\n        currTopRule,\n        defaultGrammarValidatorErrorProvider,\n      ),\n    );\n  }\n\n  validateEmptyOrAlternatives(rules: Rule[]): IParserDefinitionError[] {\n    return flatMap(rules, (currTopRule) =>\n      validateEmptyOrAlternative(\n        currTopRule,\n        defaultGrammarValidatorErrorProvider,\n      ),\n    );\n  }\n\n  validateAmbiguousAlternationAlternatives(\n    rules: Rule[],\n    maxLookahead: number,\n  ): IParserDefinitionError[] {\n    return flatMap(rules, (currTopRule) =>\n      validateAmbiguousAlternationAlternatives(\n        currTopRule,\n        maxLookahead,\n        defaultGrammarValidatorErrorProvider,\n      ),\n    );\n  }\n\n  validateSomeNonEmptyLookaheadPath(\n    rules: Rule[],\n    maxLookahead: number,\n  ): IParserDefinitionError[] {\n    return validateSomeNonEmptyLookaheadPath(\n      rules,\n      maxLookahead,\n      defaultGrammarValidatorErrorProvider,\n    );\n  }\n\n  buildLookaheadForAlternation(options: {\n    prodOccurrence: number;\n    rule: Rule;\n    maxLookahead: number;\n    hasPredicates: boolean;\n    dynamicTokensEnabled: boolean;\n  }): (orAlts?: IOrAlt<any>[] | undefined) => number | undefined {\n    return buildLookaheadFuncForOr(\n      options.prodOccurrence,\n      options.rule,\n      options.maxLookahead,\n      options.hasPredicates,\n      options.dynamicTokensEnabled,\n      buildAlternativesLookAheadFunc,\n    );\n  }\n\n  buildLookaheadForOptional(options: {\n    prodOccurrence: number;\n    prodType: OptionalProductionType;\n    rule: Rule;\n    maxLookahead: number;\n    dynamicTokensEnabled: boolean;\n  }): () => boolean {\n    return buildLookaheadFuncForOptionalProd(\n      options.prodOccurrence,\n      options.rule,\n      options.maxLookahead,\n      options.dynamicTokensEnabled,\n      getProdType(options.prodType),\n      buildSingleAlternativeLookaheadFunction,\n    );\n  }\n}\n","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport {\n  ILookaheadStrategy,\n  IParserConfig,\n  OptionalProductionType,\n} from \"@chevrotain/types\";\nimport {\n  AT_LEAST_ONE_IDX,\n  AT_LEAST_ONE_SEP_IDX,\n  getKeyForAutomaticLookahead,\n  MANY_IDX,\n  MANY_SEP_IDX,\n  OPTION_IDX,\n  OR_IDX,\n} from \"../../grammar/keys.js\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport {\n  Alternation,\n  GAstVisitor,\n  getProductionDslName,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n} from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n  maxLookahead: number;\n  lookAheadFuncsCache: any;\n  dynamicTokensEnabled: boolean;\n  lookaheadStrategy: ILookaheadStrategy;\n\n  initLooksAhead(config: IParserConfig) {\n    this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n      ? (config.dynamicTokensEnabled as boolean) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n\n    this.maxLookahead = has(config, \"maxLookahead\")\n      ? (config.maxLookahead as number) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.maxLookahead;\n\n    this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n      ? (config.lookaheadStrategy as ILookaheadStrategy) // assumes end user provides the correct config value/type\n      : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n\n    this.lookAheadFuncsCache = new Map();\n  }\n\n  preComputeLookaheadFunctions(this: MixedInParser, rules: Rule[]): void {\n    forEach(rules, (currRule) => {\n      this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n        const {\n          alternation,\n          repetition,\n          option,\n          repetitionMandatory,\n          repetitionMandatoryWithSeparator,\n          repetitionWithSeparator,\n        } = collectMethods(currRule);\n\n        forEach(alternation, (currProd) => {\n          const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n          this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n              prodOccurrence: currProd.idx,\n              rule: currRule,\n              maxLookahead: currProd.maxLookahead || this.maxLookahead,\n              hasPredicates: currProd.hasPredicates,\n              dynamicTokensEnabled: this.dynamicTokensEnabled,\n            });\n\n            const key = getKeyForAutomaticLookahead(\n              this.fullRuleNameToShort[currRule.name],\n              OR_IDX,\n              currProd.idx,\n            );\n            this.setLaFuncCache(key, laFunc);\n          });\n        });\n\n        forEach(repetition, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            MANY_IDX,\n            \"Repetition\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd),\n          );\n        });\n\n        forEach(option, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            OPTION_IDX,\n            \"Option\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd),\n          );\n        });\n\n        forEach(repetitionMandatory, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            AT_LEAST_ONE_IDX,\n            \"RepetitionMandatory\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd),\n          );\n        });\n\n        forEach(repetitionMandatoryWithSeparator, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            AT_LEAST_ONE_SEP_IDX,\n            \"RepetitionMandatoryWithSeparator\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd),\n          );\n        });\n\n        forEach(repetitionWithSeparator, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            MANY_SEP_IDX,\n            \"RepetitionWithSeparator\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd),\n          );\n        });\n      });\n    });\n  }\n\n  computeLookaheadFunc(\n    this: MixedInParser,\n    rule: Rule,\n    prodOccurrence: number,\n    prodKey: number,\n    prodType: OptionalProductionType,\n    prodMaxLookahead: number | undefined,\n    dslMethodName: string,\n  ): void {\n    this.TRACE_INIT(\n      `${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`,\n      () => {\n        const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n          prodOccurrence,\n          rule,\n          maxLookahead: prodMaxLookahead || this.maxLookahead,\n          dynamicTokensEnabled: this.dynamicTokensEnabled,\n          prodType,\n        });\n        const key = getKeyForAutomaticLookahead(\n          this.fullRuleNameToShort[rule.name],\n          prodKey,\n          prodOccurrence,\n        );\n        this.setLaFuncCache(key, laFunc);\n      },\n    );\n  }\n\n  // this actually returns a number, but it is always used as a string (object prop key)\n  getKeyForAutomaticLookahead(\n    this: MixedInParser,\n    dslMethodIdx: number,\n    occurrence: number,\n  ): number {\n    const currRuleShortName: any = this.getLastExplicitRuleShortName();\n    return getKeyForAutomaticLookahead(\n      currRuleShortName,\n      dslMethodIdx,\n      occurrence,\n    );\n  }\n\n  getLaFuncFromCache(this: MixedInParser, key: number): Function {\n    return this.lookAheadFuncsCache.get(key);\n  }\n\n  /* istanbul ignore next */\n  setLaFuncCache(this: MixedInParser, key: number, value: Function): void {\n    this.lookAheadFuncsCache.set(key, value);\n  }\n}\n\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n  public dslMethods: {\n    option: Option[];\n    alternation: Alternation[];\n    repetition: Repetition[];\n    repetitionWithSeparator: RepetitionWithSeparator[];\n    repetitionMandatory: RepetitionMandatory[];\n    repetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator[];\n  } = {\n    option: [],\n    alternation: [],\n    repetition: [],\n    repetitionWithSeparator: [],\n    repetitionMandatory: [],\n    repetitionMandatoryWithSeparator: [],\n  };\n\n  reset() {\n    this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: [],\n    };\n  }\n\n  public visitOption(option: Option): void {\n    this.dslMethods.option.push(option);\n  }\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.dslMethods.repetitionWithSeparator.push(manySep);\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.dslMethods.repetitionMandatory.push(atLeastOne);\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator,\n  ): void {\n    this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.dslMethods.repetition.push(many);\n  }\n\n  public visitAlternation(or: Alternation): void {\n    this.dslMethods.alternation.push(or);\n  }\n}\n\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule: Rule): {\n  option: Option[];\n  alternation: Alternation[];\n  repetition: Repetition[];\n  repetitionWithSeparator: RepetitionWithSeparator[];\n  repetitionMandatory: RepetitionMandatory[];\n  repetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator[];\n} {\n  collectorVisitor.reset();\n  rule.accept(collectorVisitor);\n  const dslMethods = collectorVisitor.dslMethods;\n  // avoid uncleaned references\n  collectorVisitor.reset();\n  return <any>dslMethods;\n}\n","import { CstNode, CstNodeLocation, IToken } from \"@chevrotain/types\";\n\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(\n  currNodeLocation: CstNodeLocation,\n  newLocationInfo: Required<Pick<IToken, \"startOffset\" | \"endOffset\">>,\n): void {\n  // First (valid) update for this cst node\n  if (isNaN(currNodeLocation.startOffset) === true) {\n    // assumption1: Token location information is either NaN or a valid number\n    // assumption2: Token location information is fully valid if it exist\n    // (both start/end offsets exist and are numbers).\n    currNodeLocation.startOffset = newLocationInfo.startOffset;\n    currNodeLocation.endOffset = newLocationInfo.endOffset;\n  }\n  // Once the startOffset has been updated with a valid number it should never receive\n  // any farther updates as the Token vector is sorted.\n  // We still have to check this this condition for every new possible location info\n  // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n  else if (currNodeLocation.endOffset! < newLocationInfo.endOffset === true) {\n    currNodeLocation.endOffset = newLocationInfo.endOffset;\n  }\n}\n\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(\n  currNodeLocation: CstNodeLocation,\n  newLocationInfo: CstNodeLocation,\n): void {\n  // First (valid) update for this cst node\n  if (isNaN(currNodeLocation.startOffset) === true) {\n    // assumption1: Token location information is either NaN or a valid number\n    // assumption2: Token location information is fully valid if it exist\n    // (all start/end props exist and are numbers).\n    currNodeLocation.startOffset = newLocationInfo.startOffset;\n    currNodeLocation.startColumn = newLocationInfo.startColumn;\n    currNodeLocation.startLine = newLocationInfo.startLine;\n    currNodeLocation.endOffset = newLocationInfo.endOffset;\n    currNodeLocation.endColumn = newLocationInfo.endColumn;\n    currNodeLocation.endLine = newLocationInfo.endLine;\n  }\n  // Once the start props has been updated with a valid number it should never receive\n  // any farther updates as the Token vector is sorted.\n  // We still have to check this this condition for every new possible location info\n  // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n  else if (currNodeLocation.endOffset! < newLocationInfo.endOffset! === true) {\n    currNodeLocation.endOffset = newLocationInfo.endOffset;\n    currNodeLocation.endColumn = newLocationInfo.endColumn;\n    currNodeLocation.endLine = newLocationInfo.endLine;\n  }\n}\n\nexport function addTerminalToCst(\n  node: CstNode,\n  token: IToken,\n  tokenTypeName: string,\n): void {\n  if (node.children[tokenTypeName] === undefined) {\n    node.children[tokenTypeName] = [token];\n  } else {\n    node.children[tokenTypeName].push(token);\n  }\n}\n\nexport function addNoneTerminalToCst(\n  node: CstNode,\n  ruleName: string,\n  ruleResult: any,\n): void {\n  if (node.children[ruleName] === undefined) {\n    node.children[ruleName] = [ruleResult];\n  } else {\n    node.children[ruleName].push(ruleResult);\n  }\n}\n","const NAME = \"name\";\n\nexport function defineNameProp(obj: {}, nameValue: string): void {\n  Object.defineProperty(obj, NAME, {\n    enumerable: false,\n    configurable: true,\n    writable: false,\n    value: nameValue,\n  });\n}\n","import {\n  compact,\n  filter,\n  forEach,\n  isArray,\n  isEmpty,\n  isFunction,\n  isUndefined,\n  keys,\n  map,\n} from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nimport { CstNode, ICstVisitor } from \"@chevrotain/types\";\n\nexport function defaultVisit<IN>(ctx: any, param: IN): void {\n  const childrenNames = keys(ctx);\n  const childrenNamesLength = childrenNames.length;\n  for (let i = 0; i < childrenNamesLength; i++) {\n    const currChildName = childrenNames[i];\n    const currChildArray = ctx[currChildName];\n    const currChildArrayLength = currChildArray.length;\n    for (let j = 0; j < currChildArrayLength; j++) {\n      const currChild: any = currChildArray[j];\n      // distinction between Tokens Children and CstNode children\n      if (currChild.tokenTypeIdx === undefined) {\n        this[currChild.name](currChild.children, param);\n      }\n    }\n  }\n  // defaultVisit does not support generic out param\n}\n\nexport function createBaseSemanticVisitorConstructor(\n  grammarName: string,\n  ruleNames: string[],\n): {\n  new (...args: any[]): ICstVisitor<any, any>;\n} {\n  const derivedConstructor: any = function () {};\n\n  // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n  defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n\n  const semanticProto = {\n    visit: function (cstNode: CstNode | CstNode[], param: any) {\n      // enables writing more concise visitor methods when CstNode has only a single child\n      if (isArray(cstNode)) {\n        // A CST Node's children dictionary can never have empty arrays as values\n        // If a key is defined there will be at least one element in the corresponding value array.\n        cstNode = cstNode[0];\n      }\n\n      // enables passing optional CstNodes concisely.\n      if (isUndefined(cstNode)) {\n        return undefined;\n      }\n\n      return this[cstNode.name](cstNode.children, param);\n    },\n\n    validateVisitor: function () {\n      const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n      if (!isEmpty(semanticDefinitionErrors)) {\n        const errorMessages = map(\n          semanticDefinitionErrors,\n          (currDefError) => currDefError.msg,\n        );\n        throw Error(\n          `Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n            `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`,\n        );\n      }\n    },\n  };\n\n  derivedConstructor.prototype = semanticProto;\n  derivedConstructor.prototype.constructor = derivedConstructor;\n\n  derivedConstructor._RULE_NAMES = ruleNames;\n\n  return derivedConstructor;\n}\n\nexport function createBaseVisitorConstructorWithDefaults(\n  grammarName: string,\n  ruleNames: string[],\n  baseConstructor: Function,\n): {\n  new (...args: any[]): ICstVisitor<any, any>;\n} {\n  const derivedConstructor: any = function () {};\n\n  // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n  defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n\n  const withDefaultsProto = Object.create(baseConstructor.prototype);\n  forEach(ruleNames, (ruleName) => {\n    withDefaultsProto[ruleName] = defaultVisit;\n  });\n\n  derivedConstructor.prototype = withDefaultsProto;\n  derivedConstructor.prototype.constructor = derivedConstructor;\n\n  return derivedConstructor;\n}\n\nexport enum CstVisitorDefinitionError {\n  REDUNDANT_METHOD,\n  MISSING_METHOD,\n}\n\nexport interface IVisitorDefinitionError {\n  msg: string;\n  type: CstVisitorDefinitionError;\n  methodName: string;\n}\n\nexport function validateVisitor(\n  visitorInstance: ICstVisitor<unknown, unknown>,\n  ruleNames: string[],\n): IVisitorDefinitionError[] {\n  const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n\n  return missingErrors;\n}\n\nexport function validateMissingCstMethods(\n  visitorInstance: ICstVisitor<unknown, unknown>,\n  ruleNames: string[],\n): IVisitorDefinitionError[] {\n  const missingRuleNames = filter(ruleNames, (currRuleName) => {\n    return isFunction((visitorInstance as any)[currRuleName]) === false;\n  });\n\n  const errors: IVisitorDefinitionError[] = map(\n    missingRuleNames,\n    (currRuleName) => {\n      return {\n        msg: `Missing visitor method: <${currRuleName}> on ${<any>(\n          visitorInstance.constructor.name\n        )} CST Visitor.`,\n        type: CstVisitorDefinitionError.MISSING_METHOD,\n        methodName: currRuleName,\n      };\n    },\n  );\n\n  return compact<IVisitorDefinitionError>(errors);\n}\n","import {\n  addNoneTerminalToCst,\n  addTerminalToCst,\n  setNodeLocationFull,\n  setNodeLocationOnlyOffset,\n} from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport {\n  createBaseSemanticVisitorConstructor,\n  createBaseVisitorConstructorWithDefaults,\n} from \"../../cst/cst_visitor.js\";\nimport {\n  CstNode,\n  CstNodeLocation,\n  ICstVisitor,\n  IParserConfig,\n  IToken,\n  nodeLocationTrackingOptions,\n} from \"@chevrotain/types\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n  outputCst: boolean;\n  CST_STACK: CstNode[];\n  baseCstVisitorConstructor: Function;\n  baseCstVisitorWithDefaultsConstructor: Function;\n\n  // dynamically assigned Methods\n  setNodeLocationFromNode: (\n    nodeLocation: CstNodeLocation,\n    locationInformation: CstNodeLocation,\n  ) => void;\n  setNodeLocationFromToken: (\n    nodeLocation: CstNodeLocation,\n    locationInformation: CstNodeLocation,\n  ) => void;\n  cstPostRule: (this: MixedInParser, ruleCstNode: CstNode) => void;\n\n  setInitialNodeLocation: (cstNode: CstNode) => void;\n  nodeLocationTracking: nodeLocationTrackingOptions;\n\n  initTreeBuilder(this: MixedInParser, config: IParserConfig) {\n    this.CST_STACK = [];\n\n    // outputCst is no longer exposed/defined in the pubic API\n    this.outputCst = (config as any).outputCst;\n\n    this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n      ? (config.nodeLocationTracking as nodeLocationTrackingOptions) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n\n    if (!this.outputCst) {\n      this.cstInvocationStateUpdate = noop;\n      this.cstFinallyStateUpdate = noop;\n      this.cstPostTerminal = noop;\n      this.cstPostNonTerminal = noop;\n      this.cstPostRule = noop;\n    } else {\n      if (/full/i.test(this.nodeLocationTracking)) {\n        if (this.recoveryEnabled) {\n          this.setNodeLocationFromToken = setNodeLocationFull;\n          this.setNodeLocationFromNode = setNodeLocationFull;\n          this.cstPostRule = noop;\n          this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n        } else {\n          this.setNodeLocationFromToken = noop;\n          this.setNodeLocationFromNode = noop;\n          this.cstPostRule = this.cstPostRuleFull;\n          this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n        }\n      } else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n        if (this.recoveryEnabled) {\n          this.setNodeLocationFromToken = <any>setNodeLocationOnlyOffset;\n          this.setNodeLocationFromNode = <any>setNodeLocationOnlyOffset;\n          this.cstPostRule = noop;\n          this.setInitialNodeLocation =\n            this.setInitialNodeLocationOnlyOffsetRecovery;\n        } else {\n          this.setNodeLocationFromToken = noop;\n          this.setNodeLocationFromNode = noop;\n          this.cstPostRule = this.cstPostRuleOnlyOffset;\n          this.setInitialNodeLocation =\n            this.setInitialNodeLocationOnlyOffsetRegular;\n        }\n      } else if (/none/i.test(this.nodeLocationTracking)) {\n        this.setNodeLocationFromToken = noop;\n        this.setNodeLocationFromNode = noop;\n        this.cstPostRule = noop;\n        this.setInitialNodeLocation = noop;\n      } else {\n        throw Error(\n          `Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`,\n        );\n      }\n    }\n  }\n\n  setInitialNodeLocationOnlyOffsetRecovery(\n    this: MixedInParser,\n    cstNode: any,\n  ): void {\n    cstNode.location = {\n      startOffset: NaN,\n      endOffset: NaN,\n    };\n  }\n\n  setInitialNodeLocationOnlyOffsetRegular(\n    this: MixedInParser,\n    cstNode: any,\n  ): void {\n    cstNode.location = {\n      // without error recovery the starting Location of a new CstNode is guaranteed\n      // To be the next Token's startOffset (for valid inputs).\n      // For invalid inputs there won't be any CSTOutput so this potential\n      // inaccuracy does not matter\n      startOffset: this.LA(1).startOffset,\n      endOffset: NaN,\n    };\n  }\n\n  setInitialNodeLocationFullRecovery(this: MixedInParser, cstNode: any): void {\n    cstNode.location = {\n      startOffset: NaN,\n      startLine: NaN,\n      startColumn: NaN,\n      endOffset: NaN,\n      endLine: NaN,\n      endColumn: NaN,\n    };\n  }\n\n  /**\n     *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n\n     * @param cstNode\n     */\n  setInitialNodeLocationFullRegular(this: MixedInParser, cstNode: any): void {\n    const nextToken = this.LA(1);\n    cstNode.location = {\n      startOffset: nextToken.startOffset,\n      startLine: nextToken.startLine,\n      startColumn: nextToken.startColumn,\n      endOffset: NaN,\n      endLine: NaN,\n      endColumn: NaN,\n    };\n  }\n\n  cstInvocationStateUpdate(this: MixedInParser, fullRuleName: string): void {\n    const cstNode: CstNode = {\n      name: fullRuleName,\n      children: Object.create(null),\n    };\n\n    this.setInitialNodeLocation(cstNode);\n    this.CST_STACK.push(cstNode);\n  }\n\n  cstFinallyStateUpdate(this: MixedInParser): void {\n    this.CST_STACK.pop();\n  }\n\n  cstPostRuleFull(this: MixedInParser, ruleCstNode: CstNode): void {\n    // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n    const prevToken = this.LA(0) as Required<CstNodeLocation>;\n    const loc = ruleCstNode.location as Required<CstNodeLocation>;\n\n    // If this condition is true it means we consumed at least one Token\n    // In this CstNode.\n    if (loc.startOffset <= prevToken.startOffset === true) {\n      loc.endOffset = prevToken.endOffset;\n      loc.endLine = prevToken.endLine;\n      loc.endColumn = prevToken.endColumn;\n    }\n    // \"empty\" CstNode edge case\n    else {\n      loc.startOffset = NaN;\n      loc.startLine = NaN;\n      loc.startColumn = NaN;\n    }\n  }\n\n  cstPostRuleOnlyOffset(this: MixedInParser, ruleCstNode: CstNode): void {\n    const prevToken = this.LA(0);\n    // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n    const loc = ruleCstNode.location!;\n\n    // If this condition is true it means we consumed at least one Token\n    // In this CstNode.\n    if (loc.startOffset <= prevToken.startOffset === true) {\n      loc.endOffset = prevToken.endOffset;\n    }\n    // \"empty\" CstNode edge case\n    else {\n      loc.startOffset = NaN;\n    }\n  }\n\n  cstPostTerminal(\n    this: MixedInParser,\n    key: string,\n    consumedToken: IToken,\n  ): void {\n    const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n    addTerminalToCst(rootCst, consumedToken, key);\n    // This is only used when **both** error recovery and CST Output are enabled.\n    this.setNodeLocationFromToken(rootCst.location!, <any>consumedToken);\n  }\n\n  cstPostNonTerminal(\n    this: MixedInParser,\n    ruleCstResult: CstNode,\n    ruleName: string,\n  ): void {\n    const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n    addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n    // This is only used when **both** error recovery and CST Output are enabled.\n    this.setNodeLocationFromNode(preCstNode.location!, ruleCstResult.location!);\n  }\n\n  getBaseCstVisitorConstructor<IN = any, OUT = any>(\n    this: MixedInParser,\n  ): {\n    new (...args: any[]): ICstVisitor<IN, OUT>;\n  } {\n    if (isUndefined(this.baseCstVisitorConstructor)) {\n      const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(\n        this.className,\n        keys(this.gastProductionsCache),\n      );\n      this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n      return newBaseCstVisitorConstructor;\n    }\n\n    return <any>this.baseCstVisitorConstructor;\n  }\n\n  getBaseCstVisitorConstructorWithDefaults<IN = any, OUT = any>(\n    this: MixedInParser,\n  ): {\n    new (...args: any[]): ICstVisitor<IN, OUT>;\n  } {\n    if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n      const newConstructor = createBaseVisitorConstructorWithDefaults(\n        this.className,\n        keys(this.gastProductionsCache),\n        this.getBaseCstVisitorConstructor(),\n      );\n      this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n      return newConstructor;\n    }\n\n    return <any>this.baseCstVisitorWithDefaultsConstructor;\n  }\n\n  getLastExplicitRuleShortName(this: MixedInParser): number {\n    const ruleStack = this.RULE_STACK;\n    return ruleStack[ruleStack.length - 1];\n  }\n\n  getPreviousExplicitRuleShortName(this: MixedInParser): number {\n    const ruleStack = this.RULE_STACK;\n    return ruleStack[ruleStack.length - 2];\n  }\n\n  getLastExplicitRuleOccurrenceIndex(this: MixedInParser): number {\n    const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n    return occurrenceStack[occurrenceStack.length - 1];\n  }\n}\n","import { END_OF_FILE } from \"../parser.js\";\nimport { IToken } from \"@chevrotain/types\";\nimport { MixedInParser } from \"./parser_traits.js\";\n\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n  tokVector: IToken[];\n  tokVectorLength: number;\n  currIdx: number;\n\n  initLexerAdapter() {\n    this.tokVector = [];\n    this.tokVectorLength = 0;\n    this.currIdx = -1;\n  }\n\n  set input(newInput: IToken[]) {\n    // @ts-ignore - `this parameter` not supported in setters/getters\n    //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n    if (this.selfAnalysisDone !== true) {\n      throw Error(\n        `Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`,\n      );\n    }\n    // @ts-ignore - `this parameter` not supported in setters/getters\n    //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n    this.reset();\n    this.tokVector = newInput;\n    this.tokVectorLength = newInput.length;\n  }\n\n  get input(): IToken[] {\n    return this.tokVector;\n  }\n\n  // skips a token and returns the next token\n  SKIP_TOKEN(this: MixedInParser): IToken {\n    if (this.currIdx <= this.tokVector.length - 2) {\n      this.consumeToken();\n      return this.LA(1);\n    } else {\n      return END_OF_FILE;\n    }\n  }\n\n  // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n  // or lexers dependent on parser context.\n  LA(this: MixedInParser, howMuch: number): IToken {\n    const soughtIdx = this.currIdx + howMuch;\n    if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n      return END_OF_FILE;\n    } else {\n      return this.tokVector[soughtIdx];\n    }\n  }\n\n  consumeToken(this: MixedInParser) {\n    this.currIdx++;\n  }\n\n  exportLexerState(this: MixedInParser): number {\n    return this.currIdx;\n  }\n\n  importLexerState(this: MixedInParser, newState: number) {\n    this.currIdx = newState;\n  }\n\n  resetLexerState(this: MixedInParser): void {\n    this.currIdx = -1;\n  }\n\n  moveToTerminatedState(this: MixedInParser): void {\n    this.currIdx = this.tokVector.length - 1;\n  }\n\n  getLexerPosition(this: MixedInParser): number {\n    return this.exportLexerState();\n  }\n}\n","import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IRuleConfig,\n  ISerializedGast,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  SubruleMethodOpts,\n  TokenType,\n} from \"@chevrotain/types\";\nimport { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport { Rule, serializeGrammar } from \"@chevrotain/gast\";\nimport { IParserDefinitionError } from \"../../grammar/types.js\";\nimport { ParserMethodInternal } from \"../types.js\";\n\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n  ACTION<T>(this: MixedInParser, impl: () => T): T {\n    return impl.call(this);\n  }\n\n  consume(\n    this: MixedInParser,\n    idx: number,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, idx, options);\n  }\n\n  subrule<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    idx: number,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, idx, options);\n  }\n\n  option<OUT>(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, idx);\n  }\n\n  or(\n    this: MixedInParser,\n    idx: number,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<any>,\n  ): any {\n    return this.orInternal(altsOrOpts, idx);\n  }\n\n  many(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<any> | DSLMethodOpts<any>,\n  ): void {\n    return this.manyInternal(idx, actionORMethodDef);\n  }\n\n  atLeastOne(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<any> | DSLMethodOptsWithErr<any>,\n  ): void {\n    return this.atLeastOneInternal(idx, actionORMethodDef);\n  }\n\n  CONSUME(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 0, options);\n  }\n\n  CONSUME1(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 1, options);\n  }\n\n  CONSUME2(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 2, options);\n  }\n\n  CONSUME3(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 3, options);\n  }\n\n  CONSUME4(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 4, options);\n  }\n\n  CONSUME5(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 5, options);\n  }\n\n  CONSUME6(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 6, options);\n  }\n\n  CONSUME7(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 7, options);\n  }\n\n  CONSUME8(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 8, options);\n  }\n\n  CONSUME9(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 9, options);\n  }\n\n  SUBRULE<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 0, options);\n  }\n\n  SUBRULE1<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 1, options);\n  }\n\n  SUBRULE2<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 2, options);\n  }\n\n  SUBRULE3<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 3, options);\n  }\n\n  SUBRULE4<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 4, options);\n  }\n\n  SUBRULE5<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 5, options);\n  }\n\n  SUBRULE6<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 6, options);\n  }\n\n  SUBRULE7<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 7, options);\n  }\n\n  SUBRULE8<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 8, options);\n  }\n\n  SUBRULE9<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 9, options);\n  }\n\n  OPTION<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 0);\n  }\n\n  OPTION1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 1);\n  }\n\n  OPTION2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 2);\n  }\n\n  OPTION3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 3);\n  }\n\n  OPTION4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 4);\n  }\n\n  OPTION5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 5);\n  }\n\n  OPTION6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 6);\n  }\n\n  OPTION7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 7);\n  }\n\n  OPTION8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 8);\n  }\n\n  OPTION9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 9);\n  }\n\n  OR<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 0);\n  }\n\n  OR1<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 1);\n  }\n\n  OR2<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 2);\n  }\n\n  OR3<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 3);\n  }\n\n  OR4<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 4);\n  }\n\n  OR5<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 5);\n  }\n\n  OR6<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 6);\n  }\n\n  OR7<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 7);\n  }\n\n  OR8<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 8);\n  }\n\n  OR9<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 9);\n  }\n\n  MANY<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(0, actionORMethodDef);\n  }\n\n  MANY1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(1, actionORMethodDef);\n  }\n\n  MANY2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(2, actionORMethodDef);\n  }\n\n  MANY3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(3, actionORMethodDef);\n  }\n\n  MANY4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(4, actionORMethodDef);\n  }\n\n  MANY5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(5, actionORMethodDef);\n  }\n\n  MANY6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(6, actionORMethodDef);\n  }\n\n  MANY7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(7, actionORMethodDef);\n  }\n\n  MANY8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(8, actionORMethodDef);\n  }\n\n  MANY9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(9, actionORMethodDef);\n  }\n\n  MANY_SEP<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(0, options);\n  }\n\n  MANY_SEP1<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(1, options);\n  }\n\n  MANY_SEP2<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(2, options);\n  }\n\n  MANY_SEP3<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(3, options);\n  }\n\n  MANY_SEP4<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(4, options);\n  }\n\n  MANY_SEP5<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(5, options);\n  }\n\n  MANY_SEP6<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(6, options);\n  }\n\n  MANY_SEP7<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(7, options);\n  }\n\n  MANY_SEP8<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(8, options);\n  }\n\n  MANY_SEP9<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(9, options);\n  }\n\n  AT_LEAST_ONE<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(0, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    return this.atLeastOneInternal(1, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(2, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(3, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(4, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(5, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(6, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(7, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(8, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(9, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE_SEP<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(0, options);\n  }\n\n  AT_LEAST_ONE_SEP1<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(1, options);\n  }\n\n  AT_LEAST_ONE_SEP2<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(2, options);\n  }\n\n  AT_LEAST_ONE_SEP3<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(3, options);\n  }\n\n  AT_LEAST_ONE_SEP4<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(4, options);\n  }\n\n  AT_LEAST_ONE_SEP5<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(5, options);\n  }\n\n  AT_LEAST_ONE_SEP6<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(6, options);\n  }\n\n  AT_LEAST_ONE_SEP7<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(7, options);\n  }\n\n  AT_LEAST_ONE_SEP8<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(8, options);\n  }\n\n  AT_LEAST_ONE_SEP9<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(9, options);\n  }\n\n  RULE<T>(\n    this: MixedInParser,\n    name: string,\n    implementation: (...implArgs: any[]) => T,\n    config: IRuleConfig<T> = DEFAULT_RULE_CONFIG,\n  ): (idxInCallingRule?: number, ...args: any[]) => T | any {\n    if (includes(this.definedRulesNames, name)) {\n      const errMsg =\n        defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n          topLevelRule: name,\n          grammarName: this.className,\n        });\n\n      const error = {\n        message: errMsg,\n        type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n        ruleName: name,\n      };\n      this.definitionErrors.push(error);\n    }\n\n    this.definedRulesNames.push(name);\n\n    const ruleImplementation = this.defineRule(name, implementation, config);\n    (this as any)[name] = ruleImplementation;\n    return ruleImplementation;\n  }\n\n  OVERRIDE_RULE<T>(\n    this: MixedInParser,\n    name: string,\n    impl: (...implArgs: any[]) => T,\n    config: IRuleConfig<T> = DEFAULT_RULE_CONFIG,\n  ): (idxInCallingRule?: number, ...args: any[]) => T {\n    const ruleErrors: IParserDefinitionError[] = validateRuleIsOverridden(\n      name,\n      this.definedRulesNames,\n      this.className,\n    );\n    this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n\n    const ruleImplementation = this.defineRule(name, impl, config);\n    (this as any)[name] = ruleImplementation;\n    return ruleImplementation;\n  }\n\n  BACKTRACK<T>(\n    this: MixedInParser,\n    grammarRule: (...args: any[]) => T,\n    args?: any[],\n  ): () => boolean {\n    return function () {\n      // save org state\n      this.isBackTrackingStack.push(1);\n      const orgState = this.saveRecogState();\n      try {\n        grammarRule.apply(this, args);\n        // if no exception was thrown we have succeed parsing the rule.\n        return true;\n      } catch (e) {\n        if (isRecognitionException(e)) {\n          return false;\n        } else {\n          throw e;\n        }\n      } finally {\n        this.reloadRecogState(orgState);\n        this.isBackTrackingStack.pop();\n      }\n    };\n  }\n\n  // GAST export APIs\n  public getGAstProductions(this: MixedInParser): Record<string, Rule> {\n    return this.gastProductionsCache;\n  }\n\n  public getSerializedGastProductions(this: MixedInParser): ISerializedGast[] {\n    return serializeGrammar(values(this.gastProductionsCache));\n  }\n}\n","import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IParserConfig,\n  IRuleConfig,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  ParserMethod,\n  SubruleMethodOpts,\n  TokenType,\n  TokenTypeDictionary,\n  TokenVocabulary,\n} from \"@chevrotain/types\";\nimport {\n  clone,\n  every,\n  flatten,\n  has,\n  isArray,\n  isEmpty,\n  isObject,\n  reduce,\n  uniq,\n  values,\n} from \"lodash-es\";\nimport {\n  AT_LEAST_ONE_IDX,\n  AT_LEAST_ONE_SEP_IDX,\n  BITS_FOR_METHOD_TYPE,\n  BITS_FOR_OCCURRENCE_IDX,\n  MANY_IDX,\n  MANY_SEP_IDX,\n  OPTION_IDX,\n  OR_IDX,\n} from \"../../grammar/keys.js\";\nimport {\n  isRecognitionException,\n  MismatchedTokenException,\n  NotAllInputParsedException,\n} from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport {\n  AbstractNextTerminalAfterProductionWalker,\n  NextTerminalAfterAtLeastOneSepWalker,\n  NextTerminalAfterAtLeastOneWalker,\n  NextTerminalAfterManySepWalker,\n  NextTerminalAfterManyWalker,\n} from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG, IParserState, TokenMatcher } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport {\n  augmentTokenTypes,\n  isTokenType,\n  tokenStructuredMatcher,\n  tokenStructuredMatcherNoCategories,\n} from \"../../../scan/tokens.js\";\nimport { Rule } from \"@chevrotain/gast\";\nimport { ParserMethodInternal } from \"../types.js\";\n\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n  isBackTrackingStack: boolean[];\n  className: string;\n  RULE_STACK: number[];\n  RULE_OCCURRENCE_STACK: number[];\n  definedRulesNames: string[];\n  tokensMap: { [fqn: string]: TokenType };\n  gastProductionsCache: Record<string, Rule>;\n  shortRuleNameToFull: Record<string, string>;\n  fullRuleNameToShort: Record<string, number>;\n  // The shortName Index must be coded \"after\" the first 8bits to enable building unique lookahead keys\n  ruleShortNameIdx: number;\n  tokenMatcher: TokenMatcher;\n  subruleIdx: number;\n\n  initRecognizerEngine(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfig,\n  ) {\n    this.className = this.constructor.name;\n    // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n    this.shortRuleNameToFull = {};\n    this.fullRuleNameToShort = {};\n    this.ruleShortNameIdx = 256;\n    this.tokenMatcher = tokenStructuredMatcherNoCategories;\n    this.subruleIdx = 0;\n\n    this.definedRulesNames = [];\n    this.tokensMap = {};\n    this.isBackTrackingStack = [];\n    this.RULE_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n    this.gastProductionsCache = {};\n\n    if (has(config, \"serializedGrammar\")) {\n      throw Error(\n        \"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n          \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n          \"\\tFor Further details.\",\n      );\n    }\n\n    if (isArray(tokenVocabulary)) {\n      // This only checks for Token vocabularies provided as arrays.\n      // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n      // rather than all edge cases of empty Token vocabularies.\n      if (isEmpty(tokenVocabulary as any[])) {\n        throw Error(\n          \"A Token Vocabulary cannot be empty.\\n\" +\n            \"\\tNote that the first argument for the parser constructor\\n\" +\n            \"\\tis no longer a Token vector (since v4.0).\",\n        );\n      }\n\n      if (typeof (tokenVocabulary as any[])[0].startOffset === \"number\") {\n        throw Error(\n          \"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n            \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n            \"\\tFor Further details.\",\n        );\n      }\n    }\n\n    if (isArray(tokenVocabulary)) {\n      this.tokensMap = reduce(\n        tokenVocabulary,\n        (acc, tokType: TokenType) => {\n          acc[tokType.name] = tokType;\n          return acc;\n        },\n        {} as { [tokenName: string]: TokenType },\n      );\n    } else if (\n      has(tokenVocabulary, \"modes\") &&\n      every(flatten(values((<any>tokenVocabulary).modes)), isTokenType)\n    ) {\n      const allTokenTypes = flatten(values((<any>tokenVocabulary).modes));\n      const uniqueTokens = uniq(allTokenTypes);\n      this.tokensMap = <any>reduce(\n        uniqueTokens,\n        (acc, tokType: TokenType) => {\n          acc[tokType.name] = tokType;\n          return acc;\n        },\n        {} as { [tokenName: string]: TokenType },\n      );\n    } else if (isObject(tokenVocabulary)) {\n      this.tokensMap = clone(tokenVocabulary as TokenTypeDictionary);\n    } else {\n      throw new Error(\n        \"<tokensDictionary> argument must be An Array of Token constructors,\" +\n          \" A dictionary of Token constructors or an IMultiModeLexerDefinition\",\n      );\n    }\n\n    // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n    // parsed with a clear error message (\"expecting EOF but found ...\")\n    this.tokensMap[\"EOF\"] = EOF;\n\n    const allTokenTypes = has(tokenVocabulary, \"modes\")\n      ? flatten(values((<any>tokenVocabulary).modes))\n      : values(tokenVocabulary);\n    const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) =>\n      isEmpty(tokenConstructor.categoryMatches),\n    );\n\n    this.tokenMatcher = noTokenCategoriesUsed\n      ? tokenStructuredMatcherNoCategories\n      : tokenStructuredMatcher;\n\n    // Because ES2015+ syntax should be supported for creating Token classes\n    // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n    // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n    augmentTokenTypes(values(this.tokensMap));\n  }\n\n  defineRule<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleName: string,\n    impl: (...args: ARGS) => R,\n    config: IRuleConfig<R>,\n  ): ParserMethodInternal<ARGS, R> {\n    if (this.selfAnalysisDone) {\n      throw Error(\n        `Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n          `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`,\n      );\n    }\n    const resyncEnabled: boolean = has(config, \"resyncEnabled\")\n      ? (config.resyncEnabled as boolean) // assumes end user provides the correct config value/type\n      : DEFAULT_RULE_CONFIG.resyncEnabled;\n    const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n      ? (config.recoveryValueFunc as () => R) // assumes end user provides the correct config value/type\n      : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n\n    // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n    // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n    const shortName =\n      this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n\n    this.ruleShortNameIdx++;\n    this.shortRuleNameToFull[shortName] = ruleName;\n    this.fullRuleNameToShort[ruleName] = shortName;\n\n    let invokeRuleWithTry: ParserMethod<ARGS, R>;\n\n    // Micro optimization, only check the condition **once** on rule definition\n    // instead of **every single** rule invocation.\n    if (this.outputCst === true) {\n      invokeRuleWithTry = function invokeRuleWithTry(\n        this: MixedInParser,\n        ...args: ARGS\n      ): R {\n        try {\n          this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n          impl.apply(this, args);\n          const cst = this.CST_STACK[this.CST_STACK.length - 1];\n          this.cstPostRule(cst);\n          return cst as unknown as R;\n        } catch (e) {\n          return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc) as R;\n        } finally {\n          this.ruleFinallyStateUpdate();\n        }\n      };\n    } else {\n      invokeRuleWithTry = function invokeRuleWithTryCst(\n        this: MixedInParser,\n        ...args: ARGS\n      ): R {\n        try {\n          this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n          return impl.apply(this, args);\n        } catch (e) {\n          return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc) as R;\n        } finally {\n          this.ruleFinallyStateUpdate();\n        }\n      };\n    }\n\n    const wrappedGrammarRule: ParserMethodInternal<ARGS, R> = Object.assign(\n      invokeRuleWithTry as any,\n      { ruleName, originalGrammarAction: impl },\n    );\n\n    return wrappedGrammarRule;\n  }\n\n  invokeRuleCatch(\n    this: MixedInParser,\n    e: Error,\n    resyncEnabledConfig: boolean,\n    recoveryValueFunc: Function,\n  ): unknown {\n    const isFirstInvokedRule = this.RULE_STACK.length === 1;\n    // note the reSync is always enabled for the first rule invocation, because we must always be able to\n    // reSync with EOF and just output some INVALID ParseTree\n    // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n    // path is really the most valid one\n    const reSyncEnabled =\n      resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n\n    if (isRecognitionException(e)) {\n      const recogError: any = e;\n      if (reSyncEnabled) {\n        const reSyncTokType = this.findReSyncTokenType();\n        if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n          recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n          if (this.outputCst) {\n            const partialCstResult: any =\n              this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            return partialCstResult;\n          } else {\n            return recoveryValueFunc(e);\n          }\n        } else {\n          if (this.outputCst) {\n            const partialCstResult: any =\n              this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            recogError.partialCstResult = partialCstResult;\n          }\n          // to be handled Further up the call stack\n          throw recogError;\n        }\n      } else if (isFirstInvokedRule) {\n        // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n        this.moveToTerminatedState();\n        // the parser should never throw one of its own errors outside its flow.\n        // even if error recovery is disabled\n        return recoveryValueFunc(e);\n      } else {\n        // to be recovered Further up the call stack\n        throw recogError;\n      }\n    } else {\n      // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n      throw e;\n    }\n  }\n\n  // Implementation of parsing DSL\n  optionInternal<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number,\n  ): OUT | undefined {\n    const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n    return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n  }\n\n  optionInternalLogic<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number,\n    key: number,\n  ): OUT | undefined {\n    let lookAheadFunc = this.getLaFuncFromCache(key);\n    let action: GrammarAction<OUT>;\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF;\n      const predicate = actionORMethodDef.GATE;\n      // predicate present\n      if (predicate !== undefined) {\n        const orgLookaheadFunction = lookAheadFunc;\n        lookAheadFunc = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    if (lookAheadFunc.call(this) === true) {\n      return action.call(this);\n    }\n    return undefined;\n  }\n\n  atLeastOneInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(\n      AT_LEAST_ONE_IDX,\n      prodOccurrence,\n    );\n    return this.atLeastOneInternalLogic(\n      prodOccurrence,\n      actionORMethodDef,\n      laKey,\n    );\n  }\n\n  atLeastOneInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n    key: number,\n  ): void {\n    let lookAheadFunc = this.getLaFuncFromCache(key);\n    let action;\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF;\n      const predicate = actionORMethodDef.GATE;\n      // predicate present\n      if (predicate !== undefined) {\n        const orgLookaheadFunction = lookAheadFunc;\n        lookAheadFunc = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    if ((<Function>lookAheadFunc).call(this) === true) {\n      let notStuck = this.doSingleRepetition(action);\n      while (\n        (<Function>lookAheadFunc).call(this) === true &&\n        notStuck === true\n      ) {\n        notStuck = this.doSingleRepetition(action);\n      }\n    } else {\n      throw this.raiseEarlyExitException(\n        prodOccurrence,\n        PROD_TYPE.REPETITION_MANDATORY,\n        (<DSLMethodOptsWithErr<OUT>>actionORMethodDef).ERR_MSG,\n      );\n    }\n\n    // note that while it may seem that this can cause an error because by using a recursive call to\n    // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n    // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    this.attemptInRepetitionRecovery(\n      this.atLeastOneInternal,\n      [prodOccurrence, actionORMethodDef],\n      <any>lookAheadFunc,\n      AT_LEAST_ONE_IDX,\n      prodOccurrence,\n      NextTerminalAfterAtLeastOneWalker,\n    );\n  }\n\n  atLeastOneSepFirstInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(\n      AT_LEAST_ONE_SEP_IDX,\n      prodOccurrence,\n    );\n    this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n  }\n\n  atLeastOneSepFirstInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>,\n    key: number,\n  ): void {\n    const action = options.DEF;\n    const separator = options.SEP;\n\n    const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n\n    // 1st iteration\n    if (firstIterationLookaheadFunc.call(this) === true) {\n      (<GrammarAction<OUT>>action).call(this);\n\n      //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n      //  because it is only needed in error recovery scenarios.\n      const separatorLookAheadFunc = () => {\n        return this.tokenMatcher(this.LA(1), separator);\n      };\n\n      // 2nd..nth iterations\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator);\n        // No need for checking infinite loop here due to consuming the separator.\n        (<GrammarAction<OUT>>action).call(this);\n      }\n\n      // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n      this.attemptInRepetitionRecovery(\n        this.repetitionSepSecondInternal,\n        [\n          prodOccurrence,\n          separator,\n          separatorLookAheadFunc,\n          action,\n          NextTerminalAfterAtLeastOneSepWalker,\n        ],\n        separatorLookAheadFunc,\n        AT_LEAST_ONE_SEP_IDX,\n        prodOccurrence,\n        NextTerminalAfterAtLeastOneSepWalker,\n      );\n    } else {\n      throw this.raiseEarlyExitException(\n        prodOccurrence,\n        PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,\n        options.ERR_MSG,\n      );\n    }\n  }\n\n  manyInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n    return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n  }\n\n  manyInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    key: number,\n  ) {\n    let lookaheadFunction = this.getLaFuncFromCache(key);\n    let action;\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF;\n      const predicate = actionORMethodDef.GATE;\n      // predicate present\n      if (predicate !== undefined) {\n        const orgLookaheadFunction = lookaheadFunction;\n        lookaheadFunction = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    let notStuck = true;\n    while (lookaheadFunction.call(this) === true && notStuck === true) {\n      notStuck = this.doSingleRepetition(action);\n    }\n\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    this.attemptInRepetitionRecovery(\n      this.manyInternal,\n      [prodOccurrence, actionORMethodDef],\n      <any>lookaheadFunction,\n      MANY_IDX,\n      prodOccurrence,\n      NextTerminalAfterManyWalker,\n      // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n      // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n      // An infinite loop cannot occur as:\n      // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n      // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n      notStuck,\n    );\n  }\n\n  manySepFirstInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: ManySepMethodOpts<OUT>,\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(\n      MANY_SEP_IDX,\n      prodOccurrence,\n    );\n    this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n  }\n\n  manySepFirstInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: ManySepMethodOpts<OUT>,\n    key: number,\n  ): void {\n    const action = options.DEF;\n    const separator = options.SEP;\n    const firstIterationLaFunc = this.getLaFuncFromCache(key);\n\n    // 1st iteration\n    if (firstIterationLaFunc.call(this) === true) {\n      action.call(this);\n\n      const separatorLookAheadFunc = () => {\n        return this.tokenMatcher(this.LA(1), separator);\n      };\n      // 2nd..nth iterations\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator);\n        // No need for checking infinite loop here due to consuming the separator.\n        action.call(this);\n      }\n\n      // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n      this.attemptInRepetitionRecovery(\n        this.repetitionSepSecondInternal,\n        [\n          prodOccurrence,\n          separator,\n          separatorLookAheadFunc,\n          action,\n          NextTerminalAfterManySepWalker,\n        ],\n        separatorLookAheadFunc,\n        MANY_SEP_IDX,\n        prodOccurrence,\n        NextTerminalAfterManySepWalker,\n      );\n    }\n  }\n\n  repetitionSepSecondInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    separator: TokenType,\n    separatorLookAheadFunc: () => boolean,\n    action: GrammarAction<OUT>,\n    nextTerminalAfterWalker: typeof AbstractNextTerminalAfterProductionWalker,\n  ): void {\n    while (separatorLookAheadFunc()) {\n      // note that this CONSUME will never enter recovery because\n      // the separatorLookAheadFunc checks that the separator really does exist.\n      this.CONSUME(separator);\n      action.call(this);\n    }\n\n    // we can only arrive to this function after an error\n    // has occurred (hence the name 'second') so the following\n    // IF will always be entered, its possible to remove it...\n    // however it is kept to avoid confusion and be consistent.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    /* istanbul ignore else */\n    this.attemptInRepetitionRecovery(\n      this.repetitionSepSecondInternal,\n      [\n        prodOccurrence,\n        separator,\n        separatorLookAheadFunc,\n        action,\n        nextTerminalAfterWalker,\n      ],\n      separatorLookAheadFunc,\n      AT_LEAST_ONE_SEP_IDX,\n      prodOccurrence,\n      nextTerminalAfterWalker,\n    );\n  }\n\n  doSingleRepetition(this: MixedInParser, action: Function): any {\n    const beforeIteration = this.getLexerPosition();\n    action.call(this);\n    const afterIteration = this.getLexerPosition();\n\n    // This boolean will indicate if this repetition progressed\n    // or if we are \"stuck\" (potential infinite loop in the repetition).\n    return afterIteration > beforeIteration;\n  }\n\n  orInternal<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n    occurrence: number,\n  ): T {\n    const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n    const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n\n    const laFunc = this.getLaFuncFromCache(laKey);\n    const altIdxToTake = laFunc.call(this, alts);\n    if (altIdxToTake !== undefined) {\n      const chosenAlternative: any = alts[altIdxToTake];\n      return chosenAlternative.ALT.call(this);\n    }\n    this.raiseNoAltException(\n      occurrence,\n      (altsOrOpts as OrMethodOpts<unknown>).ERR_MSG,\n    );\n  }\n\n  ruleFinallyStateUpdate(this: MixedInParser): void {\n    this.RULE_STACK.pop();\n    this.RULE_OCCURRENCE_STACK.pop();\n\n    // NOOP when cst is disabled\n    this.cstFinallyStateUpdate();\n\n    if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n      const firstRedundantTok = this.LA(1);\n      const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n        firstRedundant: firstRedundantTok,\n        ruleName: this.getCurrRuleFullName(),\n      });\n      this.SAVE_ERROR(\n        new NotAllInputParsedException(errMsg, firstRedundantTok),\n      );\n    }\n  }\n\n  subruleInternal<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    idx: number,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    let ruleResult;\n    try {\n      const args = options !== undefined ? options.ARGS : undefined;\n      this.subruleIdx = idx;\n      ruleResult = ruleToCall.apply(this, args);\n      this.cstPostNonTerminal(\n        ruleResult,\n        options !== undefined && options.LABEL !== undefined\n          ? options.LABEL\n          : ruleToCall.ruleName,\n      );\n      return ruleResult;\n    } catch (e) {\n      throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n    }\n  }\n\n  subruleInternalError(\n    this: MixedInParser,\n    e: any,\n    options: SubruleMethodOpts<unknown[]> | undefined,\n    ruleName: string,\n  ): void {\n    if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n      this.cstPostNonTerminal(\n        e.partialCstResult,\n        options !== undefined && options.LABEL !== undefined\n          ? options.LABEL\n          : ruleName,\n      );\n\n      delete e.partialCstResult;\n    }\n    throw e;\n  }\n\n  consumeInternal(\n    this: MixedInParser,\n    tokType: TokenType,\n    idx: number,\n    options: ConsumeMethodOpts | undefined,\n  ): IToken {\n    let consumedToken!: IToken;\n    try {\n      const nextToken = this.LA(1);\n      if (this.tokenMatcher(nextToken, tokType) === true) {\n        this.consumeToken();\n        consumedToken = nextToken;\n      } else {\n        this.consumeInternalError(tokType, nextToken, options);\n      }\n    } catch (eFromConsumption) {\n      consumedToken = this.consumeInternalRecovery(\n        tokType,\n        idx,\n        eFromConsumption,\n      );\n    }\n\n    this.cstPostTerminal(\n      options !== undefined && options.LABEL !== undefined\n        ? options.LABEL\n        : tokType.name,\n      consumedToken,\n    );\n    return consumedToken;\n  }\n\n  consumeInternalError(\n    this: MixedInParser,\n    tokType: TokenType,\n    nextToken: IToken,\n    options: ConsumeMethodOpts | undefined,\n  ): void {\n    let msg;\n    const previousToken = this.LA(0);\n    if (options !== undefined && options.ERR_MSG) {\n      msg = options.ERR_MSG;\n    } else {\n      msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: tokType,\n        actual: nextToken,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName(),\n      });\n    }\n    throw this.SAVE_ERROR(\n      new MismatchedTokenException(msg, nextToken, previousToken),\n    );\n  }\n\n  consumeInternalRecovery(\n    this: MixedInParser,\n    tokType: TokenType,\n    idx: number,\n    eFromConsumption: Error,\n  ): IToken {\n    // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n    // but the original syntax could have been parsed successfully without any backtracking + recovery\n    if (\n      this.recoveryEnabled &&\n      // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n      eFromConsumption.name === \"MismatchedTokenException\" &&\n      !this.isBackTracking()\n    ) {\n      const follows = this.getFollowsForInRuleRecovery(<any>tokType, idx);\n      try {\n        return this.tryInRuleRecovery(<any>tokType, follows);\n      } catch (eFromInRuleRecovery) {\n        if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n          // failed in RuleRecovery.\n          // throw the original error in order to trigger reSync error recovery\n          throw eFromConsumption;\n        } else {\n          throw eFromInRuleRecovery;\n        }\n      }\n    } else {\n      throw eFromConsumption;\n    }\n  }\n\n  saveRecogState(this: MixedInParser): IParserState {\n    // errors is a getter which will clone the errors array\n    const savedErrors = this.errors;\n    const savedRuleStack = clone(this.RULE_STACK);\n    return {\n      errors: savedErrors,\n      lexerState: this.exportLexerState(),\n      RULE_STACK: savedRuleStack,\n      CST_STACK: this.CST_STACK,\n    };\n  }\n\n  reloadRecogState(this: MixedInParser, newState: IParserState) {\n    this.errors = newState.errors;\n    this.importLexerState(newState.lexerState);\n    this.RULE_STACK = newState.RULE_STACK;\n  }\n\n  ruleInvocationStateUpdate(\n    this: MixedInParser,\n    shortName: number,\n    fullName: string,\n    idxInCallingRule: number,\n  ): void {\n    this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n    this.RULE_STACK.push(shortName);\n    // NOOP when cst is disabled\n    this.cstInvocationStateUpdate(fullName);\n  }\n\n  isBackTracking(this: MixedInParser): boolean {\n    return this.isBackTrackingStack.length !== 0;\n  }\n\n  getCurrRuleFullName(this: MixedInParser): string {\n    const shortName = this.getLastExplicitRuleShortName();\n    return this.shortRuleNameToFull[shortName];\n  }\n\n  shortRuleNameToFullName(this: MixedInParser, shortName: number) {\n    return this.shortRuleNameToFull[shortName];\n  }\n\n  public isAtEndOfInput(this: MixedInParser): boolean {\n    return this.tokenMatcher(this.LA(1), EOF);\n  }\n\n  public reset(this: MixedInParser): void {\n    this.resetLexerState();\n    this.subruleIdx = 0;\n    this.isBackTrackingStack = [];\n    this.errors = [];\n    this.RULE_STACK = [];\n    // TODO: extract a specific reset for TreeBuilder trait\n    this.CST_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n  }\n}\n","import {\n  IParserConfig,\n  IParserErrorMessageProvider,\n  IRecognitionException,\n} from \"@chevrotain/types\";\nimport {\n  EarlyExitException,\n  isRecognitionException,\n  NoViableAltException,\n} from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport {\n  getLookaheadPathsForOptionalProd,\n  getLookaheadPathsForOr,\n  PROD_TYPE,\n} from \"../../grammar/lookahead.js\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n  _errors: IRecognitionException[];\n  errorMessageProvider: IParserErrorMessageProvider;\n\n  initErrorHandler(config: IParserConfig) {\n    this._errors = [];\n    this.errorMessageProvider = has(config, \"errorMessageProvider\")\n      ? (config.errorMessageProvider as IParserErrorMessageProvider) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n  }\n\n  SAVE_ERROR(\n    this: MixedInParser,\n    error: IRecognitionException,\n  ): IRecognitionException {\n    if (isRecognitionException(error)) {\n      error.context = {\n        ruleStack: this.getHumanReadableRuleStack(),\n        ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n      };\n      this._errors.push(error);\n      return error;\n    } else {\n      throw Error(\n        \"Trying to save an Error which is not a RecognitionException\",\n      );\n    }\n  }\n\n  get errors(): IRecognitionException[] {\n    return clone(this._errors);\n  }\n\n  set errors(newErrors: IRecognitionException[]) {\n    this._errors = newErrors;\n  }\n\n  // TODO: consider caching the error message computed information\n  raiseEarlyExitException(\n    this: MixedInParser,\n    occurrence: number,\n    prodType: PROD_TYPE,\n    userDefinedErrMsg: string | undefined,\n  ): never {\n    const ruleName = this.getCurrRuleFullName();\n    const ruleGrammar = this.getGAstProductions()[ruleName];\n    const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(\n      occurrence,\n      ruleGrammar,\n      prodType,\n      this.maxLookahead,\n    );\n    const insideProdPaths = lookAheadPathsPerAlternative[0];\n    const actualTokens = [];\n    for (let i = 1; i <= this.maxLookahead; i++) {\n      actualTokens.push(this.LA(i));\n    }\n    const msg = this.errorMessageProvider.buildEarlyExitMessage({\n      expectedIterationPaths: insideProdPaths,\n      actual: actualTokens,\n      previous: this.LA(0),\n      customUserDescription: userDefinedErrMsg,\n      ruleName: ruleName,\n    });\n\n    throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n  }\n\n  // TODO: consider caching the error message computed information\n  raiseNoAltException(\n    this: MixedInParser,\n    occurrence: number,\n    errMsgTypes: string | undefined,\n  ): never {\n    const ruleName = this.getCurrRuleFullName();\n    const ruleGrammar = this.getGAstProductions()[ruleName];\n    // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n    const lookAheadPathsPerAlternative = getLookaheadPathsForOr(\n      occurrence,\n      ruleGrammar,\n      this.maxLookahead,\n    );\n\n    const actualTokens = [];\n    for (let i = 1; i <= this.maxLookahead; i++) {\n      actualTokens.push(this.LA(i));\n    }\n    const previousToken = this.LA(0);\n\n    const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n      expectedPathsPerAlt: lookAheadPathsPerAlternative,\n      actual: actualTokens,\n      previous: previousToken,\n      customUserDescription: errMsgTypes,\n      ruleName: this.getCurrRuleFullName(),\n    });\n\n    throw this.SAVE_ERROR(\n      new NoViableAltException(errMsg, this.LA(1), previousToken),\n    );\n  }\n}\n","import {\n  ISyntacticContentAssistPath,\n  IToken,\n  ITokenGrammarPath,\n  TokenType,\n} from \"@chevrotain/types\";\nimport {\n  NextAfterTokenWalker,\n  nextPossibleTokensAfter,\n} from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nimport { MixedInParser } from \"./parser_traits.js\";\n\nexport class ContentAssist {\n  initContentAssist() {}\n\n  public computeContentAssist(\n    this: MixedInParser,\n    startRuleName: string,\n    precedingInput: IToken[],\n  ): ISyntacticContentAssistPath[] {\n    const startRuleGast = this.gastProductionsCache[startRuleName];\n\n    if (isUndefined(startRuleGast)) {\n      throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n    }\n\n    return nextPossibleTokensAfter(\n      [startRuleGast],\n      precedingInput,\n      this.tokenMatcher,\n      this.maxLookahead,\n    );\n  }\n\n  // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n  // TODO: should this be more explicitly part of the public API?\n  public getNextPossibleTokenTypes(\n    this: MixedInParser,\n    grammarPath: ITokenGrammarPath,\n  ): TokenType[] {\n    const topRuleName = first(grammarPath.ruleStack)!;\n    const gastProductions = this.getGAstProductions();\n    const topProduction = gastProductions[topRuleName];\n    const nextPossibleTokenTypes = new NextAfterTokenWalker(\n      topProduction,\n      grammarPath,\n    ).startWalking();\n    return nextPossibleTokenTypes;\n  }\n}\n","import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  CstNode,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IParserConfig,\n  IProduction,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  SubruleMethodOpts,\n  TokenType,\n} from \"@chevrotain/types\";\nimport {\n  forEach,\n  has,\n  isArray,\n  isFunction,\n  last as peek,\n  some,\n} from \"lodash-es\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport {\n  augmentTokenTypes,\n  hasShortKeyProperty,\n} from \"../../../scan/tokens.js\";\nimport {\n  createToken,\n  createTokenInstance,\n} from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nimport { ParserMethodInternal } from \"../types.js\";\n\ntype ProdWithDef = IProduction & { definition?: IProduction[] };\nconst RECORDING_NULL_OBJECT = {\n  description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\n\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\n\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(\n  RFT,\n  \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n  // Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n  // cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n);\nObject.freeze(RECORDING_PHASE_TOKEN);\n\nconst RECORDING_PHASE_CSTNODE: CstNode = {\n  name:\n    \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n  children: {},\n};\n\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n  recordingProdStack: ProdWithDef[];\n  RECORDING_PHASE: boolean;\n\n  initGastRecorder(this: MixedInParser, config: IParserConfig): void {\n    this.recordingProdStack = [];\n    this.RECORDING_PHASE = false;\n  }\n\n  enableRecording(this: MixedInParser): void {\n    this.RECORDING_PHASE = true;\n\n    this.TRACE_INIT(\"Enable Recording\", () => {\n      /**\n       * Warning Dark Voodoo Magic upcoming!\n       * We are \"replacing\" the public parsing DSL methods API\n       * With **new** alternative implementations on the Parser **instance**\n       *\n       * So far this is the only way I've found to avoid performance regressions during parsing time.\n       * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n       *   implementations directly instead.\n       */\n      for (let i = 0; i < 10; i++) {\n        const idx = i > 0 ? i : \"\";\n        this[`CONSUME${idx}` as \"CONSUME\"] = function (arg1, arg2) {\n          return this.consumeInternalRecord(arg1, i, arg2);\n        };\n        this[`SUBRULE${idx}` as \"SUBRULE\"] = function (arg1, arg2) {\n          return this.subruleInternalRecord(arg1, i, arg2) as any;\n        };\n        this[`OPTION${idx}` as \"OPTION\"] = function (arg1) {\n          return this.optionInternalRecord(arg1, i);\n        };\n        this[`OR${idx}` as \"OR\"] = function (arg1) {\n          return this.orInternalRecord(arg1, i);\n        };\n        this[`MANY${idx}` as \"MANY\"] = function (arg1) {\n          this.manyInternalRecord(i, arg1);\n        };\n        this[`MANY_SEP${idx}` as \"MANY_SEP\"] = function (arg1) {\n          this.manySepFirstInternalRecord(i, arg1);\n        };\n        this[`AT_LEAST_ONE${idx}` as \"AT_LEAST_ONE\"] = function (arg1) {\n          this.atLeastOneInternalRecord(i, arg1);\n        };\n        this[`AT_LEAST_ONE_SEP${idx}` as \"AT_LEAST_ONE_SEP\"] = function (arg1) {\n          this.atLeastOneSepFirstInternalRecord(i, arg1);\n        };\n      }\n\n      // DSL methods with the idx(suffix) as an argument\n      this[`consume`] = function (idx, arg1, arg2) {\n        return this.consumeInternalRecord(arg1, idx, arg2);\n      };\n      this[`subrule`] = function (idx, arg1, arg2) {\n        return this.subruleInternalRecord(arg1, idx, arg2) as any;\n      };\n      this[`option`] = function (idx, arg1) {\n        return this.optionInternalRecord(arg1, idx);\n      };\n      this[`or`] = function (idx, arg1) {\n        return this.orInternalRecord(arg1, idx);\n      };\n      this[`many`] = function (idx, arg1) {\n        this.manyInternalRecord(idx, arg1);\n      };\n      this[`atLeastOne`] = function (idx, arg1) {\n        this.atLeastOneInternalRecord(idx, arg1);\n      };\n\n      this.ACTION = this.ACTION_RECORD;\n      this.BACKTRACK = this.BACKTRACK_RECORD;\n      this.LA = this.LA_RECORD;\n    });\n  }\n\n  disableRecording(this: MixedInParser) {\n    this.RECORDING_PHASE = false;\n    // By deleting these **instance** properties, any future invocation\n    // will be deferred to the original methods on the **prototype** object\n    // This seems to get rid of any incorrect optimizations that V8 may\n    // do during the recording phase.\n    this.TRACE_INIT(\"Deleting Recording methods\", () => {\n      const that: any = this;\n\n      for (let i = 0; i < 10; i++) {\n        const idx = i > 0 ? i : \"\";\n        delete that[`CONSUME${idx}`];\n        delete that[`SUBRULE${idx}`];\n        delete that[`OPTION${idx}`];\n        delete that[`OR${idx}`];\n        delete that[`MANY${idx}`];\n        delete that[`MANY_SEP${idx}`];\n        delete that[`AT_LEAST_ONE${idx}`];\n        delete that[`AT_LEAST_ONE_SEP${idx}`];\n      }\n\n      delete that[`consume`];\n      delete that[`subrule`];\n      delete that[`option`];\n      delete that[`or`];\n      delete that[`many`];\n      delete that[`atLeastOne`];\n\n      delete that.ACTION;\n      delete that.BACKTRACK;\n      delete that.LA;\n    });\n  }\n\n  //   Parser methods are called inside an ACTION?\n  //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n  // @ts-expect-error -- noop place holder\n  ACTION_RECORD<T>(this: MixedInParser, impl: () => T): T {\n    // NO-OP during recording\n  }\n\n  // Executing backtracking logic will break our recording logic assumptions\n  BACKTRACK_RECORD<T>(\n    grammarRule: (...args: any[]) => T,\n    args?: any[],\n  ): () => boolean {\n    return () => true;\n  }\n\n  // LA is part of the official API and may be used for custom lookahead logic\n  // by end users who may forget to wrap it in ACTION or inside a GATE\n  LA_RECORD(howMuch: number): IToken {\n    // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n    // On LA return EOF at the end of the input so an infinite loop may occur.\n    return END_OF_FILE;\n  }\n\n  topLevelRuleRecord(name: string, def: Function): Rule {\n    try {\n      const newTopLevelRule = new Rule({ definition: [], name: name });\n      newTopLevelRule.name = name;\n      this.recordingProdStack.push(newTopLevelRule);\n      def.call(this);\n      this.recordingProdStack.pop();\n      return newTopLevelRule;\n    } catch (originalError) {\n      if (originalError.KNOWN_RECORDER_ERROR !== true) {\n        try {\n          originalError.message =\n            originalError.message +\n            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n        } catch (mutabilityError) {\n          // We may not be able to modify the original error object\n          throw originalError;\n        }\n      }\n      throw originalError;\n    }\n  }\n\n  // Implementation of parsing DSL\n  optionInternalRecord<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number,\n  ): OUT {\n    return recordProd.call(this, Option, actionORMethodDef, occurrence);\n  }\n\n  atLeastOneInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n  }\n\n  atLeastOneSepFirstInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    recordProd.call(\n      this,\n      RepetitionMandatoryWithSeparator,\n      options,\n      occurrence,\n      HANDLE_SEPARATOR,\n    );\n  }\n\n  manyInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n  }\n\n  manySepFirstInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    options: ManySepMethodOpts<OUT>,\n  ): void {\n    recordProd.call(\n      this,\n      RepetitionWithSeparator,\n      options,\n      occurrence,\n      HANDLE_SEPARATOR,\n    );\n  }\n\n  orInternalRecord<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n    occurrence: number,\n  ): T {\n    return recordOrProd.call(this, altsOrOpts, occurrence);\n  }\n\n  subruleInternalRecord<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    occurrence: number,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R | CstNode {\n    assertMethodIdxIsValid(occurrence);\n    if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n      const error: any = new Error(\n        `<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n          ` expecting a Parser method reference but got: <${JSON.stringify(\n            ruleToCall,\n          )}>` +\n          `\\n inside top level rule: <${\n            (<Rule>this.recordingProdStack[0]).name\n          }>`,\n      );\n      error.KNOWN_RECORDER_ERROR = true;\n      throw error;\n    }\n\n    const prevProd: any = peek(this.recordingProdStack);\n    const ruleName = ruleToCall.ruleName;\n    const newNoneTerminal = new NonTerminal({\n      idx: occurrence,\n      nonTerminalName: ruleName,\n      label: options?.LABEL,\n      // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n      referencedRule: undefined,\n    });\n    prevProd.definition.push(newNoneTerminal);\n\n    return this.outputCst\n      ? RECORDING_PHASE_CSTNODE\n      : <any>RECORDING_NULL_OBJECT;\n  }\n\n  consumeInternalRecord(\n    this: MixedInParser,\n    tokType: TokenType,\n    occurrence: number,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    assertMethodIdxIsValid(occurrence);\n    if (!hasShortKeyProperty(tokType)) {\n      const error: any = new Error(\n        `<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n          ` expecting a TokenType reference but got: <${JSON.stringify(\n            tokType,\n          )}>` +\n          `\\n inside top level rule: <${\n            (<Rule>this.recordingProdStack[0]).name\n          }>`,\n      );\n      error.KNOWN_RECORDER_ERROR = true;\n      throw error;\n    }\n    const prevProd: any = peek(this.recordingProdStack);\n    const newNoneTerminal = new Terminal({\n      idx: occurrence,\n      terminalType: tokType,\n      label: options?.LABEL,\n    });\n    prevProd.definition.push(newNoneTerminal);\n\n    return RECORDING_PHASE_TOKEN;\n  }\n}\n\nfunction recordProd(\n  prodConstructor: any,\n  mainProdArg: any,\n  occurrence: number,\n  handleSep: boolean = false,\n): any {\n  assertMethodIdxIsValid(occurrence);\n  const prevProd: any = peek(this.recordingProdStack);\n  const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n\n  const newProd = new prodConstructor({ definition: [], idx: occurrence });\n  if (handleSep) {\n    newProd.separator = mainProdArg.SEP;\n  }\n  if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n  }\n\n  this.recordingProdStack.push(newProd);\n  grammarAction.call(this);\n  prevProd.definition.push(newProd);\n  this.recordingProdStack.pop();\n\n  return RECORDING_NULL_OBJECT;\n}\n\nfunction recordOrProd(mainProdArg: any, occurrence: number): any {\n  assertMethodIdxIsValid(occurrence);\n  const prevProd: any = peek(this.recordingProdStack);\n  // Only an array of alternatives\n  const hasOptions = isArray(mainProdArg) === false;\n  const alts: IOrAlt<unknown>[] =\n    hasOptions === false ? mainProdArg : mainProdArg.DEF;\n\n  const newOrProd = new Alternation({\n    definition: [],\n    idx: occurrence,\n    ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n  });\n  if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n  }\n\n  const hasPredicates = some(alts, (currAlt: any) => isFunction(currAlt.GATE));\n  newOrProd.hasPredicates = hasPredicates;\n\n  prevProd.definition.push(newOrProd);\n\n  forEach(alts, (currAlt) => {\n    const currAltFlat = new Alternative({ definition: [] });\n    newOrProd.definition.push(currAltFlat);\n    if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n      currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES as boolean; // assumes end user provides the correct config value/type\n    }\n    // **implicit** ignoreAmbiguities due to usage of gate\n    else if (has(currAlt, \"GATE\")) {\n      currAltFlat.ignoreAmbiguities = true;\n    }\n    this.recordingProdStack.push(currAltFlat);\n    currAlt.ALT.call(this);\n    this.recordingProdStack.pop();\n  });\n  return RECORDING_NULL_OBJECT;\n}\n\nfunction getIdxSuffix(idx: number): string {\n  return idx === 0 ? \"\" : `${idx}`;\n}\n\nfunction assertMethodIdxIsValid(idx: number): void {\n  if (idx < 0 || idx > MAX_METHOD_IDX) {\n    const error: any = new Error(\n      // The stack trace will contain all the needed details\n      `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n        `Idx value must be a none negative value smaller than ${\n          MAX_METHOD_IDX + 1\n        }`,\n    );\n    error.KNOWN_RECORDER_ERROR = true;\n    throw error;\n  }\n}\n","import { IParserConfig } from \"@chevrotain/types\";\nimport { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n  traceInitPerf: boolean | number;\n  traceInitMaxIdent: number;\n  traceInitIndent: number;\n\n  initPerformanceTracer(config: IParserConfig) {\n    if (has(config, \"traceInitPerf\")) {\n      const userTraceInitPerf = config.traceInitPerf;\n      const traceIsNumber = typeof userTraceInitPerf === \"number\";\n      this.traceInitMaxIdent = traceIsNumber\n        ? <number>userTraceInitPerf\n        : Infinity;\n      this.traceInitPerf = traceIsNumber\n        ? userTraceInitPerf > 0\n        : (userTraceInitPerf as boolean); // assumes end user provides the correct config value/type\n    } else {\n      this.traceInitMaxIdent = 0;\n      this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n    }\n\n    this.traceInitIndent = -1;\n  }\n\n  TRACE_INIT<T>(this: MixedInParser, phaseDesc: string, phaseImpl: () => T): T {\n    // No need to optimize this using NOOP pattern because\n    // It is not called in a hot spot...\n    if (this.traceInitPerf === true) {\n      this.traceInitIndent++;\n      const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        console.log(`${indent}--> <${phaseDesc}>`);\n      }\n      const { time, value } = timer(phaseImpl);\n      /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n      const traceMethod = time > 10 ? console.warn : console.log;\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n      }\n      this.traceInitIndent--;\n      return value;\n    } else {\n      return phaseImpl();\n    }\n  }\n}\n","export function applyMixins(derivedCtor: any, baseCtors: any[]) {\n  baseCtors.forEach((baseCtor) => {\n    const baseProto = baseCtor.prototype;\n    Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n      if (propName === \"constructor\") {\n        return;\n      }\n\n      const basePropDescriptor = Object.getOwnPropertyDescriptor(\n        baseProto,\n        propName,\n      );\n      // Handle Accessors\n      if (\n        basePropDescriptor &&\n        (basePropDescriptor.get || basePropDescriptor.set)\n      ) {\n        Object.defineProperty(\n          derivedCtor.prototype,\n          propName,\n          basePropDescriptor,\n        );\n      } else {\n        derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n      }\n    });\n  });\n}\n","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport {\n  defaultGrammarValidatorErrorProvider,\n  defaultParserErrorProvider,\n} from \"../errors_public.js\";\nimport {\n  resolveGrammar,\n  validateGrammar,\n} from \"../grammar/gast/gast_resolver_public.js\";\nimport {\n  CstNode,\n  IParserConfig,\n  IRecognitionException,\n  IRuleConfig,\n  IToken,\n  TokenType,\n  TokenVocabulary,\n} from \"@chevrotain/types\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\n\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { MixedInParser } from \"./traits/parser_traits.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { IParserDefinitionError } from \"../grammar/types.js\";\nimport { Rule } from \"@chevrotain/gast\";\nimport { IParserConfigInternal, ParserMethodInternal } from \"./types.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\n\nexport const END_OF_FILE = createTokenInstance(\n  EOF,\n  \"\",\n  NaN,\n  NaN,\n  NaN,\n  NaN,\n  NaN,\n  NaN,\n);\nObject.freeze(END_OF_FILE);\n\nexport type TokenMatcher = (token: IToken, tokType: TokenType) => boolean;\n\nexport const DEFAULT_PARSER_CONFIG: Required<\n  Omit<IParserConfigInternal, \"lookaheadStrategy\">\n> = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 3,\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false,\n});\n\nexport const DEFAULT_RULE_CONFIG: Required<IRuleConfig<any>> = Object.freeze({\n  recoveryValueFunc: () => undefined,\n  resyncEnabled: true,\n});\n\nexport enum ParserDefinitionErrorType {\n  INVALID_RULE_NAME = 0,\n  DUPLICATE_RULE_NAME = 1,\n  INVALID_RULE_OVERRIDE = 2,\n  DUPLICATE_PRODUCTIONS = 3,\n  UNRESOLVED_SUBRULE_REF = 4,\n  LEFT_RECURSION = 5,\n  NONE_LAST_EMPTY_ALT = 6,\n  AMBIGUOUS_ALTS = 7,\n  CONFLICT_TOKENS_RULES_NAMESPACE = 8,\n  INVALID_TOKEN_NAME = 9,\n  NO_NON_EMPTY_LOOKAHEAD = 10,\n  AMBIGUOUS_PREFIX_ALTS = 11,\n  TOO_MANY_ALTS = 12,\n  CUSTOM_LOOKAHEAD_VALIDATION = 13,\n}\n\nexport interface IParserDuplicatesDefinitionError\n  extends IParserDefinitionError {\n  dslName: string;\n  occurrence: number;\n  parameter?: string;\n}\n\nexport interface IParserEmptyAlternativeDefinitionError\n  extends IParserDefinitionError {\n  occurrence: number;\n  alternative: number;\n}\n\nexport interface IParserAmbiguousAlternativesDefinitionError\n  extends IParserDefinitionError {\n  occurrence: number | string;\n  alternatives: number[];\n}\n\nexport interface IParserUnresolvedRefDefinitionError\n  extends IParserDefinitionError {\n  unresolvedRefName: string;\n}\n\nexport interface IParserState {\n  errors: IRecognitionException[];\n  lexerState: any;\n  RULE_STACK: number[];\n  CST_STACK: CstNode[];\n}\n\nexport type Predicate = () => boolean;\n\nexport function EMPTY_ALT(): () => undefined;\nexport function EMPTY_ALT<T>(value: T): () => T;\nexport function EMPTY_ALT(value: any = undefined) {\n  return function () {\n    return value;\n  };\n}\n\nexport class Parser {\n  // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n  static DEFER_DEFINITION_ERRORS_HANDLING: boolean = false;\n\n  /**\n   *  @deprecated use the **instance** method with the same name instead\n   */\n  static performSelfAnalysis(parserInstance: Parser): void {\n    throw Error(\n      \"The **static** `performSelfAnalysis` method has been deprecated.\" +\n        \"\\t\\nUse the **instance** method with the same name instead.\",\n    );\n  }\n\n  public performSelfAnalysis(this: MixedInParser): void {\n    this.TRACE_INIT(\"performSelfAnalysis\", () => {\n      let defErrorsMsgs;\n\n      this.selfAnalysisDone = true;\n      const className = this.className;\n\n      this.TRACE_INIT(\"toFastProps\", () => {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        toFastProperties(this);\n      });\n\n      this.TRACE_INIT(\"Grammar Recording\", () => {\n        try {\n          this.enableRecording();\n          // Building the GAST\n          forEach(this.definedRulesNames, (currRuleName) => {\n            const wrappedRule = (this as any)[\n              currRuleName\n            ] as ParserMethodInternal<unknown[], unknown>;\n            const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n            let recordedRuleGast!: Rule;\n            this.TRACE_INIT(`${currRuleName} Rule`, () => {\n              recordedRuleGast = this.topLevelRuleRecord(\n                currRuleName,\n                originalGrammarAction,\n              );\n            });\n            this.gastProductionsCache[currRuleName] = recordedRuleGast;\n          });\n        } finally {\n          this.disableRecording();\n        }\n      });\n\n      let resolverErrors: IParserDefinitionError[] = [];\n      this.TRACE_INIT(\"Grammar Resolving\", () => {\n        resolverErrors = resolveGrammar({\n          rules: values(this.gastProductionsCache),\n        });\n        this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n      });\n\n      this.TRACE_INIT(\"Grammar Validations\", () => {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if (isEmpty(resolverErrors) && this.skipValidations === false) {\n          const validationErrors = validateGrammar({\n            rules: values(this.gastProductionsCache),\n            tokenTypes: values(this.tokensMap),\n            errMsgProvider: defaultGrammarValidatorErrorProvider,\n            grammarName: className,\n          });\n          const lookaheadValidationErrors = validateLookahead({\n            lookaheadStrategy: this.lookaheadStrategy,\n            rules: values(this.gastProductionsCache),\n            tokenTypes: values(this.tokensMap),\n            grammarName: className,\n          });\n          this.definitionErrors = this.definitionErrors.concat(\n            validationErrors,\n            lookaheadValidationErrors,\n          );\n        }\n      });\n\n      // this analysis may fail if the grammar is not perfectly valid\n      if (isEmpty(this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (this.recoveryEnabled) {\n          this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n            const allFollows = computeAllProdsFollows(\n              values(this.gastProductionsCache),\n            );\n            this.resyncFollows = allFollows;\n          });\n        }\n\n        this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n          this.lookaheadStrategy.initialize?.({\n            rules: values(this.gastProductionsCache),\n          });\n          this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n        });\n      }\n\n      if (\n        !Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n        !isEmpty(this.definitionErrors)\n      ) {\n        defErrorsMsgs = map(\n          this.definitionErrors,\n          (defError) => defError.message,\n        );\n        throw new Error(\n          `Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\n            \"\\n-------------------------------\\n\",\n          )}`,\n        );\n      }\n    });\n  }\n\n  definitionErrors: IParserDefinitionError[] = [];\n  selfAnalysisDone = false;\n  protected skipValidations: boolean;\n\n  constructor(tokenVocabulary: TokenVocabulary, config: IParserConfig) {\n    const that: MixedInParser = this as any;\n    that.initErrorHandler(config);\n    that.initLexerAdapter();\n    that.initLooksAhead(config);\n    that.initRecognizerEngine(tokenVocabulary, config);\n    that.initRecoverable(config);\n    that.initTreeBuilder(config);\n    that.initContentAssist();\n    that.initGastRecorder(config);\n    that.initPerformanceTracer(config);\n\n    if (has(config, \"ignoredIssues\")) {\n      throw new Error(\n        \"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n          \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n          \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n          \"For further details.\",\n      );\n    }\n\n    this.skipValidations = has(config, \"skipValidations\")\n      ? (config.skipValidations as boolean) // casting assumes the end user passing the correct type\n      : DEFAULT_PARSER_CONFIG.skipValidations;\n  }\n}\n\napplyMixins(Parser, [\n  Recoverable,\n  LooksAhead,\n  TreeBuilder,\n  LexerAdapter,\n  RecognizerEngine,\n  RecognizerApi,\n  ErrorHandler,\n  ContentAssist,\n  GastRecorder,\n  PerformanceTracer,\n]);\n\nexport class CstParser extends Parser {\n  constructor(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfigInternal = DEFAULT_PARSER_CONFIG,\n  ) {\n    const configClone = clone(config);\n    configClone.outputCst = true;\n    super(tokenVocabulary, configClone);\n  }\n}\n\nexport class EmbeddedActionsParser extends Parser {\n  constructor(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfigInternal = DEFAULT_PARSER_CONFIG,\n  ) {\n    const configClone = clone(config);\n    configClone.outputCst = false;\n    super(tokenVocabulary, configClone);\n  }\n}\n","import { createToken } from \"chevrotain\"\n\nfunction getTokens(v2Compatible) {\n\n  let Symbols = {\n    OR: '|',\n    ELSE: '||',\n    DYNAMIC: '$',\n    STATIC: '#',\n    ENTITY: '&',\n    OPEN_GATE: '@',\n    CLOSE_GATE: '@',\n    PENDING_GATE: '@@',\n    OPEN_SILENT: '{',\n    CLOSE_SILENT: '}',\n  };\n\n  let v2Symbols = {\n    OPEN_CHOICE: '(',\n    CLOSE_CHOICE: ')',\n    OPEN_WEIGHT: '[',\n    CLOSE_WEIGHT: ']',\n    CONTINUATION: '\\\\',\n  };\n\n  let v3Symbols = {\n    OPEN_CHOICE: '[',\n    CLOSE_CHOICE: ']',\n    OPEN_WEIGHT: '^', // also allows (int), eg. (3)\n    CLOSE_WEIGHT: '^',\n    CONTINUATION: '~',\n  };\n\n  Object.assign(Symbols, v2Compatible ? v2Symbols : v3Symbols);\n\n  const Escaped = {};\n  Object.entries(Symbols).forEach(([k, v]) => { Escaped[k] = escapeRegex(v) });\n\n  const ENTITY_PATTERN = /&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-fA-F]{1,6});/i;\n  const PENDING_GATE_PATTERN = new RegExp(`${Escaped.PENDING_GATE}([0-9]{9,11})`)\n\n  Escaped.SPECIAL = Object.values(Escaped).join('').replace(/[<>]/g, ''); // allow <> for html \n  Symbols.PENDING_GATE_RE = new RegExp(PENDING_GATE_PATTERN.source, 'g'); // for unresolved gates\n\n  const ExitGate = createToken({\n    name: \"ExitGate\",\n    pattern: new RegExp(`\\\\s*${Escaped.CLOSE_GATE}`),\n    pop_mode: true\n  });\n\n  const Gate = createToken({\n    name: \"Gate\",\n    pattern: new RegExp(`[^${Escaped.CLOSE_GATE}]+`)\n  });\n\n  const PendingGate = createToken({\n    name: \"PendingGate\",\n    pattern: PENDING_GATE_PATTERN\n  });\n\n  const EnterGate = createToken({\n    name: \"EnterGate\",\n    pattern: new RegExp(`${Escaped.OPEN_GATE}\\\\s*`),\n    push_mode: \"gate_mode\"\n  });\n\n  const DYN = createToken({ name: \"DYN\", pattern: new RegExp(Escaped.DYNAMIC) });\n  const STAT = createToken({ name: \"STAT\", pattern: new RegExp(Escaped.STATIC) });\n  const OC = createToken({ name: \"OC\", pattern: new RegExp(Escaped.OPEN_CHOICE + '\\\\s*') });\n  const CC = createToken({ name: \"CC\", pattern: new RegExp(`\\\\s*${Escaped.CLOSE_CHOICE}`) });\n  const OR = createToken({ name: \"OR\", pattern: /\\s*\\|\\s*/ });\n  const ELSE = createToken({ name: \"ELSE\", pattern: /\\s*\\|\\|\\s*/ });\n  const EQ = createToken({ name: \"EQ\", pattern: /\\s*=\\s*/ });\n  const TF = createToken({ name: \"TF\", pattern: /\\.[A-Za-z_0-9][A-Za-z_0-9]*(\\(\\))?/ });\n  const OS = createToken({ name: \"OS\", pattern: new RegExp(`${Escaped.OPEN_SILENT}\\\\s*`) });\n  const CS = createToken({ name: \"CS\", pattern: new RegExp(`\\\\s*${Escaped.CLOSE_SILENT}`) });\n  const SYM = createToken({ name: \"SYM\", pattern: new RegExp(`(${Escaped.DYNAMIC}|${Escaped.STATIC}[A-Za-z_0-9])[A-Za-z_0-9]*`) });\n\n  const Entity = createToken({ name: \"Entity\", pattern: ENTITY_PATTERN });\n  const Weight = createToken({ name: \"Weight\", pattern: new RegExp(`\\\\s*${Escaped.OPEN_WEIGHT}.+${Escaped.CLOSE_WEIGHT}\\\\s*`) });\n  const Raw = createToken({ name: \"Raw\", pattern: new RegExp(`[^${Escaped.SPECIAL}]+`) });\n\n  const normalMode = [Entity, Weight, ELSE, OC, CC, OR, EQ, SYM, DYN, STAT, TF, OS, CS, PendingGate, Raw, EnterGate];\n  const gateMode = [Gate, ExitGate];\n\n  const multiMode = {\n    modes: {\n      normal: normalMode,\n      gate_mode: gateMode\n    },\n    defaultMode: 'normal'\n  };\n\n  return { tokens: multiMode, Constants: { Symbols, Escaped } };\n}\n\nfunction escapeRegex(s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n// console.log(getTokens().tokens.modes.normal.map(t => t.name));\n\nexport { getTokens };","\nimport { CstParser } from \"chevrotain\"\n\nclass RiScriptParser extends CstParser {\n\n  constructor(allTokens) {\n    super(allTokens, { nodeLocationTracking: \"full\" });\n    this.atomTypes = ['silent', 'assign', 'symbol', 'choice', 'pgate', 'text', 'entity'];\n    this.rawTypes = ['Raw', 'STAT'];\n    this.buildRules();\n  }\n\n  parse(opts) {\n    this.input = opts.tokens; // superclass member (do not change)\n\n    let cst = this.script();\n    if (this.errors.length > 0) throw Error\n      (\"[PARSING]\\n\" + this.errors[0].message);\n    return cst;\n  }\n\n  buildRules() {\n\n    const $ = this, Tokens = this.tokensMap;\n\n    $.RULE(\"script\", () => {\n      $.MANY(() => $.SUBRULE($.expr));\n    });\n\n    $.RULE(\"pgate\", () => {\n      $.CONSUME(Tokens.PendingGate);\n      $.MANY(() => $.CONSUME(Tokens.TF));\n    });\n\n    $.RULE(\"entity\", () => {\n      $.CONSUME(Tokens.Entity);\n    });\n\n    $.RULE(\"gate\", () => {\n      $.CONSUME(Tokens.EnterGate);\n      $.MANY(() => $.CONSUME(Tokens.Gate));\n      $.CONSUME(Tokens.ExitGate);\n    });\n\n    $.RULE(\"silent\", () => {\n      $.CONSUME(Tokens.OS);\n      $.OPTION1(() => $.SUBRULE($.gate));\n      $.CONSUME(Tokens.SYM);\n      $.OPTION2(() => {\n        $.CONSUME(Tokens.EQ);\n        $.SUBRULE($.expr);\n      });\n      $.CONSUME(Tokens.CS);\n    });\n\n    $.RULE(\"assign\", () => {\n      $.CONSUME(Tokens.SYM);\n      $.CONSUME(Tokens.EQ);\n      $.SUBRULE($.expr);\n    });\n\n    $.RULE(\"symbol\", () => {\n      $.CONSUME(Tokens.SYM);\n      $.MANY(() => $.CONSUME(Tokens.TF));\n    });\n\n    $.RULE(\"accept\", () => {\n      $.SUBRULE($.or_expr);\n    });\n\n    $.RULE(\"reject\", () => {\n      $.SUBRULE($.or_expr);\n    });\n\n    $.RULE(\"or_expr\", () => {\n      $.MANY_SEP({\n        SEP: Tokens.OR,\n        DEF: () => $.SUBRULE($.wexpr)\n      });\n    });\n\n    // choice: (LP (wexpr OR)* wexpr RP) transform*;\n    $.RULE(\"choice\", () => {\n      $.CONSUME(Tokens.OC)\n      $.OPTION1(() => $.SUBRULE($.gate));\n      $.SUBRULE($.accept)\n      // $.MANY_SEP({\n      //   SEP: Tokens.OR,\n      //   DEF: () => $.SUBRULE($.wexpr)\n      // });\n      $.OPTION2(() => {\n        $.CONSUME(Tokens.ELSE);\n        $.SUBRULE($.reject)\n      });\n      $.CONSUME(Tokens.CC);\n      $.MANY(() => $.CONSUME(Tokens.TF));\n    });\n\n    $.RULE(\"wexpr\", () => {\n      $.MANY(() => {\n        $.OR([\n          { ALT: () => $.SUBRULE($.expr) },\n          { ALT: () => $.CONSUME(Tokens.Weight) },\n        ])\n      });\n    });\n\n    $.RULE(\"expr\", () => {\n      $.AT_LEAST_ONE(() => $.SUBRULE($.atom));\n    });\n\n    $.RULE(\"atom\", () => {\n      $.OR(this.atomTypes.map(t => ({ ALT: () => $.SUBRULE($[t]) })));\n    });\n\n    $.RULE(\"text\", () => {\n      // this.rawTypes.map(t => console.log(t, Tokens[t]));\n      $.OR(this.rawTypes.map(t => ({ ALT: () => $.CONSUME(Tokens[t]) })));\n\n      // $.OR([\n      //   { ALT: () => $.CONSUME(Tokens.STAT) },\n      //   { ALT: () => $.CONSUME(Tokens.Raw) },\n      // ])\n    });\n\n    this.performSelfAnalysis(); // keep\n  }\n}\n\nexport { RiScriptParser };","\nclass BaseVisitor {\n  constructor(riScript) {\n    this.input = 0;\n\n    this.path = '';\n    this.tracePath = true;\n    this.scripting = riScript;\n    this.warnOnInvalidGates = false;\n    this.RiScript = this.scripting.constructor; // class hack\n  }\n\n  isCstNode(o) {\n    return (typeof o === 'object' &&\n      ('accept' in o || ('name' in o && 'location' in o && 'children' in o)));\n  }\n\n  visit(cstNode, param) {\n    if (Array.isArray(cstNode)) {\n      cstNode = cstNode[0];\n    }\n    if (typeof cstNode === 'undefined') {\n      return undefined;\n    }\n    if (!this.isCstNode(cstNode)) {\n      throw Error('Non-cstNode passed to visit: ' + JSON.stringify(cstNode));\n    }\n\n    const { name, location } = cstNode;\n\n    this.nodeText = this.input.substring(\n      location.startOffset,\n      location.endOffset + 1\n    );\n\n    if (typeof this[name] !== 'function') {\n      throw Error('BaseVisitor.visit: expecting function for this[' +\n        `${name}], found ${typeof this[name]}: ${JSON.stringify(this[name])}`);\n    }\n\n    if (this.tracePath && !/(expr|atom|silent)/.test(name)) {\n      this.path += name + '.';\n    }\n    return this[name](cstNode.children, param);\n  }\n\n  validateVisitor() {\n    /* no-op */\n  }\n}\n\nclass RiScriptVisitor extends BaseVisitor {\n  constructor(riScript, context = {}) {\n    super(riScript); // stored as global RiScript (TODO)\n    this.context = context;\n\n    this.trace = 0;\n    this.choices = {};\n    this.isNoRepeat = false;\n    this.symbols = this.scripting.Symbols;\n    this.escaped = this.scripting.Escaped;\n\n    // lookups\n    this.statics = {};\n    this.dynamics = {};\n    this.pendingGates = {};\n    this.pendingSymbols = new Set();\n\n    this.validateVisitor(); // keep\n  }\n\n  start(opts = {}) {\n    this.input = opts.input;\n    this.trace = opts.trace;\n    this.traceTx = opts.traceTx;\n    if (!opts.cst) throw Error('no cst');\n    return super.visit(opts.cst);\n  }\n\n  script(ctx) {\n    this.order = 0;\n    const count = ctx.expr ? ctx.expr.length : 0;\n    this.print('script', \"'\" + this.RiScript._escapeText(this.input)\n      + \"' :: \" + count + ' expression(s)');\n    if (!count) return '';\n    if (Object.keys(ctx).length !== 1) throw Error('script: invalid expr');\n    return this.visit(ctx.expr);\n  }\n\n  expr(ctx) {\n    // this.print('expr', ctx);\n    const types = Object.keys(ctx);\n    if (types.length !== 1) throw Error('invalid expr: ' + types.length);\n    const exprs = ctx.atom.map((c) => this.visit(c));\n    // handle special cases of the form: \"not [quite|] far enough\"\n    for (let i = 1; i < exprs.length - 1; i++) {\n      if (\n        exprs[i].length === 0 &&\n        exprs[i - 1].endsWith(' ') &&\n        exprs[i + 1].startsWith(' ')\n      ) {\n        exprs[i + 1] = exprs[i + 1].substring(1);\n      }\n    }\n    return exprs.join('');\n  }\n\n  wexpr(ctx) {\n    this.print('wexpr');\n  }\n\n  gate(ctx) {\n    // returns { decision: [accept | reject] } or { decision: 'defer', operands: [] }\n\n    if (ctx.Gate.length !== 1) throw Error('Invalid gate: ' + ctx.Gate);\n\n    let mingoQuery;\n    const raw = ctx.Gate[0].image;\n    try {\n      mingoQuery = this.scripting._query(raw);\n    } catch (e) {\n      if (!this.warnOnInvalidGates) {\n        throw Error(`Invalid gate[2]: \"@${raw}@\"\\n\\nRootCause -> ${e}`);\n      }\n      if (!this.scripting.RiTa.SILENT && !this.scripting.silent) {\n        console.warn(`[WARN] Ignoring invalid gate: @${raw}@\\n`, e);\n      }\n      return { decision: 'accept' };\n    }\n\n    const resolvedOps = {};\n    const unresolvedOps = [];\n    const operands = mingoQuery.operands();\n    operands.forEach((sym) => {\n      let { result, resolved, isStatic, isUser } = this.checkContext(sym);\n\n      if (typeof result === 'function') {\n        // while {} ?\n        result = result.call(); // call it\n        resolved = !this.scripting.isParseable(result);\n      }\n      if (typeof result === 'undefined' || !resolved) {\n        unresolvedOps.push(sym);\n      } else {\n        // add to appropriate context\n        if (isStatic) {\n          this.statics[sym] = result;\n        } else if (isUser) {\n          this.context[sym] = result;\n        } else {\n          this.dynamics[sym] = result;\n        }\n        // store resolved result\n        resolvedOps[sym] = result;\n      }\n    });\n\n    if (\n      Object.keys(resolvedOps).length + unresolvedOps.length !==\n      operands.length\n    ) { throw Error('invalid operands'); }\n\n    // if we have unresolved operands, return them (and defer)\n    if (unresolvedOps.length) { return { decision: 'defer', operands: unresolvedOps }; }\n\n    let result = mingoQuery.test(resolvedOps); // do test\n    if (!result && this.castValues(resolvedOps)) {\n      result = mingoQuery.test(resolvedOps); // redo test after casting\n    }\n\n    return { decision: result ? 'accept' : 'reject' };\n  }\n\n  assign(ctx, opts) {\n    const sym = ctx.SYM[0].image;\n    let value;\n    let info;\n    const ident = sym.replace(this.scripting.AnySymbolRE, '');\n    const isStatic = sym.startsWith(this.symbols.STATIC);\n\n    if (isStatic) {\n      value = this.visit(ctx.expr);\n      if (this.scripting.isParseable(value)) {\n        this.statics[ident] = value; // store in lookup table ??\n        value = this.inlineAssignment(ident, ctx.TF, value);\n      } else {\n        this.statics[ident] = value; // store in lookup table\n        this.pendingSymbols.delete(ident); // no longer pending\n        this.trace &&\n          console.log('  [pending.delete]', sym,\n            this.pendingSymbols.length\n              ? JSON.stringify(this.pendingSymbols)\n              : ''\n          );\n      }\n      info = `${sym} = ${this.RiScript._escapeText(value)}` +\n        ` [#static] ${opts?.silent ? '{silent}' : ''}`;\n    } else {\n      const $ = this;\n\n      // dynamic: store as func to be resolved later, perhaps many times\n      value = () => $.visit(ctx.expr);\n      info = `${sym} = <f*:pending>` + (opts?.silent ? '{silent}' : '');\n\n      // NOTE: this function may contain a choice, which needs to be handled\n      // when called from a symbol with a norepeat transform (??) TODO: test\n\n      this.dynamics[ident] = value; // store in lookup table\n    }\n    this.print('assign', info);\n\n    return value;\n  }\n\n  silent(ctx) {\n    if (ctx.EQ) {\n      this.assign(ctx, { silent: true });\n    } else {\n      this.symbol(ctx, { silent: true });\n    }\n    return '';\n  }\n\n  atom(ctx) {\n    let result;\n    const types = Object.keys(ctx);\n    if (types.length !== 1) throw Error('invalid atom: ' + types);\n    this.scripting.parser.atomTypes.forEach((type) => {\n      const context = ctx[type];\n      if (context) {\n        if (context.length !== 1) {\n          throw Error(type + ': bad length -> ' + ctx[type].length);\n        }\n        // console.log(type + ':', context[0]);\n        result = this.visit(context[0]);\n      }\n    });\n\n    // pending function, call it\n    if (typeof result === 'function') {\n      result = result.call();\n    }\n    return result;\n  }\n\n  text(ctx) {\n    // if (ctx.Raw.length !== 1 && ctx.STAT.length !== 1 ) throw Error('[1] invalid text');\n    if (Object.keys(ctx).length !== 1) throw Error('[2] invalid text');\n    const tok = ctx?.Raw || ctx?.STAT;\n    const image = tok[0].image;\n    this.print('text', this.RiScript._escapeText(\"'\" + image + \"'\"));\n    return image;\n  }\n\n  entity(ctx) {\n    return this.nodeText;\n  }\n\n  symbol(ctx, opts) {\n    if (ctx.SYM.length !== 1) throw Error('[1] invalid symbol');\n\n    const original = this.nodeText;\n    const symbol = ctx.SYM[0].image;\n    const ident = symbol.replace(this.scripting.AnySymbolRE, '');\n\n    this.isNoRepeat = this.hasNoRepeat(ctx.TF);\n\n    if (this.pendingSymbols.has(ident)) {\n      this.print('symbol', `${symbol} [is-pending]`);\n      return original;\n    }\n\n    // lookup: result is either a value, a function, or undef\n    let { result, isStatic, isUser, resolved } = this.checkContext(ident);\n\n    if (!isStatic && this.scripting.StaticSymbol.test(symbol)) {\n      if (!this.scripting.EntityRE.test(symbol)) {\n        throw Error(`Attempt to refer to dynamic symbol '${ident}' as` +\n          ` ${this.symbols.STATIC}${ident}, did you mean $${ident}?`);\n      }\n    }\n\n    if (typeof result === 'function') {\n      // while {} ?\n      result = result.call(); // call it\n      resolved = !this.scripting.isParseable(result);\n    }\n\n    if (this.isNoRepeat && (isStatic || isUser)) {\n      this.isNoRepeat = false;\n      const msg = 'Attempt to call norepeat() on ' + (isStatic\n        ? \"static symbol '\" + symbol + \"'. Did you mean to use '\" +\n        this.symbols.DYNAMIC + ident + \"' ?\"\n        : \"non-dynamic symbol '\" + ident + \"'. Did you mean to define '\" +\n        this.symbols.DYNAMIC + ident + \"' in riscript?\");\n      throw Error(msg);\n    }\n\n    if (typeof result === 'undefined') {\n      // nothing found, defer\n      this.print('symbol', symbol + \" -> '\" + original + \"' ctx=\" +\n        this.lookupsToString(), '[deferred]', opts?.silent ? '{silent}' : '');\n      return original;\n    }\n\n    let info = original + \" -> '\" + result + \"'\" + (opts?.silent ? ' {silent}' : '');\n\n    // defer if we still have unresolved riscript\n    if (typeof result === 'string' && !resolved) {\n      if (isStatic) {\n        this.pendingSymbols.add(ident);\n        result = this.inlineAssignment(ident, ctx.TF, result);\n        this.print('symbol*', `${original} -> ${result} :: pending.add(${ident})`);\n      } else {\n        if (ctx.TF) result = this.restoreTransforms(result, ctx.TF);\n        this.print('symbol', info);\n      }\n      return result;\n    }\n\n    if (isStatic) {\n      // store !untransformed! result in static context\n      this.statics[ident] = result; // ADDED 8/18/23 - FIXED 10/8/23\n    }\n\n    if (ctx.TF) {\n      result = this.applyTransforms(result, ctx.TF);\n      info += \" -> '\" + result + \"'\";\n      // info += \" -> \" + ctx.TF.map(tf => ` ${tf.image} -> `) + '\\'' + result + \"'\";\n      // console.log(\"INFO: \" + info);\n      if (this.isNoRepeat) info += ' (norepeat)';\n    }\n\n    this.print('symbol', info);\n\n    // resolved, so remove from pending\n    if (this.pendingSymbols.has(ident)) {\n      this.trace && console.log('  [$pending.delete]', (isStatic ? '#' : '$') + ident,\n        this.pendingSymbols.length ? JSON.stringify(this.pendingSymbols) : '');\n      this.pendingSymbols.delete(ident);\n    }\n    this.isNoRepeat = false; // reset\n\n    return result;\n  }\n\n  pgate(ctx) {\n    this.print('pgate', this.nodeText);\n    // new RegExp(`^${this.symbols.PENDING_GATE}`\n    const original = this.nodeText;\n    const ident = original.replace(this.symbols.PENDING_GATE, '');\n    const lookup = this.pendingGates[ident];\n\n    if (!lookup) {\n      throw Error('no pending gate=\"' + original + '\" pgates=' +\n        JSON.stringify(Object.keys(this.pendingGates)));\n    }\n\n    const stillUnresolved = lookup.operands.some((o) => {\n      let { result, resolved } = this.checkContext(o);\n      if (typeof result === 'function') {\n        // while {} ?\n        result = result.call(); // call it\n        resolved = !this.scripting.isParseable(result);\n      }\n      return typeof result === 'undefined' || !resolved;\n    });\n\n    if (stillUnresolved) return original; // still deferred\n\n    const result = this.choice(lookup.deferredContext); // execute the gate\n    return result;\n  }\n\n  else(ctx) {\n    // this.print('else', this.nodeText);\n    return this.visit(ctx.expr).trim();\n  }\n\n  choice(ctx, opts) {\n    const $ = this.symbols;\n    let rawGate, gateResult;\n    const original = this.nodeText;\n    let info = original;\n    const choiceKey = this.RiScript._stringHash(original + ' #' + this.choiceId(ctx));\n\n    if (!this.isNoRepeat && this.hasNoRepeat(ctx.TF)) {\n      throw Error('noRepeat() not allowed on choice (use a $variable instead): ' + original);\n    }\n\n    let decision = 'accept';\n    if (opts?.forceReject) {\n      decision = 'reject';\n    } else {\n      if (ctx.gate) {\n        // do we have a gate\n        rawGate = ctx.gate[0].children.Gate[0].image;\n        gateResult = this.visit(ctx.gate);\n        decision = gateResult.decision;\n        info += `\\n  [gate] ${rawGate} -> ${decision !== 'defer'\n          ? decision.toUpperCase()\n          : `DEFER ${$.PENDING_GATE}${choiceKey}`\n          }  ${this.lookupsToString()}`;\n      }\n\n      if (gateResult) {\n        if (gateResult.decision === 'defer') {\n          this.pendingGates[choiceKey] = {\n            deferredContext: ctx,\n            operands: gateResult.operands\n          };\n          return `${$.PENDING_GATE}${choiceKey}`; // gate defers\n        }\n      }\n    }\n\n    if (decision === 'reject' && !('reject' in ctx)) {\n      return ''; // rejected without reject expr, return ''\n    }\n\n    const orExpr = ctx[decision]?.[0]?.children?.or_expr?.[0]; // yuck\n    const options = this.parseOptions(orExpr); // get options\n    if (!options) throw Error('No options in choice: ' + original);\n\n    let value = null;\n    const excluded = [];\n    let restored = false;\n    while (value === null) {\n      value = this.choose(options, excluded).value;\n\n      // if we still have script, defer until its resolved\n      if (this.scripting.isParseable(value)) {\n        if (ctx.TF) value = this.restoreTransforms(value, ctx.TF);\n        restored = true;\n        break;\n      }\n\n      // apply any remaining transforms\n      if (ctx.TF) value = this.applyTransforms(value, ctx.TF);\n\n      // we have 'norepeat' but value was already used, try again\n      if (this.isNoRepeat && value === this.choices[choiceKey]) {\n        this.print('choice.reject', value + ' [norepeat]');\n        excluded.push(value);\n        value = null;\n        continue;\n      }\n    }\n\n    if (!restored) this.choices[choiceKey] = value; // put in choice cache\n\n    return value;\n  }\n\n  // Helpers ================================================\n\n  hasNoRepeat(tfs) {\n    const transforms = this.RiScript._transformNames(tfs);\n    if (transforms.length) {\n      return transforms.includes('nr') || transforms.includes('norepeat');\n    }\n    return false;\n  }\n\n  checkContext(ident) {\n    let isStatic = false;\n    let isUser = false;\n    let result;\n\n    if (ident.length === 0) {\n      return { result: '', resolved: true, isStatic, isUser };\n    }\n\n    // check for dynamic symbol: $var\n    result = this.dynamics[ident];\n    if (typeof result === 'undefined') {\n      // no dynamic\n\n      // check for static symbol: #var\n      result = this.statics[ident];\n      if (typeof result !== 'undefined') {\n        isStatic = true; // found static\n      }\n    }\n\n    if (typeof result === 'undefined') {\n      // no static\n      // check for user-defined symbol: context[var]\n      result = this.context[ident];\n      if (typeof result !== 'undefined') {\n        isUser = true; // found user symbol\n      } else {\n        // check for user-defined dynamic? context[$var]\n        result = this.context[this.symbols.DYNAMIC + ident];\n        if (typeof result !== 'undefined') {\n          // no static\n          // note: treat as normal dynamic, isUser = false\n        }\n      }\n    }\n\n    // do we have more script to deal with ?\n    const resolved = !this.scripting.isParseable(result);\n\n    return { result, isStatic, isUser, resolved }; // TODO: replace with 'type'\n  }\n\n  inlineAssignment(ident, tfs, result) {\n    const $ = this.symbols;\n    const lhs = $.STATIC + ident;\n    const rhs = this.restoreTransforms(result, tfs);\n    result = $.OPEN_CHOICE + (lhs + '=' + rhs) + $.CLOSE_CHOICE;\n    return result;\n  }\n\n  choiceId(ctx) {\n    if (!ctx.OC || !ctx.OC.length) throw Error('invalid choice');\n    return ctx.OC[0].startOffset + '.' + ctx.OC[0].endOffset;\n  }\n\n  parseOptions(ctx) {\n    const options = [];\n    if (ctx && ctx?.children?.wexpr) {\n      const wexprs = ctx.children.wexpr;\n      for (let i = 0; i < wexprs.length; i++) {\n        const wexpr = wexprs[i];\n        const expr = wexpr.children.expr;\n        if (expr && expr.length != 1) { throw Error('invalid choice-expr: ' + expr.length); }\n\n        const weight = wexpr.children.Weight;\n        if (weight) {\n          if (weight.length != 1) { throw Error('invalid weight: ' + weight.length); }\n          let mult = 1;\n          try {\n            mult = parseInt(\n              this.symbols.CLOSE_WEIGHT.length\n                ? weight[0].image.trim().slice(1, -1)\n                : weight[0].image.trim().slice(1)\n            );\n          } catch (e) {\n            console.log('EX: ' + mult);\n          }\n          Array.from({ length: mult }, () => options.push(expr));\n        } else {\n          options.push(expr || '');\n        }\n      }\n    }\n    return options;\n  }\n\n  chooseUnique(options, choiceKey) {\n    // not used\n\n    const isUnique = false;\n    while (options.length && !isUnique) {\n      const { index, value } = this.choose(options);\n      if (value !== this.choices[choiceKey]) return value;\n      // console.log(`Skipping ${index}: '${value}'`);\n      options.splice(index, 1);\n    }\n    throw Error('No remaining options');\n  }\n\n  choose(options, excludes = []) {\n    if (!options || !options.length) {\n      throw Error('Invalid choice: no options');\n    }\n\n    const valid = options.filter((x) => !excludes.includes(x));\n    if (!valid.length) {\n      throw Error('Invalid choice: no valid options');\n    }\n\n    const index = this.scripting.RiTa.randi(valid.length);\n\n    let value = ''; const selected = valid[index];\n\n    if (typeof selected === 'string') {\n      this.print('choice.text', \"''\");\n    } else {\n      // if (typeof selected === 'object') {\n      this.path = 'choice.' + this.path;\n      value = this.visit(selected); // cstNode\n    }\n\n    if (typeof value === 'string') value = value.trim();\n\n    return { index, value };\n  }\n\n  applyTransforms(value, txs) {\n    if (this.traceTx) { console.log('applyTransforms', this.formatTxs(...arguments)); }\n    for (let i = 0; i < txs.length; i++) {\n      value = this.applyTransform(value, txs[i]);\n    }\n    return value;\n  }\n\n  // value is not yet resolved, so store with transform for later\n  restoreTransforms(value, txs) {\n    if (typeof value === 'string') {\n      const patt = new RegExp(\n        '^' + this.escaped.OPEN_CHOICE + '.*' + this.escaped.CLOSE_CHOICE + '$'\n      );\n      if (!patt.test(value)) {\n        // wrap in choice to preserve\n        value = this.symbols.OPEN_CHOICE + value + this.symbols.CLOSE_CHOICE;\n      }\n      if (txs) {\n        txs.forEach((tx) => (value += tx.image)); // append transform strings\n      }\n      if (this.traceTx) console.log('restoreTransforms:', value);\n    }\n    return value;\n  }\n\n  castValues(obj) {\n    let madeCast = false;\n    Object.entries(obj).forEach(([k, v]) => {\n      const num = parseFloat(v);\n      if (!isNaN(num)) {\n        madeCast = true;\n        obj[k] = num; // update object with casted value\n      }\n    });\n    return madeCast;\n  }\n\n  contextIsResolved(table) {\n    let allResolved = true;\n    Object.entries(table).forEach(([key, val]) => {\n      if (!this.scripting.isParseable(val)) {\n        allResolved = false;\n      }\n    });\n    return allResolved;\n  }\n\n  applyTransform(target, transform) {\n    const image = transform.image;\n    let result;\n    const raw = target + image;\n    const tx = image.substring(1).replace(/\\(\\)$/, '');\n\n    // function in dynamics\n    if (typeof this.dynamics[tx] === 'function') {\n      result = this.dynamics[tx](target);\n    }\n    // function in statics\n    else if (typeof this.statics[tx] === 'function') {\n      result = this.statics[tx](target);\n    }\n    // function in context\n    else if (typeof this.context[tx] === 'function') {\n      result = this.context[tx](target);\n    }\n\n    // function in transforms\n    else if (typeof this.RiScript.transforms[tx] === 'function') {\n      result = this.RiScript.transforms[tx](target);\n    }\n    // member functions (usually on String)\n    else if (typeof target[tx] === 'function') {\n      result = target[tx]();\n    } else {\n      // check for property\n      if (target.hasOwnProperty(tx)) {\n        result = target[tx];\n      } else {\n        if (!this.scripting.RiTa.SILENT && !this.scripting.silent) {\n          console.warn('[WARN] Unresolved transform: ' + raw);\n        }\n\n        /* Replace transform parens so as not to trigger\n           RiScript.isParseable (for example, in v2) 0 */\n        result = raw.replace(/\\(\\)$/, '&lpar;&rpar;');\n      }\n    }\n\n    if (this.trace) { console.log(`${this.tindent()}[transform] ${raw} -> '${result}'`); }\n\n    return result;\n  }\n\n  lookupsToString() {\n    const dyns = {};\n    const stats = {};\n    Object.entries(this.dynamics || {}).forEach(\n      ([k, v]) => (dyns[`$${k} `] = v)\n    );\n    Object.entries(this.statics || {}).forEach(\n      ([k, v]) => (stats[`#${k} `] = v)\n    );\n    return JSON.stringify({ ...this.context, ...stats, ...dyns }, (k, v) =>\n      typeof v === 'function' ? '<f*:pending>' : v\n    ).replace(/\"/g, '');\n  }\n\n  formatTxs(value, txs) {\n    return value + txs.map((tx) => tx.image.replace(/()/, '') + '()').join('');\n  }\n\n  print(s, ...args) {\n    if (this.trace) {\n      if (this.path && s !== 'script') {\n        s = this.path.replace(/\\.$/, '');\n      }\n      console.log(++this.order, `[${s}]`, ...args);\n      this.path = '';\n    }\n  }\n\n  tindent() {\n    return ' '.repeat((this.order + '').length + 1);\n  }\n}\n\nexport { RiScriptVisitor };\n\n// console.log('&#33; -> '+decode('&#33;'));\n// console.log('&amp; -> '+decode('&amp;'));\n","import { RiScript } from './riscript.js'\n\nclass RiGrammar {\n\n  constructor(rules = {}, context = {}) {\n    if (typeof rules === 'string') {\n      rules = parseJSON(rules);\n    }\n    \n    if (typeof rules !== 'object') {\n      throw Error('RiGrammar: expecting object, found ' + typeof rules);\n    }\n\n    this.scripting = new RiScript();\n    this.context = context;\n    this.setRules(rules);\n  }\n\n  static expand(rules, context, opts) {\n    return new RiGrammar(rules, context).expand(opts);\n  }\n\n  addTransform() {\n    return RiScript.addTransform(...arguments);\n  }\n  removeTransform() {\n    return RiScript.removeTransform(...arguments);\n  }\n  getTransforms() {\n    return RiScript.transforms;\n  }\n\n  equals(rg) {\n    return rg.toJSON() === this.toJSON();\n  }\n\n  expand(opts = {}) {\n    if ('context' in opts) {\n      throw Error('pass context to RiScript.grammar() or new RiGrammar() instead');\n    }\n\n    // TODO: clone opts here ?\n    opts.visitor = opts.visitor || new RiScript.Visitor(this.scripting);\n    opts.visitor.context = this.context || {};\n    opts.input = this._toScript(opts);\n\n    return this.scripting._evaluate(opts);\n  }\n\n  addRule(name, def) {\n    this._validateRule(name, def);\n    this.rules[name] = def;\n    return this;\n  }\n\n  setRules(rules) {\n    if (typeof rules === 'undefined') throw Error('undefined rules');\n    this.rules = {};\n    let incoming = typeof rules === 'string' ? parseJSON(rules) : rules;\n    Object.entries(incoming).forEach((e) => this.addRule(...e));\n    return this;\n  }\n\n  removeRule(name) {\n    if (name in this.rules) {\n      delete this.rules[name];\n    }\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rules, ...arguments);\n  }\n\n  toString(opts = {}) {\n    let replacer = opts.replacer || 0;\n    let space = opts.space || 2;\n    let lb = opts?.linebreak;\n    let res = this.toJSON(replacer, space);\n    if (lb) res = res.replace(/\\n/g, lb);\n    return res;\n  }\n\n  static fromJSON(str, opts) {\n    return new RiGrammar(JSON.parse(str), opts);\n  }\n\n  /* \n    Convert grammar to inline rules;\n    rules are dynamic, unless otherwise specified with leading #\n  */\n  _toScript(opts) {\n    let script = '',\n      start = opts.start || 'start';\n    let { Symbols } = this.scripting;\n\n    if (start.startsWith(Symbols.DYNAMIC)) {\n      start = start.substring(Symbols.DYNAMIC.length);\n    }\n\n    if (start.startsWith(Symbols.STATIC)) {\n      start = start.substring(Symbols.STATIC.length);\n    }\n\n    if (!(start in this.rules || Symbols.STATIC + start in this.rules)) {\n      throw Error('Rule: \"' + start + '\" not found in grammar');\n    }\n\n    Object.entries(this.rules).forEach(([name, rule], i) => {\n      while (name.startsWith(Symbols.DYNAMIC)) {\n        name = name.substring(1);\n      }\n      if (!name.startsWith(Symbols.STATIC)) {\n        name = Symbols.DYNAMIC + name;\n      }\n      // console.log(i,name);\n      if (!this.scripting.ChoiceWrapRE.test(rule)) {\n        // let orig = rule;\n        rule = Symbols.OPEN_CHOICE + rule + Symbols.CLOSE_CHOICE;\n        // console.log('WRAPPING: ' + orig + '->' + rule);\n      }\n      script += `${name}=${rule}\\n`;\n    });\n\n    if (opts.trace) console.log('Grammar:\\n' + script.replace(/^\\$/gm, '  $'));\n\n    script += `${Symbols.DYNAMIC}${start}`;\n    return script;\n  }\n\n  _validateRule(name, def) {\n    if (typeof name !== 'string' || name.length === 0) {\n      throw Error('expected [string] name');\n    }\n\n    if (typeof def === 'undefined') {\n      throw Error('undefined rule def: ' + name);\n    }\n    let { Symbols } = this.scripting;\n\n    if (name.startsWith(Symbols.DYNAMIC)) {\n      name = name.substring(Symbols.DYNAMIC.length);\n      throw Error(\n        'Grammar rules are dynamic by default;' +\n          \" if you need a static rule, use '\" +\n          Symbols.STATIC +\n          name +\n          \"', otherwise just use '\" +\n          name +\n          \"'.\"\n      );\n    }\n  }\n}\n\nfunction parseJSON(json) {\n  if (typeof json === 'string') {\n    try {\n      return JSON.parse(json);\n    } catch (e) {\n      throw Error(\n        'RiGrammar appears to be invalid JSON,' +\n          ' please check it at http://jsonlint.com/\\n' +\n          json\n      );\n    }\n  }\n}\n\nexport { RiGrammar };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,4BAAAA,UAAAC,SAAA;AACC,OAAC,SAASC,OAAM;AAGhB,YAAIC,eAAc,OAAOH,YAAW,YAAYA;AAGhD,YAAII,cAAa,OAAOH,WAAU,YAAYA,WAC7CA,QAAO,WAAWE,gBAAeF;AAIlC,YAAII,cAAa,OAAO,UAAU,YAAY;AAC9C,YAAIA,YAAW,WAAWA,eAAcA,YAAW,WAAWA,aAAY;AACzE,UAAAH,QAAOG;AAAA,QACR;AAKA,YAAI,qBAAqB;AAIzB,YAAI,sBAAsB;AAI1B,YAAI,oBAAoB;AAExB,YAAI,sBAAsB;AAC1B,YAAI,YAAY,EAAC,QAAO,OAAM,UAAS,QAAO,UAAS,OAAM,UAAS,OAAM,UAAS,MAAK,UAAS,MAAK,UAAS,MAAK,UAAS,OAAM,UAAS,kBAAiB,UAAS,WAAU,UAAS,aAAY,UAAS,QAAO,UAAS,UAAS,KAAK,OAAM,MAAK,WAAU,UAAS,UAAS,UAAS,eAAc,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,UAAS,UAAS,QAAO,UAAS,SAAQ,QAAO,QAAO,gBAAe,cAAa,UAAS,SAAQ,KAAI,UAAS,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,KAAI,SAAQ,KAAI,QAAO,UAAS,SAAQ,KAAI,SAAQ,UAAS,UAAS,KAAI,QAAO,QAAO,SAAQ,KAAI,SAAQ,QAAO,UAAS,KAAI,UAAS,UAAS,QAAO,UAAS,QAAO,QAAO,UAAS,KAAK,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,KAAI,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,QAAO,SAAQ,QAAO,SAAQ,KAAI,QAAO,KAAI,QAAO,KAAI,QAAO,KAAI,QAAO,KAAI,QAAO,KAAI,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,QAAO,QAAO,QAAO,QAAO,KAAI,UAAS,KAAI,OAAM,KAAI,OAAM,aAAY,MAAK,KAAI,OAAM,KAAI,OAAM,KAAI,UAAS,UAAS,UAAS,UAAS,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,KAAI,SAAQ,QAAO,SAAQ,UAAS,SAAQ,KAAI,OAAM,QAAO,QAAO,UAAS,SAAQ,UAAS,OAAM,QAAO,OAAM,UAAS,QAAO,UAAS,SAAQ,QAAO,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,QAAO,OAAM,QAAO,QAAO,QAAO,OAAM,UAAS,UAAS,UAAS,MAAK,UAAS,MAAK,UAAS,OAAM,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,gBAAe,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,cAAa,UAAS,YAAW,UAAS,OAAM,UAAS,cAAa,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,OAAM,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,WAAU,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,gBAAe,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,OAAM,UAAS,MAAK,UAAS,SAAQ,UAAS,MAAK,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,UAAS,UAAS,OAAM,KAAI,QAAO,QAAO,MAAK,QAAO,OAAM,QAAO,SAAQ,KAAI,MAAK,UAAS,OAAM,WAAU,QAAO,KAAI,UAAS,UAAS,MAAK,WAAU,OAAM,UAAS,SAAQ,KAAI,MAAK,UAAS,OAAM,WAAU,QAAO,QAAO,OAAM,KAAI,QAAO,QAAO,UAAS,UAAS,SAAQ,UAAS,MAAK,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,OAAM,gBAAe,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,OAAM,UAAS,QAAO,UAAS,OAAM,UAAS,QAAO,UAAS,OAAM,UAAS,MAAK,UAAS,OAAM,gBAAe,QAAO,UAAS,OAAM,gBAAe,QAAO,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,WAAU,UAAS,SAAQ,UAAS,YAAW,UAAS,YAAW,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,OAAM,UAAS,QAAO,gBAAe,SAAQ,UAAS,QAAO,gBAAe,QAAO,UAAS,MAAK,gBAAe,OAAM,UAAS,OAAM,UAAS,MAAK,UAAS,QAAO,gBAAe,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,MAAK,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,gBAAe,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,aAAY,gBAAe,QAAO,UAAS,QAAO,gBAAe,SAAQ,UAAS,SAAQ,gBAAe,UAAS,UAAS,SAAQ,gBAAe,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,SAAQ,UAAS,QAAO,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,gBAAe,WAAU,UAAS,MAAK,UAAS,OAAM,gBAAe,QAAO,UAAS,MAAK,UAAS,OAAM,gBAAe,QAAO,UAAS,MAAK,gBAAe,OAAM,UAAS,MAAK,gBAAe,OAAM,gBAAe,QAAO,UAAS,OAAM,UAAS,OAAM,gBAAe,QAAO,UAAS,MAAK,gBAAe,QAAO,gBAAe,OAAM,UAAS,MAAK,gBAAe,QAAO,gBAAe,OAAM,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,MAAK,UAAS,QAAO,UAAS,MAAK,UAAS,QAAO,UAAS,MAAK,UAAS,OAAM,UAAS,MAAK,UAAS,OAAM,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,gBAAe,oBAAmB,UAAS,OAAM,UAAS,QAAO,gBAAe,SAAQ,UAAS,OAAM,UAAS,QAAO,gBAAe,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,gBAAe,UAAS,UAAS,SAAQ,gBAAe,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,gBAAe,mBAAkB,UAAS,SAAQ,gBAAe,qBAAoB,UAAS,UAAS,UAAS,WAAU,UAAS,UAAS,UAAS,WAAU,UAAS,SAAQ,gBAAe,UAAS,UAAS,SAAQ,gBAAe,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,OAAM,UAAS,OAAM,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,gBAAe,WAAU,UAAS,SAAQ,UAAS,UAAS,gBAAe,WAAU,UAAS,UAAS,UAAS,QAAO,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,WAAU,UAAS,SAAQ,UAAS,SAAQ,UAAS,OAAM,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,MAAK,gBAAe,OAAM,UAAS,MAAK,gBAAe,OAAM,gBAAe,QAAO,UAAS,OAAM,UAAS,OAAM,gBAAe,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,WAAU,gBAAe,YAAW,UAAS,WAAU,UAAS,WAAU,UAAS,SAAQ,gBAAe,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,OAAM,UAAS,WAAU,UAAS,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,YAAW,UAAS,YAAW,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,YAAW,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,YAAW,UAAS,mBAAkB,UAAS,oBAAmB,UAAS,aAAY,UAAS,cAAawBAAuB,UAAS,QAAO,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,OAAM,UAAS,OAAM,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,oBAAmB,UAAS,qBAAoB,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,UAAS,UAAS,QAAO,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,qBAAoB,UAAS,YAAW,UAAS,WAAU,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,YAAW,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,OAAM,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,YAAW,UAAS,cAAa,UAAS,gBAAe,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,WAAU,UAAS,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,SAAQ,gBAAe,UAAS,UAAS,WAAU,UAAS,QAAO,UAAS,QAAO,UAAS,WAAU,UAAS,UAAS,UAAS,WAAU,UAAS,WAAU,UAAS,UAAS,UAAS,WAAU,UAAS,YAAW,UAAS,YAAW,UAAS,YAAW,UAAS,mBAAkB,UAAS,qBAAoB,UAAS,uBAAsB,UAAS,oBAAmB,UAAS,iBAAgB,UAAS,kBAAiB,UAAS,oBAAmB,UAAS,sBAAqB,UAAS,qBAAoB,UAAS,sBAAqB,UAAS,mBAAkB,UAAS,qBAAoB,UAAS,iBAAgB,UAAS,kBAAiB,UAAS,oBAAmB,UAAS,sBAAqB,UAAS,qBAAoB,UAAS,sBAAqB,UAAS,mBAAkB,UAAS,qBAAoB,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,gBAAe,UAAS,SAAQ,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,WAAU,UAAS,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,WAAU,UAAS,UAAS,UAAS,YAAW,UAAS,QAAO,UAAS,SAAQ,UAAS,WAAU,UAAS,WAAU,UAAS,YAAW,UAAS,YAAW,UAAS,YAAW,UAAS,YAAW,UAAS,YAAW,UAAS,YAAW,UAAS,YAAW,UAAS,YAAW,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,UAAS,YAAW,UAAS,YAAW,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,WAAU,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,OAAM,UAAS,OAAM,UAAS,WAAU,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,YAAW,UAAS,mBAAkB,gBAAe,sBAAqB,UAAS,oBAAmB,gBAAe,uBAAsB,UAAS,UAAS,UAAS,YAAW,UAAS,WAAU,UAAS,UAAS,UAAS,YAAW,UAAS,YAAW,UAAS,QAAO,UAAS,eAAc,UAAS,QAAO,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,YAAW,UAAS,YAAW,UAAS,SAAQ,UAAS,YAAW,UAAS,YAAW,UAAS,WAAU,UAAS,YAAW,UAAS,WAAU,UAAS,YAAW,UAAS,WAAU,UAAS,YAAW,UAAS,WAAU,UAAS,UAAS,UAAS,WAAU,UAAS,WAAU,UAAS,UAAS,UAAS,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,YAAW,UAAS,UAAS,UAAS,WAAU,UAAS,WAAU,UAAS,YAAW,UAAS,UAAS,UAAS,QAAO,UAAS,WAAU,UAAS,YAAW,UAAS,WAAU,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,YAAW,UAAS,YAAW,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,WAAU,UAAS,OAAM,UAAS,MAAK,UAAS,UAAS,UAAS,QAAO,UAAS,WAAU,UAAS,YAAW,UAAS,QAAO,UAAS,OAAM,UAAS,QAAO,UAAS,OAAM,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,WAAU,gBAAe,YAAW,UAAS,UAAS,UAAS,UAAS,UAAS,OAAM,gBAAe,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,WAAU,UAAS,SAAQ,UAAS,SAAQ,UAAS,WAAU,UAAS,WAAU,UAAS,OAAM,gBAAe,QAAO,UAAS,OAAM,gBAAe,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,WAAU,UAAS,WAAU,UAAS,YAAW,UAAS,YAAW,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,UAAS,QAAO,UAAS,OAAM,UAAS,OAAM,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,OAAM,UAAS,OAAM,UAAS,UAAS,UAAS,UAAS,UAAS,OAAM,UAAS,OAAM,UAAS,UAAS,UAAS,UAAS,UAAS,MAAK,UAAS,MAAK,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,YAAW,gBAAe,qBAAoB,UAAS,kBAAiB,gBAAe,2BAA0B,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,gBAAe,SAAQ,UAAS,QAAO,gBAAe,SAAQ,UAAS,SAAQ,UAAS,OAAM,gBAAe,QAAO,UAAS,OAAM,gBAAe,QAAO,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,MAAK,UAAS,MAAK,UAAS,UAAS,UAAS,UAAS,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,UAAS,QAAO,gBAAe,SAAQ,UAAS,QAAO,gBAAe,SAAQ,UAAS,UAAS,UAAS,UAAS,gBAAe,UAAS,UAAS,SAAQ,gBAAe,UAAS,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,WAAU,UAAS,WAAU,UAAS,SAAQ,UAAS,WAAU,UAAS,QAAO,UAAS,SAAQ,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,QAAO,UAAS,OAAM,UAAS,QAAO,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,gBAAe,UAAS,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,QAAO,UAAS,QAAO,QAAO,KAAI,UAAS,QAAO,SAAQ,QAAO,OAAM,UAAS,QAAO,QAAO,QAAO,QAAO,QAAO,UAAS,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,QAAO,UAAS,UAAS,UAAS,UAAS,QAAO,QAAO,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,QAAO,QAAO,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,SAAQ,QAAO,SAAQ,QAAO,SAAQ,QAAO,SAAQ,QAAO,QAAO,QAAO,QAAO,QAAO,UAAS,QAAO,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,QAAO,SAAQ,QAAO,SAAQ,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,UAAS,QAAO,aAAe,OAAM,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,UAAS,OAAM,aAAe,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,aAAe,OAAM,UAAS,MAAK,aAAe,QAAO,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,UAAS,MAAK,aAAe,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,OAAM,QAAO,OAAM,UAAS,MAAK,UAAS,QAAO,aAAe,OAAM,aAAe,QAAO,UAAS,QAAO,aAAe,OAAM,aAAe,QAAO,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,SAAQ,QAAO,SAAQ,UAAS,UAAS,UAAS,UAAS,QAAO,QAAO,QAAO,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,MAAK,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,aAAe,OAAM,UAAS,WAAU,aAAe,QAAO,aAAe,QAAO,UAAS,QAAO,UAAS,OAAM,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,UAAS,MAAK,aAAe,QAAO,UAAS,QAAO,UAAS,MAAK,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,SAAQ,QAAO,SAAQ,QAAO,QAAO,QAAO,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,UAAS,UAAS,UAAS,UAAS,aAAe,OAAM,aAAe,QAAO,UAAS,OAAM,aAAe,QAAO,UAAS,QAAO,aAAe,OAAM,aAAe,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,UAAS,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,UAAS,QAAO,aAAe,QAAO,aAAe,OAAM,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,OAAM,UAAS,OAAM,aAAe,QAAO,aAAe,OAAM,UAAS,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,QAAO,QAAO,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,SAAQ,QAAO,SAAQ,QAAO,QAAO,QAAO,QAAO,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,UAAS,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,UAAS,QAAO,UAAS,UAAS,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,UAAS,QAAO,UAAS,MAAK,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,UAAS,MAAK,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,SAAQ,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,SAAQ,QAAO,SAAQ,UAAS,SAAQ,UAAS,SAAQ,QAAO,QAAO,QAAO,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,UAAS,SAAQ,UAAS,SAAQ,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,aAAe,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,QAAO,UAAS,QAAO,UAAS,UAAS,SAAQ,UAAS,SAAQ,QAAO,QAAO,UAAS,QAAO,aAAe,QAAO,aAAe,OAAM,aAAe,QAAO,UAAS,OAAM,UAAS,QAAO,aAAe,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,QAAO,SAAQ,QAAO,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAQ,UAAS,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,QAAO,UAAS,OAAM,UAAS,OAAM,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,MAAK,QAAO,SAAQ,UAAS,MAAK,UAAS,MAAK,UAAS,MAAK,UAAS,MAAK,UAAS,MAAK,UAAS,WAAU,UAAS,WAAU,UAAS,MAAK,UAAS,OAAM,UAAS,MAAK,UAAS,OAAM,UAAS,QAAO,UAAS,OAAM,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,UAAS,WAAU,UAAS,QAAO,UAAS,OAAM,UAAS,QAAO,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,SAAQ,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,UAAS,QAAO,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,QAAO,UAAS,QAAO,UAAS,OAAM,UAAS,OAAM,UAAS,QAAO,UA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","names":["exports","module","root","freeExports","freeModule","freeGlobal","hasOwnProperty","has","object","merge","defaults","key","string","decode","he","clone","map","flatten2","isIndex","ProcessingMode","root","OperatorType","$eq","$gt","$gte","$lt","$lte","$ne","Action","self","eq","compare","values","$eq","$gt","$gte","$lt","$lte","$ne","key","$nin","$elemMatch","$slice","$elemMatch","$slice","$all","$and","$elemMatch","$eq","$exists","$gt","$gte","$in","$lt","$lte","$mod","$ne","$nin","$not","$or","$regex","$size","$type","$all","$elemMatch","$size","$eq","$gt","$gte","$in","$lt","$lte","$ne","$nin","$exists","$type","$mod","$regex","$and","$or","$or","$not","Symbol","objectProto","nativeObjectToString","symToStringTag","isObjectLike","isArray","isObject","INFINITY","toInteger","isFunction","funcProto","objectProto","funcToString","hasOwnProperty","getValue","WeakMap","objectProto","hasOwnProperty","MAX_SAFE_INTEGER","objectProto","objectProto","hasOwnProperty","Buffer","argsTag","funcTag","freeExports","freeModule","moduleExports","isTypedArray","objectProto","hasOwnProperty","objectProto","hasOwnProperty","objectProto","hasOwnProperty","objectProto","hasOwnProperty","objectProto","hasOwnProperty","objectProto","hasOwnProperty","HASH_UNDEFINED","Map","map","memoize","toString","INFINITY","values","flatten","freeExports","freeModule","moduleExports","Buffer","objectProto","propertyIsEnumerable","nativeGetSymbols","Promise","Set","mapTag","objectTag","setTag","weakMapTag","dataViewTag","objectProto","hasOwnProperty","Uint8Array","symbolProto","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","mapTag","setTag","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","key","CLONE_SYMBOLS_FLAG","HASH_UNDEFINED","values","othValue","map","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","COMPARE_PARTIAL_FLAG","objectProto","hasOwnProperty","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","objectProto","hasOwnProperty","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","collection","objectProto","hasOwnProperty","LARGE_ARRAY_SIZE","values","includes","values","collection","collection","nativeMax","collection","objectProto","hasOwnProperty","groupBy","objectProto","hasOwnProperty","has","stringTag","isString","nativeMax","nativeMax","mapTag","setTag","objectProto","hasOwnProperty","isEmpty","regexpTag","isRegExp","FUNC_ERROR_TEXT","collection","collection","INFINITY","values","LARGE_ARRAY_SIZE","includes","map","LexerDefinitionErrorType","msg","currConfig","tokenLabel","hasTokenLabel","hasTokenLabel","hasTokenLabel","tokenLabel","getExtraProductionArgument","PROD_TYPE","tokenMatcher","keys","prefixKeys","collectorVisitor","resolveGrammar","validateGrammar","CstVisitorDefinitionError","allTokenTypes","invokeRuleWithTry","ParserDefinitionErrorType","resolveGrammar","validateGrammar","result","he","keys","last","reject","text","first"]}